{"ast":null,"code":"import { useRoute } from 'vue-router';\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'PortfolioDetil',\n  setup() {\n    const route = useRoute();\n    const id = route.params.id;\n    const isEnglish = ref(false);\n    const work = ref(null);\n    const coverUrl = ref('');\n    const descriptionText = ref('');\n    const resolveInitialLang = () => {\n      // URL query 覆蓋 localStorage\n      const q = route.query.lang;\n      if (q === 'en') return true;\n      if (q === 'zh') return false;\n      try {\n        const saved = localStorage.getItem('lang');\n        return saved === 'en';\n      } catch {\n        return false;\n      }\n    };\n    const pickFirstNonEmpty = (obj, keys) => {\n      for (const key of keys) {\n        const val = obj && typeof obj[key] === 'string' ? obj[key] : '';\n        if (val && val.trim().length > 0) return val;\n      }\n      return '';\n    };\n    const stripHtml = html => {\n      if (!html || typeof html !== 'string') return '';\n      const withNewlines = html.replace(/<br\\s*\\/?>(\\r\\n)?/gi, '\\n');\n      const temp = document.createElement('div');\n      temp.innerHTML = withNewlines;\n      const text = temp.textContent || temp.innerText || '';\n      return text;\n    };\n    const recalcDerived = () => {\n      coverUrl.value = work.value ? `https://unzip-clab-api.clab.org.tw/${work.value.photo_1}` : '';\n      const langBlock = isEnglish.value ? work.value?.work_en : work.value?.work_zh;\n      const raw = pickFirstNonEmpty(langBlock || {}, ['description', 'proposal', 'note', 'summary', 'content', 'text']);\n      descriptionText.value = stripHtml(raw);\n    };\n    const loadFromLocal = () => {\n      try {\n        const key = `work_${id}`;\n        const raw = localStorage.getItem(key);\n        if (!raw) return false;\n        const parsed = JSON.parse(raw);\n        work.value = parsed;\n        recalcDerived();\n        return true;\n      } catch (e) {\n        console.error('Failed to parse work data from localStorage:', e);\n        return false;\n      }\n    };\n    const fetchFromApi = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`https://unzip-clab-api.clab.org.tw/api/v1/works/${id}`);\n        const entity = Array.isArray(data?.results) ? data.results[0] : data || null;\n        if (entity) {\n          work.value = entity;\n          recalcDerived();\n        }\n      } catch (e) {\n        console.error('Failed to fetch work by id:', e);\n      }\n    };\n    const handleStorage = e => {\n      if (e.key === 'lang') {\n        isEnglish.value = e.newValue === 'en';\n        recalcDerived();\n      }\n    };\n    onMounted(async () => {\n      isEnglish.value = resolveInitialLang();\n      const ok = loadFromLocal();\n      if (!ok) await fetchFromApi();\n      window.addEventListener('storage', handleStorage);\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('storage', handleStorage);\n    });\n    return {\n      work,\n      coverUrl,\n      isEnglish,\n      descriptionText\n    };\n  }\n};","map":{"version":3,"names":["useRoute","ref","onMounted","onBeforeUnmount","axios","name","setup","route","id","params","isEnglish","work","coverUrl","descriptionText","resolveInitialLang","q","query","lang","saved","localStorage","getItem","pickFirstNonEmpty","obj","keys","key","val","trim","length","stripHtml","html","withNewlines","replace","temp","document","createElement","innerHTML","text","textContent","innerText","recalcDerived","value","photo_1","langBlock","work_en","work_zh","raw","loadFromLocal","parsed","JSON","parse","e","console","error","fetchFromApi","data","get","entity","Array","isArray","results","handleStorage","newValue","ok","window","addEventListener","removeEventListener"],"sources":["/Users/linhankuan/fvl2025/src/views/PortfolioDetil.vue"],"sourcesContent":["<!-- src/views/PortfolioDetil.vue -->\n<template>\n  <div class=\"work-detail\" v-if=\"work\">\n    <div class=\"work-hero\">\n      <img :src=\"coverUrl\" alt=\"cover\" />\n    </div>\n    <div class=\"work-content\">\n      <h1 class=\"work-title\">{{ isEnglish ? work?.work_en?.title : work?.work_zh?.title }}</h1>\n      <div class=\"work-meta\">\n        <span>{{ isEnglish ? 'Artist' : '藝術家' }}：{{ isEnglish ? work?.work_en?.artist : work?.work_zh?.artist }}</span>\n      </div>\n      <!-- <div class=\"work-description\">{{ descriptionText }}</div> -->\n      <div class=\"work-description\">{{ work.groups.groups_zh }}</div>\n    </div>\n  </div>\n  <div v-else class=\"work-detail loading\">Loading...</div>\n</template>\n\n<script>\nimport { useRoute } from 'vue-router';\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport axios from 'axios';\n\nexport default {\n  name: 'PortfolioDetil',\n  setup() {\n    const route = useRoute();\n    const id = route.params.id;\n\n    const isEnglish = ref(false);\n    const work = ref(null);\n    const coverUrl = ref('');\n    const descriptionText = ref('');\n\n    const resolveInitialLang = () => {\n      // URL query 覆蓋 localStorage\n      const q = route.query.lang;\n      if (q === 'en') return true;\n      if (q === 'zh') return false;\n      try {\n        const saved = localStorage.getItem('lang');\n        return saved === 'en';\n      } catch {\n        return false;\n      }\n    };\n\n    const pickFirstNonEmpty = (obj, keys) => {\n      for (const key of keys) {\n        const val = obj && typeof obj[key] === 'string' ? obj[key] : '';\n        if (val && val.trim().length > 0) return val;\n      }\n      return '';\n    };\n\n    const stripHtml = (html) => {\n      if (!html || typeof html !== 'string') return '';\n      const withNewlines = html.replace(/<br\\s*\\/?>(\\r\\n)?/gi, '\\n');\n      const temp = document.createElement('div');\n      temp.innerHTML = withNewlines;\n      const text = temp.textContent || temp.innerText || '';\n      return text;\n    };\n\n    const recalcDerived = () => {\n      coverUrl.value = work.value ? `https://unzip-clab-api.clab.org.tw/${work.value.photo_1}` : '';\n      const langBlock = isEnglish.value ? work.value?.work_en : work.value?.work_zh;\n      const raw = pickFirstNonEmpty(langBlock || {}, ['description', 'proposal', 'note', 'summary', 'content', 'text']);\n      descriptionText.value = stripHtml(raw);\n    };\n\n    const loadFromLocal = () => {\n      try {\n        const key = `work_${id}`;\n        const raw = localStorage.getItem(key);\n        if (!raw) return false;\n        const parsed = JSON.parse(raw);\n        work.value = parsed;\n        recalcDerived();\n        return true;\n      } catch (e) {\n        console.error('Failed to parse work data from localStorage:', e);\n        return false;\n      }\n    };\n\n    const fetchFromApi = async () => {\n      try {\n        const { data } = await axios.get(`https://unzip-clab-api.clab.org.tw/api/v1/works/${id}`);\n        const entity = Array.isArray(data?.results) ? data.results[0] : (data || null);\n        if (entity) {\n          work.value = entity;\n          recalcDerived();\n        }\n      } catch (e) {\n        console.error('Failed to fetch work by id:', e);\n      }\n    };\n\n    const handleStorage = (e) => {\n      if (e.key === 'lang') {\n        isEnglish.value = e.newValue === 'en';\n        recalcDerived();\n      }\n    };\n\n    onMounted(async () => {\n      isEnglish.value = resolveInitialLang();\n      const ok = loadFromLocal();\n      if (!ok) await fetchFromApi();\n      window.addEventListener('storage', handleStorage);\n    });\n\n    onBeforeUnmount(() => {\n      window.removeEventListener('storage', handleStorage);\n    });\n\n    return { work, coverUrl, isEnglish, descriptionText };\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.work-detail {\n  background: #0e0e0e;\n  color: #f2f2f2;\n  min-height: 100vh;\n}\n.work-detail.loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.work-hero {\n  width: 100%;\n  height: 60vh;\n  background: #000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.work-hero img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n.work-content {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 32px 20px 64px;\n}\n.work-title {\n  font-size: 2rem;\n  margin-bottom: 16px;\n}\n.work-meta {\n  font-size: 0.95rem;\n  color: #aaa;\n  margin-bottom: 20px;\n}\n.work-description {\n  line-height: 1.8;\n  color: #ddd;\n  white-space: pre-wrap;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}