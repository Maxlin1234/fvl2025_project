{"ast":null,"code":"import * as THREE from 'three';\nexport default {\n  name: 'Ban-ner',\n  mounted() {\n    //cursor\n    let cursor = document.querySelector('cursor');\n    document.addEventListener('mousemove', e => {\n      cursor.style.left = e.pageX + 'px';\n      cursor.style.top = e.pageY + 'px';\n    });\n    const container = this.$el;\n    const loader = new THREE.TextureLoader();\n    loader.load(require('@/assets/2025banner.jpg'), texture => {\n      initScene(texture);\n    });\n    const vertexShader = `\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      }\n    `;\n    const fragmentShader = `\n      varying vec2 vUv;\n      uniform sampler2D u_texture;\n      uniform vec2 u_mouse;\n      uniform vec2 u_prevMouse;\n      uniform float u_aberrationIntensity;\n\n      void main() {\n        vec2 gridUV = floor(vUv * vec2(20.0)) / vec2(20.0);\n        vec2 centerOfPixel = gridUV + vec2(1.0 / 20.0);\n        vec2 mouseDirection = u_mouse - u_prevMouse;\n        vec2 pixelToMouse = centerOfPixel - u_mouse;\n        float dist = length(pixelToMouse);\n        float strength = smoothstep(0.2, 0.0, dist);\n        vec2 uvOffset = strength * -mouseDirection * 2.5;\n        vec2 uv = vUv - uvOffset;\n\n        vec4 r = texture2D(u_texture, uv + vec2(strength * u_aberrationIntensity * 0.00, 0.0));\n        vec4 g = texture2D(u_texture, uv + vec2(strength * u_aberrationIntensity * 0.01, 0.0));\n        vec4 b = texture2D(u_texture, uv - vec2(strength * u_aberrationIntensity * 0.01, 0.0));\n\n        gl_FragColor = vec4(r.r, g.g, b.b, 1.0);\n        \n      }\n    `;\n    let scene, camera, renderer, plane;\n    const mouse = new THREE.Vector2(0.2, 0.2);\n    const prevMouse = new THREE.Vector2(0.5, 0.5);\n    let aberration = 0;\n    function initScene(texture) {\n      // renderer\n      renderer = new THREE.WebGLRenderer({\n        alpha: true\n      });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.domElement.style.position = 'absolute';\n      renderer.domElement.style.inset = '0';\n      container.appendChild(renderer.domElement);\n\n      // scene & camera\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 10);\n      camera.position.z = 1;\n      const uniforms = {\n        u_texture: {\n          value: texture\n        },\n        u_mouse: {\n          value: mouse.clone()\n        },\n        u_prevMouse: {\n          value: prevMouse.clone()\n        },\n        u_aberrationIntensity: {\n          value: 0.0\n        }\n      };\n      const fov = camera.fov * Math.PI / 180;\n      const height = 2 * Math.tan(fov / 2) * camera.position.z;\n      const width = height * camera.aspect;\n      const geometry = new THREE.PlaneGeometry(width, height);\n      const material = new THREE.ShaderMaterial({\n        uniforms,\n        vertexShader,\n        fragmentShader\n      });\n      plane = new THREE.Mesh(geometry, material);\n      scene.add(plane);\n      animate();\n      window.addEventListener('resize', onResize);\n      container.addEventListener('mousemove', onMouseMove);\n    }\n    function onMouseMove(e) {\n      const rect = container.getBoundingClientRect();\n      prevMouse.copy(mouse);\n      mouse.x = (e.clientX - rect.left) / rect.width;\n      mouse.y = 1 - (e.clientY - rect.top) / rect.height;\n      aberration = 1.0;\n    }\n    function onResize() {\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n    }\n    function animate() {\n      requestAnimationFrame(animate);\n      plane.material.uniforms.u_mouse.value.copy(mouse);\n      plane.material.uniforms.u_prevMouse.value.copy(prevMouse);\n      aberration = Math.max(0.0, aberration - 0.005);\n      plane.material.uniforms.u_aberrationIntensity.value = aberration;\n      renderer.render(scene, camera);\n    }\n  }\n};","map":{"version":3,"names":["THREE","name","mounted","cursor","document","querySelector","addEventListener","e","style","left","pageX","top","pageY","container","$el","loader","TextureLoader","load","require","texture","initScene","vertexShader","fragmentShader","scene","camera","renderer","plane","mouse","Vector2","prevMouse","aberration","WebGLRenderer","alpha","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","domElement","position","inset","appendChild","Scene","PerspectiveCamera","z","uniforms","u_texture","value","u_mouse","clone","u_prevMouse","u_aberrationIntensity","fov","Math","PI","height","tan","width","aspect","geometry","PlaneGeometry","material","ShaderMaterial","Mesh","add","animate","onResize","onMouseMove","rect","getBoundingClientRect","copy","x","clientX","y","clientY","updateProjectionMatrix","requestAnimationFrame","max","render"],"sources":["/Users/linhankuan/fvl2025/src/components/Banner.vue"],"sourcesContent":["<template>\n  <div id=\"imageContainer\"></div>\n  <div class=\"cursor\"></div>\n</template>\n\n<script>\nimport * as THREE from 'three';\n\nexport default {\n  name: 'Ban-ner',\n  mounted() {\n    //cursor\n    let cursor = document.querySelector('cursor');\n    document.addEventListener('mousemove',(e)=>{\n      cursor.style.left = e.pageX + 'px';\n      cursor.style.top = e.pageY + 'px';\n    })\n    const container = this.$el;\n\n    const loader = new THREE.TextureLoader();\n    loader.load(require('@/assets/2025banner.jpg'), (texture) => {\n      initScene(texture);\n    });\n\n    const vertexShader = `\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      }\n    `;\n\n    const fragmentShader = `\n      varying vec2 vUv;\n      uniform sampler2D u_texture;\n      uniform vec2 u_mouse;\n      uniform vec2 u_prevMouse;\n      uniform float u_aberrationIntensity;\n\n      void main() {\n        vec2 gridUV = floor(vUv * vec2(20.0)) / vec2(20.0);\n        vec2 centerOfPixel = gridUV + vec2(1.0 / 20.0);\n        vec2 mouseDirection = u_mouse - u_prevMouse;\n        vec2 pixelToMouse = centerOfPixel - u_mouse;\n        float dist = length(pixelToMouse);\n        float strength = smoothstep(0.2, 0.0, dist);\n        vec2 uvOffset = strength * -mouseDirection * 2.5;\n        vec2 uv = vUv - uvOffset;\n\n        vec4 r = texture2D(u_texture, uv + vec2(strength * u_aberrationIntensity * 0.00, 0.0));\n        vec4 g = texture2D(u_texture, uv + vec2(strength * u_aberrationIntensity * 0.01, 0.0));\n        vec4 b = texture2D(u_texture, uv - vec2(strength * u_aberrationIntensity * 0.01, 0.0));\n\n        gl_FragColor = vec4(r.r, g.g, b.b, 1.0);\n        \n      }\n    `;\n\n    let scene, camera, renderer, plane;\n    const mouse = new THREE.Vector2(0.2, 0.2);\n    const prevMouse = new THREE.Vector2(0.5, 0.5);\n    let aberration = 0;\n\n    function initScene(texture) {\n      // renderer\n      renderer = new THREE.WebGLRenderer({ alpha: true });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.domElement.style.position = 'absolute';\n      renderer.domElement.style.inset = '0';\n      container.appendChild(renderer.domElement);\n\n      // scene & camera\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 10);\n      camera.position.z = 1;\n\n      const uniforms = {\n        u_texture: { value: texture },\n        u_mouse: { value: mouse.clone() },\n        u_prevMouse: { value: prevMouse.clone() },\n        u_aberrationIntensity: { value: 0.0 }\n      };\n      const fov = (camera.fov * Math.PI) / 180;\n      const height = 2 * Math.tan(fov / 2) * camera.position.z;\n      const width = height * camera.aspect;\n      const geometry = new THREE.PlaneGeometry(width, height);\n\n\n      \n      const material = new THREE.ShaderMaterial({\n        uniforms,\n        vertexShader,\n        fragmentShader\n      });\n\n      \n\n      plane = new THREE.Mesh(geometry, material);\n      scene.add(plane);\n\n      animate();\n      window.addEventListener('resize', onResize);\n      container.addEventListener('mousemove', onMouseMove);\n    }\n\n\n    function onMouseMove(e) {\n      const rect = container.getBoundingClientRect();\n      prevMouse.copy(mouse);\n      mouse.x = (e.clientX - rect.left) / rect.width;\n      mouse.y = 1 - (e.clientY - rect.top) / rect.height;\n      aberration = 1.0;\n    }\n\n    function onResize() {\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n\n      plane.material.uniforms.u_mouse.value.copy(mouse);\n      plane.material.uniforms.u_prevMouse.value.copy(prevMouse);\n      aberration = Math.max(0.0, aberration - 0.005);\n      plane.material.uniforms.u_aberrationIntensity.value = aberration;\n\n      renderer.render(scene, camera);\n    }\n    \n\n  }\n};\n</script>\n\n<style>\n.cursor{\n  position: fixed;\n  width: 20px;\n  height: 20px;\n  background-color: #fff;\n  border-radius: 50%;\n  pointer-events: none;\n}\n#imageContainer {\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n}\n\n@media (max-width:768px){\n  #imageContainer {\n    height: 100svh; /* 避免手機瀏覽器 UI 影響顯示高度 */\n  }\n}\n\n\ncanvas {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  pointer-events: none;\n  position: absolute;\n  display: block;\n  inset: 0;\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}