{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"particles\",\n  ref: \"threeContainer\",\n  id: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [_createElementVNode(\"p\", null, \"Hello world\", -1 /* CACHED */)]), 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","id","_createElementBlock","_hoisted_1","_cache","_createElementVNode"],"sources":["/Users/linhankuan/fvl2025/src/components/BannerParticles.vue"],"sourcesContent":["<template>\n  <div class=\"particles\" ref=\"threeContainer\" id=\"container\">\n    <p>Hello world</p>\n  </div>\n</template>\n\n<script>\nimport * as THREE from 'three';\n\nexport default {\n  name: 'BannerPt',\n  mounted() {\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      10\n    );\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true,preserveDrawingBuffer :true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0x000000, 0); // 第二個參數 0 表示完全透明\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    // 使用 ref 掛載 canvas\n    // this.$refs.threeContainer.appendChild(renderer.domElement);\n    document.getElementById(\"container\").appendChild(renderer.domElement);\n\n    // document.getElementById(\"container\").addEventListener(\"pointermove\",OnPointerMove);\n      \n\n\n\n\n\n    // const geometry = new THREE.SphereGeometry(1, 100);\n    const geometry = new THREE.BufferGeometry();\n    const vertices = [];\n    // const material = new THREE.MeshPhongMaterial({ color: '#fffffff' });\n    const material = new THREE.PointsMaterial({\n      size:2,\n      color: 0xff00ff,\n    })\n\n    const particles = new THREE.Points(geometry,material);\n    scene.add(particles);\n\n\n\n    let spherePoints = new THREE.Points(geometry,material)\n    // const points = new THREE.Points(geometry, material);\n    spherePoints.position.set(45,0,0)\n    scene.add(spherePoints);\n\n    const ambientLight = new THREE.AmbientLight('#fffff');\n    scene.add(ambientLight);\n\n\n\n\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n\n    }\n    animate();\n  }\n};\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC,WAAW;EAACC,GAAG,EAAC,gBAAgB;EAACC,EAAE,EAAC;;;uBAA/CC,mBAAA,CAEM,OAFNC,UAEM,EAAAC,MAAA,QAAAA,MAAA,OADJC,mBAAA,CAAkB,WAAf,aAAW,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}