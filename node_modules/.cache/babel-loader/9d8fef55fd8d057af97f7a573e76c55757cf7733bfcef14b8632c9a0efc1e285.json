{"ast":null,"code":"import * as THREE from 'three';\nexport default {\n  name: 'BannerPt',\n  mounted() {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 10);\n    camera.position.z = 5;\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    // 使用 ref 掛載 canvas\n    this.$refs.threeContainer.appendChild(renderer.domElement);\n    const geometry = new THREE.BoxGeometry(5, 5, 5);\n    const material = new THREE.MeshPhongMaterial({\n      color: '#ff0000'\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    const ambientLight = new THREE.AmbientLight('#0c0c0c');\n    scene.add(ambientLight);\n    const spotLight = new THREE.SpotLight('#FF0000');\n    spotLight.position.set(3, 3, 3);\n    spotLight.target = cube;\n    scene.add(spotLight);\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n  }\n};","map":{"version":3,"names":["THREE","name","mounted","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","setSize","$refs","threeContainer","appendChild","domElement","geometry","BoxGeometry","material","MeshPhongMaterial","color","cube","Mesh","add","ambientLight","AmbientLight","spotLight","SpotLight","set","target","animate","requestAnimationFrame","render"],"sources":["/Users/linhankuan/fvl2025/src/components/BannerParticles.vue"],"sourcesContent":["<template>\n  <div class=\"particles\" ref=\"threeContainer\">\n    <p>Hello world</p>\n  </div>\n</template>\n\n<script>\nimport * as THREE from 'three';\n\nexport default {\n  name: 'BannerPt',\n  mounted() {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      10\n    );\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    // 使用 ref 掛載 canvas\n    this.$refs.threeContainer.appendChild(renderer.domElement);\n\n    const geometry = new THREE.BoxGeometry(5, 5, 5);\n    const material = new THREE.MeshPhongMaterial({ color: '#ff0000' });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    const ambientLight = new THREE.AmbientLight('#0c0c0c');\n    scene.add(ambientLight);\n\n    const spotLight = new THREE.SpotLight('#FF0000');\n    spotLight.position.set(3, 3, 3);\n    spotLight.target = cube;\n    scene.add(spotLight);\n\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n  }\n};\n</script>\n"],"mappings":"AAOA,OAAO,KAAKA,KAAI,MAAO,OAAO;AAE9B,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,OAAOA,CAAA,EAAG;IACR,MAAMC,KAAI,GAAI,IAAIH,KAAK,CAACI,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAK,GAAI,IAAIL,KAAK,CAACM,iBAAiB,CACxC,EAAE,EACFC,MAAM,CAACC,UAAS,GAAID,MAAM,CAACE,WAAW,EACtC,GAAG,EACH,EACF,CAAC;IACDJ,MAAM,CAACK,QAAQ,CAACC,CAAA,GAAI,CAAC;IAErB,MAAMC,QAAO,GAAI,IAAIZ,KAAK,CAACa,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAACE,OAAO,CAACP,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;;IAEvD;IACA,IAAI,CAACM,KAAK,CAACC,cAAc,CAACC,WAAW,CAACL,QAAQ,CAACM,UAAU,CAAC;IAE1D,MAAMC,QAAO,GAAI,IAAInB,KAAK,CAACoB,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/C,MAAMC,QAAO,GAAI,IAAIrB,KAAK,CAACsB,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAU,CAAC,CAAC;IAClE,MAAMC,IAAG,GAAI,IAAIxB,KAAK,CAACyB,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;IAC/ClB,KAAK,CAACuB,GAAG,CAACF,IAAI,CAAC;IAEf,MAAMG,YAAW,GAAI,IAAI3B,KAAK,CAAC4B,YAAY,CAAC,SAAS,CAAC;IACtDzB,KAAK,CAACuB,GAAG,CAACC,YAAY,CAAC;IAEvB,MAAME,SAAQ,GAAI,IAAI7B,KAAK,CAAC8B,SAAS,CAAC,SAAS,CAAC;IAChDD,SAAS,CAACnB,QAAQ,CAACqB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/BF,SAAS,CAACG,MAAK,GAAIR,IAAI;IACvBrB,KAAK,CAACuB,GAAG,CAACG,SAAS,CAAC;IAEpB,SAASI,OAAOA,CAAA,EAAG;MACjBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BrB,QAAQ,CAACuB,MAAM,CAAChC,KAAK,EAAEE,MAAM,CAAC;IAChC;IACA4B,OAAO,CAAC,CAAC;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}