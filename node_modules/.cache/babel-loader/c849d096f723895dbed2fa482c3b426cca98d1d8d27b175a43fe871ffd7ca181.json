{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*!\n * CustomWiggle 3.13.0\n * https://gsap.com\n *\n * @license Copyright 2008-2025, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet gsap,\n  _coreInitted,\n  createCustomEase,\n  _getGSAP = () => gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap,\n  _eases = {\n    easeOut: \"M0,1,C0.7,1,0.6,0,1,0\",\n    easeInOut: \"M0,0,C0.1,0,0.24,1,0.444,1,0.644,1,0.6,0,1,0\",\n    anticipate: \"M0,0,C0,0.222,0.024,0.386,0,0.4,0.18,0.455,0.65,0.646,0.7,0.67,0.9,0.76,1,0.846,1,1\",\n    uniform: \"M0,0,C0,0.95,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0\"\n  },\n  _linearEase = p => p,\n  _initCore = required => {\n    if (!_coreInitted) {\n      gsap = _getGSAP();\n      createCustomEase = gsap && gsap.parseEase(\"_CE\");\n      if (createCustomEase) {\n        for (let p in _eases) {\n          _eases[p] = createCustomEase(\"\", _eases[p]);\n        }\n        _coreInitted = 1;\n        _create(\"wiggle\").config = vars => typeof vars === \"object\" ? _create(\"\", vars) : _create(\"wiggle(\" + vars + \")\", {\n          wiggles: +vars\n        });\n      } else {\n        required && console.warn(\"Please gsap.registerPlugin(CustomEase, CustomWiggle)\");\n      }\n    }\n  },\n  _parseEase = (ease, invertNonCustomEases) => {\n    if (typeof ease !== \"function\") {\n      ease = gsap.parseEase(ease) || createCustomEase(\"\", ease);\n    }\n    return ease.custom || !invertNonCustomEases ? ease : p => 1 - ease(p);\n  },\n  _bonusValidated = 1,\n  //<name>CustomWiggle</name>\n  _create = (id, vars) => {\n    if (!_coreInitted) {\n      _initCore(1);\n    }\n    vars = vars || {};\n    let wiggles = (vars.wiggles || 10) | 0,\n      inc = 1 / wiggles,\n      x = inc / 2,\n      anticipate = vars.type === \"anticipate\",\n      yEase = _eases[vars.type] || _eases.easeOut,\n      xEase = _linearEase,\n      rnd = 1000,\n      nextX,\n      nextY,\n      angle,\n      handleX,\n      handleY,\n      easedX,\n      y,\n      path,\n      i;\n    if (_bonusValidated) {\n      if (anticipate) {\n        //the anticipate ease is actually applied on the x-axis (timing) and uses easeOut for amplitude.\n        xEase = yEase;\n        yEase = _eases.easeOut;\n      }\n      if (vars.timingEase) {\n        xEase = _parseEase(vars.timingEase);\n      }\n      if (vars.amplitudeEase) {\n        yEase = _parseEase(vars.amplitudeEase, true);\n      }\n      easedX = xEase(x);\n      y = anticipate ? -yEase(x) : yEase(x);\n      path = [0, 0, easedX / 4, 0, easedX / 2, y, easedX, y];\n      if (vars.type === \"random\") {\n        //if we just select random values on the y-axis and plug them into the \"normal\" algorithm, since the control points are always straight horizontal, it creates a bit of a slowdown at each anchor which just didn't seem as desirable, so we switched to an algorithm that bends the control points to be more in line with their context.\n        path.length = 4;\n        nextX = xEase(inc);\n        nextY = Math.random() * 2 - 1;\n        for (i = 2; i < wiggles; i++) {\n          x = nextX;\n          y = nextY;\n          nextX = xEase(inc * i);\n          nextY = Math.random() * 2 - 1;\n          angle = Math.atan2(nextY - path[path.length - 3], nextX - path[path.length - 4]);\n          handleX = Math.cos(angle) * inc;\n          handleY = Math.sin(angle) * inc;\n          path.push(x - handleX, y - handleY, x, y, x + handleX, y + handleY);\n        }\n        path.push(nextX, 0, 1, 0);\n      } else {\n        for (i = 1; i < wiggles; i++) {\n          path.push(xEase(x + inc / 2), y);\n          x += inc;\n          y = (y > 0 ? -1 : 1) * yEase(i * inc);\n          easedX = xEase(x);\n          path.push(xEase(x - inc / 2), y, easedX, y);\n        }\n        path.push(xEase(x + inc / 4), y, xEase(x + inc / 4), 0, 1, 0);\n      }\n      i = path.length;\n      while (--i > -1) {\n        path[i] = ~~(path[i] * rnd) / rnd; //round values to avoid odd strings for super tiny values\n      }\n      path[2] = \"C\" + path[2];\n      return createCustomEase(id, \"M\" + path.join(\",\"));\n    }\n  };\nexport class CustomWiggle {\n  constructor(id, vars) {\n    this.ease = _create(id, vars);\n  }\n  static create(id, vars) {\n    return _create(id, vars);\n  }\n  static register(core) {\n    gsap = core;\n    _initCore();\n  }\n}\n_getGSAP() && gsap.registerPlugin(CustomWiggle);\nCustomWiggle.version = \"3.13.0\";\nexport { CustomWiggle as default };","map":{"version":3,"names":["gsap","_coreInitted","createCustomEase","_getGSAP","window","registerPlugin","_eases","easeOut","easeInOut","anticipate","uniform","_linearEase","p","_initCore","required","parseEase","_create","config","vars","wiggles","console","warn","_parseEase","ease","invertNonCustomEases","custom","_bonusValidated","id","inc","x","type","yEase","xEase","rnd","nextX","nextY","angle","handleX","handleY","easedX","y","path","i","timingEase","amplitudeEase","length","Math","random","atan2","cos","sin","push","join","CustomWiggle","constructor","create","register","core","version","default"],"sources":["/Users/linhankuan/fvl2025/node_modules/gsap/src/CustomWiggle.js"],"sourcesContent":["/*!\n * CustomWiggle 3.13.0\n * https://gsap.com\n *\n * @license Copyright 2008-2025, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet gsap, _coreInitted, createCustomEase,\n\t_getGSAP = () => gsap || (typeof(window) !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_eases = {\n\t\teaseOut: \"M0,1,C0.7,1,0.6,0,1,0\",\n\t\teaseInOut: \"M0,0,C0.1,0,0.24,1,0.444,1,0.644,1,0.6,0,1,0\",\n\t\tanticipate: \"M0,0,C0,0.222,0.024,0.386,0,0.4,0.18,0.455,0.65,0.646,0.7,0.67,0.9,0.76,1,0.846,1,1\",\n\t\tuniform: \"M0,0,C0,0.95,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0\"\n\t},\n\t_linearEase = p => p,\n\t_initCore = required => {\n\t\tif (!_coreInitted) {\n\t\t\tgsap = _getGSAP();\n\t\t\tcreateCustomEase = gsap && gsap.parseEase(\"_CE\");\n\t\t\tif (createCustomEase) {\n\t\t\t\tfor (let p in _eases) {\n\t\t\t\t\t_eases[p] = createCustomEase(\"\", _eases[p]);\n\t\t\t\t}\n\t\t\t\t_coreInitted = 1;\n\t\t\t\t_create(\"wiggle\").config = vars => typeof(vars) === \"object\" ? _create(\"\", vars) : _create(\"wiggle(\" + vars + \")\", {wiggles:+vars});\n\t\t\t} else {\n\t\t\t\trequired && console.warn(\"Please gsap.registerPlugin(CustomEase, CustomWiggle)\");\n\t\t\t}\n\t\t}\n\t},\n\t_parseEase = (ease, invertNonCustomEases) => {\n\t\tif (typeof(ease) !== \"function\") {\n\t\t\tease = gsap.parseEase(ease) || createCustomEase(\"\", ease);\n\t\t}\n\t\treturn (ease.custom || !invertNonCustomEases) ? ease : p => 1 - ease(p);\n\t},\n\t_bonusValidated = 1, //<name>CustomWiggle</name>\n\t_create = (id, vars) => {\n\t\tif (!_coreInitted) {\n\t\t\t_initCore(1);\n\t\t}\n\t\tvars = vars || {};\n\t\tlet wiggles = (vars.wiggles || 10) | 0,\n\t\t\tinc = 1 / wiggles,\n\t\t\tx = inc / 2,\n\t\t\tanticipate = (vars.type === \"anticipate\"),\n\t\t\tyEase = _eases[vars.type] || _eases.easeOut,\n\t\t\txEase = _linearEase,\n\t\t\trnd = 1000,\n\t\t\tnextX, nextY, angle, handleX, handleY, easedX, y, path, i;\n\t\tif (_bonusValidated) {\n\t\t\tif (anticipate) { //the anticipate ease is actually applied on the x-axis (timing) and uses easeOut for amplitude.\n\t\t\t\txEase = yEase;\n\t\t\t\tyEase = _eases.easeOut;\n\t\t\t}\n\t\t\tif (vars.timingEase) {\n\t\t\t\txEase = _parseEase(vars.timingEase);\n\t\t\t}\n\t\t\tif (vars.amplitudeEase) {\n\t\t\t\tyEase = _parseEase(vars.amplitudeEase, true);\n\t\t\t}\n\t\t\teasedX = xEase(x);\n\t\t\ty = anticipate ? -yEase(x) : yEase(x);\n\t\t\tpath = [0, 0, easedX / 4, 0, easedX / 2, y, easedX, y];\n\n\t\t\tif (vars.type === \"random\") { //if we just select random values on the y-axis and plug them into the \"normal\" algorithm, since the control points are always straight horizontal, it creates a bit of a slowdown at each anchor which just didn't seem as desirable, so we switched to an algorithm that bends the control points to be more in line with their context.\n\t\t\t\tpath.length = 4;\n\t\t\t\tnextX = xEase(inc);\n\t\t\t\tnextY = Math.random() * 2 - 1;\n\t\t\t\tfor (i = 2; i < wiggles; i++) {\n\t\t\t\t\tx = nextX;\n\t\t\t\t\ty = nextY;\n\t\t\t\t\tnextX = xEase(inc * i);\n\t\t\t\t\tnextY = Math.random() * 2 - 1;\n\t\t\t\t\tangle = Math.atan2(nextY - path[path.length - 3], nextX - path[path.length - 4]);\n\t\t\t\t\thandleX = Math.cos(angle) * inc;\n\t\t\t\t\thandleY = Math.sin(angle) * inc;\n\t\t\t\t\tpath.push(x - handleX, y - handleY, x, y, x + handleX, y + handleY);\n\t\t\t\t}\n\t\t\t\tpath.push(nextX, 0, 1, 0);\n\t\t\t} else {\n\t\t\t\tfor (i = 1; i < wiggles; i++) {\n\t\t\t\t\tpath.push(xEase(x + inc / 2), y);\n\t\t\t\t\tx += inc;\n\t\t\t\t\ty = ((y > 0) ? -1 : 1) * (yEase(i * inc));\n\t\t\t\t\teasedX = xEase(x);\n\t\t\t\t\tpath.push(xEase(x - inc / 2), y, easedX, y);\n\t\t\t\t}\n\t\t\t\tpath.push(xEase(x + inc / 4), y, xEase(x + inc / 4), 0, 1, 0);\n\t\t\t}\n\t\t\ti = path.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tpath[i] = ~~(path[i] * rnd) / rnd; //round values to avoid odd strings for super tiny values\n\t\t\t}\n\t\t\tpath[2] = \"C\" + path[2];\n\t\t\treturn createCustomEase(id, \"M\" + path.join(\",\"));\n\t\t}\n\t};\n\nexport class CustomWiggle {\n\n\tconstructor(id, vars) {\n\t\tthis.ease = _create(id, vars);\n\t}\n\n\tstatic create(id, vars) {\n\t\treturn _create(id, vars);\n\t}\n\n\tstatic register(core) {\n\t\tgsap = core;\n\t\t_initCore();\n\t}\n\n}\n\n_getGSAP() && gsap.registerPlugin(CustomWiggle);\n\nCustomWiggle.version = \"3.13.0\";\n\nexport { CustomWiggle as default };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}