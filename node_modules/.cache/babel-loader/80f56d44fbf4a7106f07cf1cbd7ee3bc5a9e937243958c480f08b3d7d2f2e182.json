{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\",\n  style: {\n    \"overflow-x\": \"hidden\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeroSection = _resolveComponent(\"HeroSection\");\n  const _component_ScheduleSection = _resolveComponent(\"ScheduleSection\");\n  const _component_CalendarSection = _resolveComponent(\"CalendarSection\");\n  const _component_FixedSection = _resolveComponent(\"FixedSection\");\n  const _component_AboutSection = _resolveComponent(\"AboutSection\");\n  const _component_VideoBanner = _resolveComponent(\"VideoBanner\");\n  const _component_PortfolioSection = _resolveComponent(\"PortfolioSection\");\n  const _component_TeamSection = _resolveComponent(\"TeamSection\");\n  const _component_FooterBar = _resolveComponent(\"FooterBar\");\n  const _component_Drawers = _resolveComponent(\"Drawers\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 首頁區塊 \"), _createVNode(_component_HeroSection, {\n    onShowDrawer: $options.handleShowDrawer\n  }, null, 8 /* PROPS */, [\"onShowDrawer\"]), _createCommentVNode(\" 節目時間表區塊 \"), _createVNode(_component_ScheduleSection), _createCommentVNode(\" 2025年11月日曆區塊 \"), _createVNode(_component_CalendarSection), _createCommentVNode(\" 固定背景區域 \"), _createVNode(_component_FixedSection), _createCommentVNode(\" 關於區塊 \"), _createVNode(_component_AboutSection, {\n    firstImage: $data.firstImage\n  }, null, 8 /* PROPS */, [\"firstImage\"]), _createCommentVNode(\" DOME視頻橫幅 \"), _createVNode(_component_VideoBanner), _createCommentVNode(\" 作品集區塊 \"), _createVNode(_component_PortfolioSection, {\n    portfolioList: $data.portfolioList\n  }, null, 8 /* PROPS */, [\"portfolioList\"]), _createCommentVNode(\" 製作團隊區塊 \"), _createVNode(_component_TeamSection), _createCommentVNode(\" 頁腳 \"), _createVNode(_component_FooterBar), _createCommentVNode(\" 抽屜組件 \"), _createVNode(_component_Drawers, {\n    showLiveDrawer: $data.showLiveDrawer,\n    showDrawer: $data.showDrawer,\n    showLectureDrawer: $data.showLectureDrawer,\n    currentEventImage: $options.currentEventImage,\n    onCloseDrawer: $options.handleCloseDrawer,\n    onEventTypeChanged: $options.handleEventTypeChange\n  }, null, 8 /* PROPS */, [\"showLiveDrawer\", \"showDrawer\", \"showLectureDrawer\", \"currentEventImage\", \"onCloseDrawer\", \"onEventTypeChanged\"])]);\n}","map":{"version":3,"names":["id","style","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_HeroSection","onShowDrawer","$options","handleShowDrawer","_component_ScheduleSection","_component_CalendarSection","_component_FixedSection","_component_AboutSection","firstImage","$data","_component_VideoBanner","_component_PortfolioSection","portfolioList","_component_TeamSection","_component_FooterBar","_component_Drawers","showLiveDrawer","showDrawer","showLectureDrawer","currentEventImage","onCloseDrawer","handleCloseDrawer","onEventTypeChanged","handleEventTypeChange"],"sources":["/Users/linhankuan/fvl2025/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" style=\"overflow-x: hidden;\">\n    \n    <!-- 首頁區塊 -->\n    <HeroSection @show-drawer=\"handleShowDrawer\" />\n\n    <!-- 節目時間表區塊 -->\n    <ScheduleSection />\n\n    <!-- 2025年11月日曆區塊 -->\n    <CalendarSection />\n\n    <!-- 固定背景區域 -->\n    <FixedSection />\n\n    <!-- 關於區塊 -->\n    <AboutSection :firstImage=\"firstImage\" />\n\n    <!-- DOME視頻橫幅 -->\n    <VideoBanner />\n\n    <!-- 作品集區塊 -->\n    <PortfolioSection :portfolioList=\"portfolioList\" />\n\n    <!-- 製作團隊區塊 -->\n    <TeamSection />\n\n    <!-- 頁腳 -->\n    <FooterBar />\n\n    <!-- 抽屜組件 -->\n    <Drawers \n      :showLiveDrawer=\"showLiveDrawer\"\n      :showDrawer=\"showDrawer\"\n      :showLectureDrawer=\"showLectureDrawer\"\n      :currentEventImage=\"currentEventImage\"\n      @close-drawer=\"handleCloseDrawer\"\n      @event-type-changed=\"handleEventTypeChange\"\n    />\n  </div>\n</template>\n\n<script>\nimport FooterBar from './components/FooterBar.vue';\nimport HeroSection from './components/HeroSection.vue';\nimport ScheduleSection from './components/ScheduleSection.vue';\nimport CalendarSection from './components/CalendarSection.vue';\nimport FixedSection from './components/FixedSection.vue';\nimport AboutSection from './components/AboutSection.vue';\nimport VideoBanner from './components/VideoBanner.vue';\nimport PortfolioSection from './components/PortfolioSection.vue';\nimport TeamSection from './components/TeamSection.vue';\nimport Drawers from './components/Drawers.vue';\nimport axios from 'axios';\nimport { gsap } from 'gsap';\nimport { SplitText } from 'gsap/SplitText';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n// import * as THREE from 'three';\n\n// 這裡 import 10 張圖片\nimport img1 from './assets/1.jpg';\nimport img2 from './assets/2.jpg';\nimport img3 from './assets/3.jpg';\n\n// 註冊 SplitText 和 ScrollTrigger 插件\ngsap.registerPlugin(SplitText, ScrollTrigger);\n\nexport default {\n  name: 'App',\n  components: { \n    FooterBar, \n    HeroSection,\n    ScheduleSection,\n    CalendarSection,\n    FixedSection,\n    AboutSection,\n    VideoBanner,\n    PortfolioSection,\n    TeamSection,\n    Drawers\n  },\n  data() {\n    return {\n      testdata: [],\n      firstImage: {},\n      form: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      showLiveDrawer: false,\n      showDrawer: false,\n      showLectureDrawer: false,\n      currentEventType: 'exhibition', // 當前選中的事件類型\n      portfolioList: [],\n    }\n  },\n  computed: {\n    // 根據事件類型返回對應的照片\n    currentEventImage() {\n      const imageMap = {\n        'exhibition': img1, // 開幕 - 顯示第一張照片\n        'workshop': img2,   // 播映 - 顯示第二張照片\n        'performance': img3 // LIVE演出 - 顯示第三張照片\n      };\n      return imageMap[this.currentEventType] || img1;\n    }\n  },\n  mounted() {\n    this.fetchData();\n    this.initTextAnimation();\n    this.initSunAnimation();\n    this.initCloud1Animation();\n    this.initCloud2Animation();\n    this.initServicesSliderScroll();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        // 獲取第一張圖片\n        const response1 = await axios.get('https://unzip-clab-api.clab.org.tw/api/v1/schedules/5/works?page=0&limit=25', {responseType: 'json'});\n        this.testdata = response1.data.results[1].photo_1;\n        this.firstImage = this.testdata;\n        console.log(this.firstImage);\n\n        // 獲取作品列表\n        const response2 = await axios.get('https://unzip-clab-api.clab.org.tw/api/v1/works?search=Future%20Vision%20Lab&limit=100', {responseType: 'json'});\n        this.portfolioList = response2.data;\n        console.log(this.portfolioList);\n\n        // 獲取資料庫資料\n        await this.fetchDatabaseData();\n      } catch (error) {\n        console.error('獲取資料失敗:', error);\n      }\n    },\n\n    // 處理抽屜顯示\n    handleShowDrawer(drawerType) {\n      // 關閉其他抽屜\n      this.showLiveDrawer = false;\n      this.showDrawer = false;\n      this.showLectureDrawer = false;\n\n      // 打開對應的抽屜\n      switch (drawerType) {\n        case 'schedule':\n          this.showDrawer = true;\n          break;\n        case 'about':\n          this.showLiveDrawer = true;\n          break;\n        case 'lecture':\n          this.showLectureDrawer = true;\n          break;\n      }\n    },\n\n    // 處理抽屜關閉\n    handleCloseDrawer(drawerType) {\n      switch (drawerType) {\n        case 'schedule':\n          this.showDrawer = false;\n          break;\n        case 'about':\n          this.showLiveDrawer = false;\n          break;\n        case 'lecture':\n          this.showLectureDrawer = false;\n          break;\n      }\n    },\n\n    // 處理事件類型變更\n    handleEventTypeChange(eventType) {\n      this.currentEventType = eventType;\n    },\n\n    // 取得資料庫資料並在 console 顯示\n    async fetchDatabaseData() {\n      try {\n        const response = await axios.get('http://localhost:3001/api/data');\n        console.log(response.data);\n        return response.data;\n      } catch (error) {\n        console.error('❌ 取得資料庫資料失敗:', error);\n        return [];\n      }\n    },\n\n    scrollToSection(sectionId) {\n      const element = document.getElementById(sectionId);\n      if (element) {\n        element.scrollIntoView({ behavior: 'smooth' });\n      }\n    },\n\n    submitForm() {\n      alert('感謝您的訊息！我們會盡快回覆您。');\n      this.form = { name: '', email: '', message: '' };\n    },\n\n    initTextAnimation() {\n      // 分割 FUTURE VISION LAB 2025 標題\n      const splitTitle = document.querySelector('.split')\n      if (splitTitle) {\n        const splitText = new SplitText(splitTitle, {\n          type: \"chars, words\",\n          charsClass: \"char\",\n          wordsClass: \"word\"\n        })\n        \n        // 設置初始狀態\n        gsap.set(splitText.chars, {\n          opacity: 0,\n          y: 50,\n          rotationX: -90\n        })\n        \n        // 動畫效果\n        gsap.to(splitText.chars, {\n          opacity: 1,\n          y: 0,\n          rotationX: 0,\n          duration: 0.8,\n          stagger: 0.05,\n          ease: \"back.out(1.7)\"\n        })\n      }\n      \n      // 分割首頁標題文字\n      const heroTitle = document.querySelector('.hero-title')\n      if (heroTitle) {\n        const splitTitle = new SplitText(heroTitle, {\n          type: \"chars, words\",\n          charsClass: \"char\",\n          wordsClass: \"word\"\n        })\n        \n        // 設置初始狀態\n        gsap.set(splitTitle.chars, {\n          opacity: 0,\n          y: 50,\n          rotationX: -90\n        })\n        \n        // 動畫效果\n        gsap.to(splitTitle.chars, {\n          opacity: 1,\n          y: 0,\n          rotationX: 0,\n          duration: 0.8,\n          stagger: 0.05,\n          ease: \"back.out(1.7)\"\n        })\n      }\n      \n      // 分割副標題\n      const heroSubtitle = document.querySelector('.hero-subtitle')\n      if (heroSubtitle) {\n        const splitSubtitle = new SplitText(heroSubtitle, {\n          type: \"words\",\n          wordsClass: \"word\"\n        })\n        \n        gsap.set(splitSubtitle.words, {\n          opacity: 0,\n          y: 30\n        })\n        \n        gsap.to(splitSubtitle.words, {\n          opacity: 1,\n          y: 0,\n          duration: 0.6,\n          stagger: 0.1,\n          delay: 0.5,\n          ease: \"power2.out\"\n        })\n      }\n      \n      // ScrollTrigger 動畫 - 節目時間表\n      gsap.fromTo('#schedule .section-title, #schedule .schedule-table', \n        {\n          opacity: 0,\n          y: 50\n        },\n        {\n          opacity: 1,\n          y: 0,\n          duration: 0.8,\n          stagger: 0.2,\n          ease: \"power2.out\",\n          scrollTrigger: {\n            trigger: \"#schedule\",\n            start: \"top 80%\",\n            end: \"bottom 20%\",\n            toggleActions: \"play none none reverse\"\n          }\n        }\n      )\n      \n      // ScrollTrigger 動畫 - 關於DOME\n      gsap.fromTo('#services .section-title, #services .service-card', \n        {\n          opacity: 0,\n          y: 50\n        },\n        {\n          opacity: 1,\n          y: 0,\n          duration: 0.8,\n          stagger: 0.2,\n          ease: \"power2.out\",\n          scrollTrigger: {\n            trigger: \"#services\",\n            start: \"top 80%\",\n            end: \"bottom 20%\",\n            toggleActions: \"play none none reverse\"\n          }\n        }\n      )\n      \n      // ScrollTrigger 動畫 - 作品集\n      gsap.fromTo('#portfolio .section-title, #portfolio .portfolio-item', \n        {\n          opacity: 0,\n          y: 50\n        },\n        {\n          opacity: 1,\n          y: 0,\n          duration: 0.8,\n          stagger: 0.2,\n          ease: \"power2.out\",\n          scrollTrigger: {\n            trigger: \"#portfolio\",\n            start: \"top 80%\",\n            end: \"bottom 20%\",\n            toggleActions: \"play none none reverse\"\n          }\n        }\n      )\n      \n      // ScrollTrigger 動畫 - 製作團隊\n      gsap.fromTo('#team .section-title, #team .team-item', \n        {\n          opacity: 0,\n          y: 30\n        },\n        {\n          opacity: 1,\n          y: 0,\n          duration: 0.6,\n          stagger: 0.1,\n          ease: \"power2.out\",\n          scrollTrigger: {\n            trigger: \"#team\",\n            start: \"top 80%\",\n            end: \"bottom 20%\",\n            toggleActions: \"play none none reverse\"\n          }\n        }\n      )\n      \n      // ScrollTrigger 動畫 - 聯絡我們\n      gsap.fromTo('#contact .section-title, #contact .contact-info, #contact .contact-form', \n        {\n          opacity: 0,\n          y: 50\n        },\n        {\n          opacity: 1,\n          y: 0,\n          duration: 0.8,\n          stagger: 0.3,\n          ease: \"power2.out\",\n          scrollTrigger: {\n            trigger: \"#contact\",\n            start: \"top 80%\",\n            end: \"bottom 20%\",\n            toggleActions: \"play none none reverse\"\n          }\n        }\n      )\n    },\n\n    initSunAnimation() {\n      // 設置太陽圖片的初始位置（在背景圖片下方）和透明度\n      gsap.set(this.$refs.sunImg, {\n        y: '100%',\n        opacity: 1\n      });\n\n      // 創建太陽上升的動畫\n      gsap.to(this.$refs.sunImg, {\n        y: '0%',\n        repeat: 0,\n        yoyo: true,\n        opacity: 1,\n        duration: 2,\n        ease: \"power2.Out\",\n      });\n    },\n\n    initCloud1Animation() {\n      gsap.set(this.$refs.cloud1Img, {\n        y: '100%',\n        opacity: 1\n      });\n\n      // 創建雲移動的動畫\n      gsap.to(this.$refs.cloud1Img, {\n        y: '0%',\n        opacity: 1,\n        duration: 4,\n        ease: \"power2.out\",\n      });\n    },\n\n    initCloud2Animation() {\n      gsap.set(this.$refs.cloud2Img, {\n        y: '100%',\n        opacity: 1\n      });\n\n      // 創建雲移動的動畫\n      gsap.to(this.$refs.cloud2Img, {\n        y: '0%',\n        opacity: 1,\n        duration: 3,\n        ease: \"power2.out\",\n      });\n    },\n\n    scrollServices(direction) {\n      const slider = this.$refs.servicesSlider;\n      const card = slider.querySelector('.service-card');\n      if (slider && card) {\n        const scrollAmount = card.offsetWidth + 24; // 24px gap\n        slider.scrollBy({\n          left: direction * scrollAmount,\n          behavior: 'smooth'\n        });\n      }\n    },\n\n    initServicesSliderScroll() {\n      this.$nextTick(() => {\n        const slider = this.$refs.servicesSlider;\n        if (!slider) return;\n        const container = slider.parentElement;\n        const cardWidth = 320; // 卡片寬度\n        const gap = 24; // 間距\n        const containerPadding = 40; // 容器的左右padding總和\n        \n        // 計算容器實際可用寬度\n        const availableWidth = container.offsetWidth - containerPadding;\n        const cardsPerView = Math.floor(availableWidth / (cardWidth + gap)); // 可視卡片數量\n        const totalCards = slider.children.length;\n        \n        // 計算最大可滑動距離，確保最後一張卡片完整顯示\n        const maxScroll = Math.max(0, (totalCards - cardsPerView) * (cardWidth + gap));\n        \n        console.log('Container width:', container.offsetWidth);\n        console.log('Available width:', availableWidth);\n        console.log('Cards per view:', cardsPerView);\n        console.log('Total cards:', totalCards);\n        console.log('Max scroll:', maxScroll);\n        \n        if (maxScroll <= 0) return;\n        \n        gsap.set(slider, { x: 0 });\n        gsap.to(slider, {\n          x: -maxScroll, // 內容往左滑\n          ease: 'none',\n          scrollTrigger: {\n            trigger: '#services',\n            start: 'top top',\n            end: '+=' + maxScroll,\n            scrub: 1.2,\n            pin: true,\n            anticipatePin: 1,\n            markers: true,\n          }\n        });\n      });\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n$body-font:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n\nbody {\n  background: #181818;\n  color: #fff;\n  font-family:$body-font;\n  line-height: 1.6;\n  margin: 0 !important;\n}\n\nh1{\n  font-size:8vw;\n  font-family: 'Syncopate',sans-serif;\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 30px 20px 120px;\n  color: #fff;\n}\n\nsection {\n  background: transparent;\n  color: #fff;\n}\n\n.about {\n  background: #fff;\n  color: #111;\n}\n\n.about .section-title,\n.about .about-text,\n.about .about-stats,\n.about .stat-item,\n.about .stat-item h3 {\n  color: #111;\n}\n\n.services {\n  background: #ecebe7;\n  color: #fff;\n}\n\n.portfolio {\n  background: #232526;\n  color: #fff;\n}\n\n.contact {\n  background: #181818;\n  color: #fff;\n}\n\n.team {\n  background: #232526;\n  color: #fff;\n}\n\n.schedule {\n  background: #181818;\n  color: #fff;\n}\n\n.schedule-table {\n  background: #fff;\n  color: #111;\n}\n\n.schedule-table th, .schedule-table td {\n  color: #111;\n}\n\n.schedule-table th {\n  background: #f5f5f5;\n  color: #111;\n  border-bottom: 2px solid #333;\n}\n\n.schedule-table tr:not(:last-child) td {\n  border-bottom: 1px solid #eee;\n}\n\n.schedule-table tr:hover td {\n  background: #f0f0f0;\n  color: #111;\n}\n\n.stat-item {\n  background: #181818;\n  color: #fff;\n  box-shadow: 0 5px 15px rgba(0,0,0,0.3);\n}\n\n.service-card {\n  background: #232526;\n  color: #fff;\n  box-shadow: 0 10px 30px rgba(0,0,0,0.3);\n}\n\n.contact-form {\n  background: #232526;\n  color: #fff;\n  box-shadow: 0 10px 30px rgba(0,0,0,0.3);\n}\n\n.team-content{\n  position: relative;\n  padding: 5em 2em 2em 2em; \n  backdrop-filter: blur(10px);\n}\n\n.team-list {\n  background: transparent;\n  color: #fff;\n}\n\n.team-item {\n  background: #000000;\n  color: #bbb;\n  border-left: 4px solid #fff;\n  font-size: 1rem;\n}\n\n.team-role {\n  font-weight: 700;\n  color: #111;\n  margin-right: 8px;\n}\n\n.footer-bar {\n  background: #111;\n  color: #fff;\n}\n\n::-webkit-scrollbar {\n  background: #181818;\n  width: 8px;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #333;\n  border-radius: 4px;\n}\n\n@media (max-width: 600px) {\n  .schedule-table th, .schedule-table td {\n    padding: 12px 8px;\n    font-size: 0.95rem;\n  }\n}\n\n/* 區塊通用樣式 */\n.section-title {\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 40px;\n  color: #ffffff;\n}\n\n/* 響應式設計 */\n@media (max-width: 768px) {\n  .section-title {\n    font-size: 2rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .service-card,\n  .contact-form {\n    padding: 30px 20px;\n  }\n}\n\n/* GSAP 文字分割動畫樣式 */\n.char {\n  display: inline-block;\n  transform-origin: center;\n}\n\n.word {\n  display: inline-block;\n  margin-right: 0.2em;\n}\n\n/* 確保分割的文字在動畫期間不會換行 */\n.hero-title, .hero-subtitle, .split {\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n/* .split 元素的特殊樣式 */\n.split {\n  font-size: 3.5rem;\n  font-weight: bold;\n  margin-bottom: 20px;\n  color: #fff;\n}\n\n@media (max-width: 768px) {\n  .hero-title, .hero-subtitle, .split {\n    white-space: normal;\n  }\n  .split {\n    font-size: 2.5rem;\n  }\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC,KAAK;EAACC,KAA2B,EAA3B;IAAA;EAAA;;;;;;;;;;;;;uBAAdC,mBAAA,CAsCM,OAtCNC,UAsCM,GApCJC,mBAAA,UAAa,EACbC,YAAA,CAA+CC,sBAAA;IAAjCC,YAAW,EAAEC,QAAA,CAAAC;EAAgB,2CAE3CL,mBAAA,aAAgB,EAChBC,YAAA,CAAmBK,0BAAA,GAEnBN,mBAAA,kBAAqB,EACrBC,YAAA,CAAmBM,0BAAA,GAEnBP,mBAAA,YAAe,EACfC,YAAA,CAAgBO,uBAAA,GAEhBR,mBAAA,UAAa,EACbC,YAAA,CAAyCQ,uBAAA;IAA1BC,UAAU,EAAEC,KAAA,CAAAD;EAAU,yCAErCV,mBAAA,cAAiB,EACjBC,YAAA,CAAeW,sBAAA,GAEfZ,mBAAA,WAAc,EACdC,YAAA,CAAmDY,2BAAA;IAAhCC,aAAa,EAAEH,KAAA,CAAAG;EAAa,4CAE/Cd,mBAAA,YAAe,EACfC,YAAA,CAAec,sBAAA,GAEff,mBAAA,QAAW,EACXC,YAAA,CAAae,oBAAA,GAEbhB,mBAAA,UAAa,EACbC,YAAA,CAOEgB,kBAAA;IANCC,cAAc,EAAEP,KAAA,CAAAO,cAAc;IAC9BC,UAAU,EAAER,KAAA,CAAAQ,UAAU;IACtBC,iBAAiB,EAAET,KAAA,CAAAS,iBAAiB;IACpCC,iBAAiB,EAAEjB,QAAA,CAAAiB,iBAAiB;IACpCC,aAAY,EAAElB,QAAA,CAAAmB,iBAAiB;IAC/BC,kBAAkB,EAAEpB,QAAA,CAAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}