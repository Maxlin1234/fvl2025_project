{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.build = void 0;\nconst onlyCountsSync = state => {\n  return state.counts;\n};\nconst groupsSync = state => {\n  return state.groups;\n};\nconst defaultSync = state => {\n  return state.paths;\n};\nconst limitFilesSync = state => {\n  return state.paths.slice(0, state.options.maxFiles);\n};\nconst onlyCountsAsync = (state, error, callback) => {\n  report(error, callback, state.counts, state.options.suppressErrors);\n  return null;\n};\nconst defaultAsync = (state, error, callback) => {\n  report(error, callback, state.paths, state.options.suppressErrors);\n  return null;\n};\nconst limitFilesAsync = (state, error, callback) => {\n  report(error, callback, state.paths.slice(0, state.options.maxFiles), state.options.suppressErrors);\n  return null;\n};\nconst groupsAsync = (state, error, callback) => {\n  report(error, callback, state.groups, state.options.suppressErrors);\n  return null;\n};\nfunction report(error, callback, output, suppressErrors) {\n  if (error && !suppressErrors) callback(error, output);else callback(null, output);\n}\nfunction build(options, isSynchronous) {\n  const {\n    onlyCounts,\n    group,\n    maxFiles\n  } = options;\n  if (onlyCounts) return isSynchronous ? onlyCountsSync : onlyCountsAsync;else if (group) return isSynchronous ? groupsSync : groupsAsync;else if (maxFiles) return isSynchronous ? limitFilesSync : limitFilesAsync;else return isSynchronous ? defaultSync : defaultAsync;\n}\nexports.build = build;","map":{"version":3,"names":["Object","defineProperty","exports","value","build","onlyCountsSync","state","counts","groupsSync","groups","defaultSync","paths","limitFilesSync","slice","options","maxFiles","onlyCountsAsync","error","callback","report","suppressErrors","defaultAsync","limitFilesAsync","groupsAsync","output","isSynchronous","onlyCounts","group"],"sources":["/Users/linhankuan/fvl2025/node_modules/tinyglobby/node_modules/fdir/dist/api/functions/invoke-callback.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.build = void 0;\nconst onlyCountsSync = (state) => {\n    return state.counts;\n};\nconst groupsSync = (state) => {\n    return state.groups;\n};\nconst defaultSync = (state) => {\n    return state.paths;\n};\nconst limitFilesSync = (state) => {\n    return state.paths.slice(0, state.options.maxFiles);\n};\nconst onlyCountsAsync = (state, error, callback) => {\n    report(error, callback, state.counts, state.options.suppressErrors);\n    return null;\n};\nconst defaultAsync = (state, error, callback) => {\n    report(error, callback, state.paths, state.options.suppressErrors);\n    return null;\n};\nconst limitFilesAsync = (state, error, callback) => {\n    report(error, callback, state.paths.slice(0, state.options.maxFiles), state.options.suppressErrors);\n    return null;\n};\nconst groupsAsync = (state, error, callback) => {\n    report(error, callback, state.groups, state.options.suppressErrors);\n    return null;\n};\nfunction report(error, callback, output, suppressErrors) {\n    if (error && !suppressErrors)\n        callback(error, output);\n    else\n        callback(null, output);\n}\nfunction build(options, isSynchronous) {\n    const { onlyCounts, group, maxFiles } = options;\n    if (onlyCounts)\n        return isSynchronous\n            ? onlyCountsSync\n            : onlyCountsAsync;\n    else if (group)\n        return isSynchronous\n            ? groupsSync\n            : groupsAsync;\n    else if (maxFiles)\n        return isSynchronous\n            ? limitFilesSync\n            : limitFilesAsync;\n    else\n        return isSynchronous\n            ? defaultSync\n            : defaultAsync;\n}\nexports.build = build;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,KAAK,GAAG,KAAK,CAAC;AACtB,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAC9B,OAAOA,KAAK,CAACC,MAAM;AACvB,CAAC;AACD,MAAMC,UAAU,GAAIF,KAAK,IAAK;EAC1B,OAAOA,KAAK,CAACG,MAAM;AACvB,CAAC;AACD,MAAMC,WAAW,GAAIJ,KAAK,IAAK;EAC3B,OAAOA,KAAK,CAACK,KAAK;AACtB,CAAC;AACD,MAAMC,cAAc,GAAIN,KAAK,IAAK;EAC9B,OAAOA,KAAK,CAACK,KAAK,CAACE,KAAK,CAAC,CAAC,EAAEP,KAAK,CAACQ,OAAO,CAACC,QAAQ,CAAC;AACvD,CAAC;AACD,MAAMC,eAAe,GAAGA,CAACV,KAAK,EAAEW,KAAK,EAAEC,QAAQ,KAAK;EAChDC,MAAM,CAACF,KAAK,EAAEC,QAAQ,EAAEZ,KAAK,CAACC,MAAM,EAAED,KAAK,CAACQ,OAAO,CAACM,cAAc,CAAC;EACnE,OAAO,IAAI;AACf,CAAC;AACD,MAAMC,YAAY,GAAGA,CAACf,KAAK,EAAEW,KAAK,EAAEC,QAAQ,KAAK;EAC7CC,MAAM,CAACF,KAAK,EAAEC,QAAQ,EAAEZ,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACQ,OAAO,CAACM,cAAc,CAAC;EAClE,OAAO,IAAI;AACf,CAAC;AACD,MAAME,eAAe,GAAGA,CAAChB,KAAK,EAAEW,KAAK,EAAEC,QAAQ,KAAK;EAChDC,MAAM,CAACF,KAAK,EAAEC,QAAQ,EAAEZ,KAAK,CAACK,KAAK,CAACE,KAAK,CAAC,CAAC,EAAEP,KAAK,CAACQ,OAAO,CAACC,QAAQ,CAAC,EAAET,KAAK,CAACQ,OAAO,CAACM,cAAc,CAAC;EACnG,OAAO,IAAI;AACf,CAAC;AACD,MAAMG,WAAW,GAAGA,CAACjB,KAAK,EAAEW,KAAK,EAAEC,QAAQ,KAAK;EAC5CC,MAAM,CAACF,KAAK,EAAEC,QAAQ,EAAEZ,KAAK,CAACG,MAAM,EAAEH,KAAK,CAACQ,OAAO,CAACM,cAAc,CAAC;EACnE,OAAO,IAAI;AACf,CAAC;AACD,SAASD,MAAMA,CAACF,KAAK,EAAEC,QAAQ,EAAEM,MAAM,EAAEJ,cAAc,EAAE;EACrD,IAAIH,KAAK,IAAI,CAACG,cAAc,EACxBF,QAAQ,CAACD,KAAK,EAAEO,MAAM,CAAC,CAAC,KAExBN,QAAQ,CAAC,IAAI,EAAEM,MAAM,CAAC;AAC9B;AACA,SAASpB,KAAKA,CAACU,OAAO,EAAEW,aAAa,EAAE;EACnC,MAAM;IAAEC,UAAU;IAAEC,KAAK;IAAEZ;EAAS,CAAC,GAAGD,OAAO;EAC/C,IAAIY,UAAU,EACV,OAAOD,aAAa,GACdpB,cAAc,GACdW,eAAe,CAAC,KACrB,IAAIW,KAAK,EACV,OAAOF,aAAa,GACdjB,UAAU,GACVe,WAAW,CAAC,KACjB,IAAIR,QAAQ,EACb,OAAOU,aAAa,GACdb,cAAc,GACdU,eAAe,CAAC,KAEtB,OAAOG,aAAa,GACdf,WAAW,GACXW,YAAY;AAC1B;AACAnB,OAAO,CAACE,KAAK,GAAGA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}