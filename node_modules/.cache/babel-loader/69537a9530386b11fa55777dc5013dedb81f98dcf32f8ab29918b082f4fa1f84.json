{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"portfolio\",\n  class: \"portfolio\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"section-title\"\n};\nconst _hoisted_4 = {\n  class: \"portfolio-grid\",\n  ref: \"grid\"\n};\nconst _hoisted_5 = [\"href\", \"onClick\"];\nconst _hoisted_6 = {\n  class: \"portfolio-image\",\n  style: {\n    \"height\": \"100%\"\n  }\n};\nconst _hoisted_7 = [\"src\", \"alt\"];\nconst _hoisted_8 = {\n  class: \"portfolio-overlay\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", _hoisted_3, _toDisplayString($props.isEnglish ? 'Screening Works' : '播映作品'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.portfolioList, (item, idx) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"portfolio-item\",\n      key: idx\n    }, [_createElementVNode(\"a\", {\n      href: `/works/${item.id}`,\n      target: \"_blank\",\n      rel: \"noopener\",\n      onClick: $event => $options.cacheWork(item)\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n      src: 'https://unzip-clab-api.clab.org.tw/' + item.photo_1,\n      alt: item.title,\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_7)])], 8 /* PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"h3\", null, _toDisplayString($props.isEnglish ? _ctx.item.work_en.title : _ctx.item.work_zh.title), 1 /* TEXT */), _createCommentVNode(\" <p>{{item.work_zh.title }}({{item.work_en.title }})</p> \"), _createElementVNode(\"p\", null, _toDisplayString($props.isEnglish ? 'artist：' : '藝術家：') + _toDisplayString($props.isEnglish ? _ctx.item.work_zh.photo_1_d : _ctx.item.work_en.photo_1_d), 1 /* TEXT */), _createCommentVNode(\" <p>{{ isEnglish ? item.work_zh.photo_1_d : item.work_en.photo_1_d }}</p> \")])])]);\n}","map":{"version":3,"names":["id","class","ref","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$props","isEnglish","_hoisted_4","_Fragment","_renderList","portfolioList","item","idx","key","href","target","rel","onClick","$event","$options","cacheWork","_hoisted_6","src","photo_1","alt","title","_hoisted_8","_ctx","work_en","work_zh","_createCommentVNode","photo_1_d"],"sources":["/Users/linhankuan/fvl2025/src/components/PortfolioSection.vue"],"sourcesContent":["<template>\n  <section id=\"portfolio\" class=\"portfolio\">\n    <div class=\"container\">\n      <h2 class=\"section-title\">{{ isEnglish ? 'Screening Works' : '播映作品' }}</h2>\n      <div class=\"portfolio-grid\" ref=\"grid\">\n        <div class=\"portfolio-item\" v-for=\"(item, idx) in portfolioList\" :key=\"idx\">\n          <a :href=\"`/works/${item.id}`\" target=\"_blank\" rel=\"noopener\" @click=\"cacheWork(item)\">\n            <div class=\"portfolio-image\" style=\"height: 100%;\">\n              <img :src=\"'https://unzip-clab-api.clab.org.tw/' + item.photo_1\" :alt=\"item.title\" style=\"width: 100%;height: 100%;\">\n            </div>\n        \n          \n          </a>\n        </div>\n      </div>\n      <div class=\"portfolio-overlay\">\n              <h3>{{ isEnglish ? item.work_en.title : item.work_zh.title }}</h3>\n              <!-- <p>{{item.work_zh.title }}({{item.work_en.title }})</p> -->\n              <p>{{ isEnglish ? 'artist：' : '藝術家：' }}{{ isEnglish ? item.work_zh.photo_1_d : item.work_en.photo_1_d }}</p>\n              <!-- <p>{{ isEnglish ? item.work_zh.photo_1_d : item.work_en.photo_1_d }}</p> -->\n            </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport { onMounted, ref, nextTick } from 'vue';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default {\n  name: 'PortfolioSection',\n  props: {\n    portfolioList: {\n      type: Array,\n      default: () => []\n    },\n    isEnglish: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup() {\n    const grid = ref(null);\n\n    const buildRowFadeIn = () => {\n      const container = grid.value;\n      if (!container) return;\n      const items = Array.from(container.querySelectorAll('.portfolio-item'));\n      if (!items.length) return;\n\n      // 初始狀態\n      gsap.set(items, { opacity: 0, y: 24 });\n\n      // 依 offsetTop 分組為各「行」\n      const rows = [];\n      const rowMap = new Map();\n      items.forEach((el) => {\n        const top = Math.round(el.offsetTop);\n        if (!rowMap.has(top)) rowMap.set(top, []);\n        rowMap.get(top).push(el);\n      });\n      // 由上到下排序\n      Array.from(rowMap.keys()).sort((a,b)=>a-b).forEach((k)=> rows.push(rowMap.get(k)));\n\n      // 建立逐行淡入動畫\n      const tl = gsap.timeline({\n        scrollTrigger: {\n          trigger: '#portfolio',\n          start: 'top 80%',\n          once: true\n        }\n      });\n\n      rows.forEach((rowEls, i) => {\n        tl.to(rowEls, {\n          opacity: 1,\n          y: 0,\n          duration: 0.6,\n          ease: 'power2.out',\n          stagger: 0.08\n        }, i * 0.18); // 每行間隔\n      });\n    };\n\n    onMounted(async () => {\n      await nextTick();\n      // 等圖片載入以取得正確 offsetTop\n      const images = grid.value ? Array.from(grid.value.querySelectorAll('img')) : [];\n      const waitAll = images.map(img => new Promise(resolve => {\n        if (img.complete) return resolve();\n        img.addEventListener('load', resolve, { once: true });\n        img.addEventListener('error', resolve, { once: true });\n      }));\n      Promise.all(waitAll).then(() => buildRowFadeIn());\n      // 視窗尺寸改變時重新建立（避免斷行變化）\n      window.addEventListener('resize', buildRowFadeIn, { passive: true });\n    });\n\n    return { grid };\n  },\n  methods: {\n    cacheWork(item) {\n      try {\n        const key = `work_${item.id}`;\n        localStorage.setItem(key, JSON.stringify(item));\n        const lang = localStorage.getItem('lang');\n        if (!lang) {\n          localStorage.setItem('lang', this.isEnglish ? 'en' : 'zh');\n        }\n      } catch (e) {\n        console.error('Failed to cache work detail:', e);\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.portfolio {\n  background: #000000;\n  padding: 80px 0;\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 30px 20px 120px;\n  color: #fff;\n}\n\n.section-title {\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 40px;\n  color: #ffffff;\n}\n\n.portfolio-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 30px;\n}\n\n.portfolio-item {\n  height: 250px;\n  position: relative;\n  // border-radius: 15px;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  /* 初始淡入狀態由JS設定 */\n}\n\n.portfolio-image {\n  height: 100%;\n  transition: filter 0.3s ease;\n}\n\n.portfolio-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  filter: brightness(0.7);\n  transition: filter 0.3s ease;\n}\n\n.portfolio-item:hover .portfolio-image img {\n  filter: brightness(1);\n}\n\n.portfolio-overlay {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: linear-gradient(transparent, rgba(0, 0, 0, 0.8));\n  color: white;\n  padding: 30px 20px 20px;\n  transform: translateY(0);\n  transition: transform 0.3s ease;\n}\n\n.portfolio-item:hover .portfolio-overlay {\n  transform: translateY(0);\n}\n\n.portfolio-overlay h3 {\n  margin-bottom: 10px;\n}\n\n.portfolio-overlay p {\n  margin: 0;\n}\n@media(max-width:768px){\n  .portfolio-grid{\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  }\n  .portfolio-item {\n    height:200px;\n  }\n  .portfolio-overlay h3{\n    font-size: 0.5em;\n  }\n}\n@media (min-width: 2560px){\n.container{\n  max-width:60%;\n}\n.portfolio-item{\n  height: 600px;\n}\n.portfolio-grid{\n  grid-template-columns: repeat(auto-fit, minmax(600px, 1fr));\n}\n.portfolio-overlay h3{\n  font-size:2.5em;\n}\n.portfolio-overlay p{\n  font-size: 2em;\n}\n}\n\n\n/* 4K: 3840px and wider — make fonts and spacing more generous but keep content readable */\n@media (min-width: 3840px){\n\n}\n</style> "],"mappings":";;EACWA,EAAE,EAAC,WAAW;EAACC,KAAK,EAAC;;;EACvBA,KAAK,EAAC;AAAW;;EAChBA,KAAK,EAAC;AAAe;;EACpBA,KAAK,EAAC,gBAAgB;EAACC,GAAG,EAAC;;;;EAGrBD,KAAK,EAAC,iBAAiB;EAACE,KAAqB,EAArB;IAAA;EAAA;;;;EAQ9BF,KAAK,EAAC;AAAmB;;uBAdlCG,mBAAA,CAqBU,WArBVC,UAqBU,GApBRC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJD,mBAAA,CAA2E,MAA3EE,UAA2E,EAAAC,gBAAA,CAA9CC,MAAA,CAAAC,SAAS,+CACtCL,mBAAA,CAUM,OAVNM,UAUM,I,kBATJR,mBAAA,CAQMS,SAAA,QAAAC,WAAA,CAR4CJ,MAAA,CAAAK,aAAa,GAA3BC,IAAI,EAAEC,GAAG;yBAA7Cb,mBAAA,CAQM;MARDH,KAAK,EAAC,gBAAgB;MAAuCiB,GAAG,EAAED;QACrEX,mBAAA,CAMI;MANAa,IAAI,YAAYH,IAAI,CAAChB,EAAE;MAAIoB,MAAM,EAAC,QAAQ;MAACC,GAAG,EAAC,UAAU;MAAEC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAACT,IAAI;QAClFV,mBAAA,CAEM,OAFNoB,UAEM,GADJpB,mBAAA,CAAqH;MAA/GqB,GAAG,0CAA0CX,IAAI,CAACY,OAAO;MAAGC,GAAG,EAAEb,IAAI,CAACc,KAAK;MAAE3B,KAAiC,EAAjC;QAAA;QAAA;MAAA;;0DAO3FG,mBAAA,CAKY,OALZyB,UAKY,GAJJzB,mBAAA,CAAkE,YAAAG,gBAAA,CAA3DC,MAAA,CAAAC,SAAS,GAAGqB,IAAA,CAAAhB,IAAI,CAACiB,OAAO,CAACH,KAAK,GAAGE,IAAA,CAAAhB,IAAI,CAACkB,OAAO,CAACJ,KAAK,kBAC1DK,mBAAA,6DAAgE,EAChE7B,mBAAA,CAA4G,WAAAG,gBAAA,CAAtGC,MAAA,CAAAC,SAAS,yBAAAF,gBAAA,CAA2BC,MAAA,CAAAC,SAAS,GAAGqB,IAAA,CAAAhB,IAAI,CAACkB,OAAO,CAACE,SAAS,GAAGJ,IAAA,CAAAhB,IAAI,CAACiB,OAAO,CAACG,SAAS,kBACrGD,mBAAA,8EAAiF,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}