{"ast":null,"code":"import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\nfunction createPair(key, value, ctx) {\n  const k = createNode(key, undefined, ctx);\n  const v = createNode(value, undefined, ctx);\n  return new Pair(k, v);\n}\nclass Pair {\n  constructor(key, value = null) {\n    Object.defineProperty(this, NODE_TYPE, {\n      value: PAIR\n    });\n    this.key = key;\n    this.value = value;\n  }\n  clone(schema) {\n    let {\n      key,\n      value\n    } = this;\n    if (isNode(key)) key = key.clone(schema);\n    if (isNode(value)) value = value.clone(schema);\n    return new Pair(key, value);\n  }\n  toJSON(_, ctx) {\n    const pair = ctx?.mapAsMap ? new Map() : {};\n    return addPairToJSMap(ctx, pair, this);\n  }\n  toString(ctx, onComment, onChompKeep) {\n    return ctx?.doc ? stringifyPair(this, ctx, onComment, onChompKeep) : JSON.stringify(this);\n  }\n}\nexport { Pair, createPair };","map":{"version":3,"names":["createNode","stringifyPair","addPairToJSMap","NODE_TYPE","PAIR","isNode","createPair","key","value","ctx","k","undefined","v","Pair","constructor","Object","defineProperty","clone","schema","toJSON","_","pair","mapAsMap","Map","toString","onComment","onChompKeep","doc","JSON","stringify"],"sources":["/Users/linhankuan/fvl2025/node_modules/yaml/browser/dist/nodes/Pair.js"],"sourcesContent":["import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,SAAS,EAAEC,IAAI,EAAEC,MAAM,QAAQ,eAAe;AAEvD,SAASC,UAAUA,CAACC,GAAG,EAAEC,KAAK,EAAEC,GAAG,EAAE;EACjC,MAAMC,CAAC,GAAGV,UAAU,CAACO,GAAG,EAAEI,SAAS,EAAEF,GAAG,CAAC;EACzC,MAAMG,CAAC,GAAGZ,UAAU,CAACQ,KAAK,EAAEG,SAAS,EAAEF,GAAG,CAAC;EAC3C,OAAO,IAAII,IAAI,CAACH,CAAC,EAAEE,CAAC,CAAC;AACzB;AACA,MAAMC,IAAI,CAAC;EACPC,WAAWA,CAACP,GAAG,EAAEC,KAAK,GAAG,IAAI,EAAE;IAC3BO,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEb,SAAS,EAAE;MAAEK,KAAK,EAAEJ;IAAK,CAAC,CAAC;IACvD,IAAI,CAACG,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,KAAK,GAAGA,KAAK;EACtB;EACAS,KAAKA,CAACC,MAAM,EAAE;IACV,IAAI;MAAEX,GAAG;MAAEC;IAAM,CAAC,GAAG,IAAI;IACzB,IAAIH,MAAM,CAACE,GAAG,CAAC,EACXA,GAAG,GAAGA,GAAG,CAACU,KAAK,CAACC,MAAM,CAAC;IAC3B,IAAIb,MAAM,CAACG,KAAK,CAAC,EACbA,KAAK,GAAGA,KAAK,CAACS,KAAK,CAACC,MAAM,CAAC;IAC/B,OAAO,IAAIL,IAAI,CAACN,GAAG,EAAEC,KAAK,CAAC;EAC/B;EACAW,MAAMA,CAACC,CAAC,EAAEX,GAAG,EAAE;IACX,MAAMY,IAAI,GAAGZ,GAAG,EAAEa,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3C,OAAOrB,cAAc,CAACO,GAAG,EAAEY,IAAI,EAAE,IAAI,CAAC;EAC1C;EACAG,QAAQA,CAACf,GAAG,EAAEgB,SAAS,EAAEC,WAAW,EAAE;IAClC,OAAOjB,GAAG,EAAEkB,GAAG,GACT1B,aAAa,CAAC,IAAI,EAAEQ,GAAG,EAAEgB,SAAS,EAAEC,WAAW,CAAC,GAChDE,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC;EAC9B;AACJ;AAEA,SAAShB,IAAI,EAAEP,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}