{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nexport default {\n  name: 'Cal-endar',\n  data() {\n    return {\n      selectedDate: null,\n      events: [{\n        id: 1,\n        date: 1,\n        time: '10:00',\n        title: '開幕式'\n      }, {\n        id: 2,\n        date: 3,\n        time: '14:00',\n        title: '工作坊'\n      }, {\n        id: 3,\n        date: 8,\n        time: '16:00',\n        title: '展覽開幕'\n      }, {\n        id: 4,\n        date: 15,\n        time: '19:00',\n        title: '音樂會'\n      }, {\n        id: 5,\n        date: 22,\n        time: '15:30',\n        title: '講座'\n      }, {\n        id: 6,\n        date: 30,\n        time: '18:00',\n        title: '閉幕式'\n      }]\n    };\n  },\n  computed: {\n    // 計算11月1日是星期幾（0=星期日，1=星期一...）\n    firstDayOfMonth() {\n      return new Date(2025, 10, 1).getDay(); // 10代表11月（月份從0開始）\n    },\n    // 11月有幾天\n    daysInMonth() {\n      return new Date(2025, 11, 0).getDate(); // 11代表12月，0代表上個月的最後一天\n    },\n    // 前一個月需要顯示的日期\n    prevMonthDays() {\n      const days = [];\n      const prevMonthDays = new Date(2025, 9, 0).getDate(); // 10月的最後一天\n      for (let i = this.firstDayOfMonth - 1; i >= 0; i--) {\n        days.push(prevMonthDays - i);\n      }\n      return days;\n    },\n    // 當前月份的日期\n    currentMonthDays() {\n      const days = [];\n      for (let i = 1; i <= this.daysInMonth; i++) {\n        days.push(i);\n      }\n      return days;\n    },\n    // 下一個月需要顯示的日期\n    nextMonthDays() {\n      const days = [];\n      const totalCells = 42; // 6行 x 7列\n      const usedCells = this.prevMonthDays.length + this.currentMonthDays.length;\n      const remainingCells = totalCells - usedCells;\n      for (let i = 1; i <= remainingCells; i++) {\n        days.push(i);\n      }\n      return days;\n    }\n  },\n  methods: {\n    selectDate(day) {\n      this.selectedDate = day;\n    },\n    isToday(day) {\n      const today = new Date();\n      return today.getFullYear() === 2025 && today.getMonth() === 10 && today.getDate() === day;\n    },\n    hasEvent(day) {\n      return this.events.some(event => event.date === day);\n    },\n    getEventsForDate(day) {\n      return this.events.filter(event => event.date === day);\n    }\n  }\n};","map":{"version":3,"names":["name","data","selectedDate","events","id","date","time","title","computed","firstDayOfMonth","Date","getDay","daysInMonth","getDate","prevMonthDays","days","i","push","currentMonthDays","nextMonthDays","totalCells","usedCells","length","remainingCells","methods","selectDate","day","isToday","today","getFullYear","getMonth","hasEvent","some","event","getEventsForDate","filter"],"sources":["/Users/linhankuan/fvl2025/src/components/Calendar.vue"],"sourcesContent":["<template>\n  <div class=\"calendar-container\">\n    <div class=\"calendar-header\">\n      <h3>2025年11月</h3>\n      <p class=\"calendar-subtitle\">November 2025</p>\n    </div>\n    \n    <div class=\"calendar-grid\">\n      <!-- 星期標題 -->\n      <div class=\"calendar-weekdays\">\n        <div class=\"weekday\">日</div>\n        <div class=\"weekday\">一</div>\n        <div class=\"weekday\">二</div>\n        <div class=\"weekday\">三</div>\n        <div class=\"weekday\">四</div>\n        <div class=\"weekday\">五</div>\n        <div class=\"weekday\">六</div>\n      </div>\n      \n      <!-- 日期格子 -->\n      <div class=\"calendar-days\">\n        <!-- 10月的日期（前一個月的尾巴） -->\n        <div class=\"day prev-month\" v-for=\"day in prevMonthDays\" :key=\"`prev-${day}`\">\n          {{ day }}\n        </div>\n        \n        <!-- 11月的日期 -->\n        <div \n          class=\"day current-month\" \n          :class=\"{ \n            'today': isToday(day),\n            'has-event': hasEvent(day)\n          }\"\n          v-for=\"day in currentMonthDays\" \n          :key=\"`current-${day}`\"\n          @click=\"selectDate(day)\"\n        >\n          {{ day }}\n          <div class=\"event-indicator\" v-if=\"hasEvent(day)\"></div>\n        </div>\n        \n        <!-- 12月的日期（下一個月的開頭） -->\n        <div class=\"day next-month\" v-for=\"day in nextMonthDays\" :key=\"`next-${day}`\">\n          {{ day }}\n        </div>\n      </div>\n    </div>\n    \n    <!-- 選中日期的詳細資訊 -->\n    <div class=\"selected-date-info\" v-if=\"selectedDate\">\n      <h4>{{ selectedDate }} 日</h4>\n      <div class=\"date-events\" v-if=\"getEventsForDate(selectedDate).length > 0\">\n        <div class=\"event-item\" v-for=\"event in getEventsForDate(selectedDate)\" :key=\"event.id\">\n          <span class=\"event-time\">{{ event.time }}</span>\n          <span class=\"event-title\">{{ event.title }}</span>\n        </div>\n      </div>\n      <p v-else class=\"no-events\">當日無活動安排</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Cal-endar',\n  data() {\n    return {\n      selectedDate: null,\n      events: [\n        { id: 1, date: 1, time: '10:00', title: '開幕式' },\n        { id: 2, date: 3, time: '14:00', title: '工作坊' },\n        { id: 3, date: 8, time: '16:00', title: '展覽開幕' },\n        { id: 4, date: 15, time: '19:00', title: '音樂會' },\n        { id: 5, date: 22, time: '15:30', title: '講座' },\n        { id: 6, date: 30, time: '18:00', title: '閉幕式' }\n      ]\n    }\n  },\n  computed: {\n    // 計算11月1日是星期幾（0=星期日，1=星期一...）\n    firstDayOfMonth() {\n      return new Date(2025, 10, 1).getDay(); // 10代表11月（月份從0開始）\n    },\n    \n    // 11月有幾天\n    daysInMonth() {\n      return new Date(2025, 11, 0).getDate(); // 11代表12月，0代表上個月的最後一天\n    },\n    \n    // 前一個月需要顯示的日期\n    prevMonthDays() {\n      const days = [];\n      const prevMonthDays = new Date(2025, 9, 0).getDate(); // 10月的最後一天\n      for (let i = this.firstDayOfMonth - 1; i >= 0; i--) {\n        days.push(prevMonthDays - i);\n      }\n      return days;\n    },\n    \n    // 當前月份的日期\n    currentMonthDays() {\n      const days = [];\n      for (let i = 1; i <= this.daysInMonth; i++) {\n        days.push(i);\n      }\n      return days;\n    },\n    \n    // 下一個月需要顯示的日期\n    nextMonthDays() {\n      const days = [];\n      const totalCells = 42; // 6行 x 7列\n      const usedCells = this.prevMonthDays.length + this.currentMonthDays.length;\n      const remainingCells = totalCells - usedCells;\n      \n      for (let i = 1; i <= remainingCells; i++) {\n        days.push(i);\n      }\n      return days;\n    }\n  },\n  methods: {\n    selectDate(day) {\n      this.selectedDate = day;\n    },\n    \n    isToday(day) {\n      const today = new Date();\n      return today.getFullYear() === 2025 && \n             today.getMonth() === 10 && \n             today.getDate() === day;\n    },\n    \n    hasEvent(day) {\n      return this.events.some(event => event.date === day);\n    },\n    \n    getEventsForDate(day) {\n      return this.events.filter(event => event.date === day);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.calendar-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n}\n\n.calendar-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.calendar-header h3 {\n  font-size: 2rem;\n  font-weight: 700;\n  color: #333;\n  margin: 0 0 5px 0;\n}\n\n.calendar-subtitle {\n  font-size: 1.1rem;\n  color: #666;\n  margin: 0;\n  font-weight: 300;\n}\n\n.calendar-grid {\n  margin-bottom: 30px;\n}\n\n.calendar-weekdays {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 1px;\n  margin-bottom: 10px;\n}\n\n.weekday {\n  padding: 15px 10px;\n  text-align: center;\n  font-weight: 600;\n  color: #555;\n  background: #f8f9fa;\n  border-radius: 8px;\n  font-size: 0.9rem;\n}\n\n.calendar-days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 1px;\n}\n\n.day {\n  aspect-ratio: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  cursor: pointer;\n  border-radius: 8px;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  font-size: 0.95rem;\n}\n\n.day.prev-month,\n.day.next-month {\n  color: #ccc;\n  cursor: default;\n}\n\n.day.current-month {\n  color: #333;\n  background: white;\n  border: 1px solid #e0e0e0;\n}\n\n.day.today {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  font-weight: 700;\n  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\n}\n\n.day.has-event {\n  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\n  color: white;\n  font-weight: 600;\n}\n\n\n\n.event-indicator {\n  position: absolute;\n  bottom: 4px;\n  width: 6px;\n  height: 6px;\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 50%;\n}\n\n.selected-date-info {\n  background: #f8f9fa;\n  padding: 20px;\n  border-radius: 8px;\n  border-left: 4px solid #667eea;\n}\n\n.selected-date-info h4 {\n  margin: 0 0 15px 0;\n  color: #333;\n  font-size: 1.2rem;\n}\n\n.date-events {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.event-item {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  padding: 10px;\n  background: white;\n  border-radius: 6px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.event-time {\n  font-weight: 600;\n  color: #667eea;\n  min-width: 60px;\n}\n\n.event-title {\n  color: #333;\n  font-weight: 500;\n}\n\n.no-events {\n  color: #666;\n  font-style: italic;\n  margin: 0;\n}\n\n@media (max-width: 768px) {\n  .calendar-container {\n    padding: 15px;\n    margin: 0 10px;\n  }\n  \n  .calendar-header h3 {\n    font-size: 1.5rem;\n  }\n  \n  .weekday {\n    padding: 10px 5px;\n    font-size: 0.8rem;\n  }\n  \n  .day {\n    font-size: 0.85rem;\n  }\n  \n  .selected-date-info {\n    padding: 15px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}