{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../assets/2025banner.jpg';\nconst _hoisted_1 = {\n  class: \"particles\",\n  ref: \"threeContainer\",\n  id: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n    class: \"mobile\"\n  }, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    style: {\n      \"height\": \"100vh\",\n      \"width\": \"100vw\"\n    }\n  })], -1 /* CACHED */)]), 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["_imports_0","class","ref","id","_createElementBlock","_hoisted_1","_cache","_createElementVNode","src","style"],"sources":["/Users/linhankuan/fvl2025/src/components/BannerParticles.vue"],"sourcesContent":["<template>\n  <div class=\"particles\" ref=\"threeContainer\" id=\"container\">\n    <div class=\"mobile\">\n      <img src=\"../assets/2025banner.jpg\" style=\"height: 100vh;width: 100vw;\">\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as THREE from 'three';\n\nexport default {\n  name: 'BannerPt',\n  mounted() {\n    // === 基本場景設置 ===\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      100\n    );\n    camera.position.z = 10;\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true, preserveDrawingBuffer: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0x000000, 0); // 完全透明背景\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.$refs.threeContainer.appendChild(renderer.domElement);\n\n    // === 建立圓形貼圖 ===\n    // const canvas = document.createElement('canvas');\n    // canvas.width = 64;\n    // canvas.height = 64;\n    // const ctx = canvas.getContext('2d');\n    // const center = 32;\n    // const radius = 30;\n\n    // // 畫一個白色圓形，背景透明\n    // ctx.clearRect(0, 0, 64, 64);\n    // ctx.beginPath();\n    // ctx.arc(center, center, radius, 0, Math.PI * 2);\n    // ctx.closePath();\n    // ctx.fillStyle = 'white';\n    // ctx.fill();\n    const canvas = document.createElement('canvas');\n      canvas.width = 64;\n      canvas.height = 64;\n    const ctx = canvas.getContext('2d');\n    const center = 32;\n    const radius = 30;\n\n    // 清空背景\n    ctx.clearRect(0, 0, 64, 64);\n\n    // 建立徑向漸層\n    const gradient = ctx.createLinearGradient(center, center, 0, center, center, radius);\n    gradient.addColorStop(0, '#ffb9eb'); // 中心色：粉紅\n    gradient.addColorStop(1, '#86e3ff'); // 外圍色：淺藍\n\n    ctx.beginPath();\n    ctx.arc(center, center, radius, 0, Math.PI * 2);\n    ctx.closePath();\n    ctx.fillStyle = gradient;\n    ctx.fill();\n\n    const circleTexture = new THREE.CanvasTexture(canvas);\n\n\n    // const circleTexture = new THREE.CanvasTexture(canvas);\n\n    // === 建立粒子幾何體與材質 ===\n    const geometry = new THREE.BufferGeometry();\n    const vertices = [];\n\n    const particleCount = 500;\n    for (let i = 0; i < particleCount; i++) {\n      const x = THREE.MathUtils.randFloatSpread(20);\n      const y = THREE.MathUtils.randFloatSpread(20);\n      const z = THREE.MathUtils.randFloatSpread(20);\n      vertices.push(x, y, z);\n    }\n\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n\n    const material = new THREE.PointsMaterial({\n      size: 0.2,\n      map: circleTexture,\n      transparent: true,\n      alphaTest: 0.5,\n      depthWrite: false,\n      blending: THREE.AdditiveBlending,\n      color: 0xFFE4FF,\n      rotation:45\n    });\n\n    const particles = new THREE.Points(geometry, material);\n    scene.add(particles);\n\n    // === 單一粒子（可選）===\n    const singleGeometry = new THREE.BufferGeometry();\n    singleGeometry.setAttribute(\n      'position',\n      new THREE.Float32BufferAttribute([45, 0, 0], 3)\n    );\n    const spherePoint = new THREE.Points(singleGeometry, material);\n    scene.add(spherePoint);\n\n    // === 光源 ===\n    const ambientLight = new THREE.AmbientLight(0xffbdff); // 改成正確顏色\n    scene.add(ambientLight);\n\n    // === 動畫迴圈 ===\n    function animate() {\n      requestAnimationFrame(animate);\n      // particles.rotation.y += 0.001;\n      particles.rotation.y += 0.0006;\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    // === 窗口調整 ===\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n  }\n};\n</script>\n<style>\n\n\n@media (min-width:768px){\n  .mobile {\n    height: 100vh; /* 避免手機瀏覽器 UI 影響顯示高度 */\n    width: 100vw;\n    /* overflow: hidden; */\n    object-fit: cover;\n    display: none;\n  }\n}</style>"],"mappings":";OAGWA,UAA8B;;EAFlCC,KAAK,EAAC,WAAW;EAACC,GAAG,EAAC,gBAAgB;EAACC,EAAE,EAAC;;;uBAA/CC,mBAAA,CAIM,OAJNC,UAIM,EAAAC,MAAA,QAAAA,MAAA,OAHJC,mBAAA,CAEM;IAFDN,KAAK,EAAC;EAAQ,IACjBM,mBAAA,CAAwE;IAAnEC,GAA8B,EAA9BR,UAA8B;IAACS,KAAmC,EAAnC;MAAA;MAAA;IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}