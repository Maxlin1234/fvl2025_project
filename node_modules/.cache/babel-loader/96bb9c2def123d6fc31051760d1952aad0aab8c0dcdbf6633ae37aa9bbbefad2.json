{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/dome.mp4';\nconst _hoisted_1 = {\n  class: \"wrap\",\n  style: {\n    \"margin\": \"0\",\n    \"padding\": \"0\",\n    \"font-family\": \"'Poppins', sans-serif\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"banner\"\n};\nconst _hoisted_3 = {\n  ref: \"myVideo\",\n  autoplay: \"\",\n  muted: \"\",\n  playsinline: \"\",\n  \"webkit-playsinline\": \"\",\n  \"x5-playsinline\": \"\",\n  loop: \"\",\n  preload: \"auto\",\n  width: \"100%\",\n  height: \"auto\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" <video autoplay muted loop style=\\\"width: 100%\\\"> \\n        <source src=\\\"../assets/dome.mp4\\\" type=\\\"video/mp4\\\">\\n        \\n      </video> \"), _createElementVNode(\"video\", _hoisted_3, _cache[0] || (_cache[0] = [_createElementVNode(\"source\", {\n    src: _imports_0,\n    type: \"video/mp4\"\n  }, null, -1 /* CACHED */), _createTextVNode(\" Your browser does not support HTML5 video. \")]), 512 /* NEED_PATCH */), _cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"FUTURE VISION LAB\", -1 /* CACHED */))])]);\n}","map":{"version":3,"names":["_imports_0","class","style","ref","autoplay","muted","playsinline","loop","preload","width","height","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_cache","src","type"],"sources":["/Users/linhankuan/Documents/GitHub/fvl2025_project/src/components/VideoBanner.vue"],"sourcesContent":["<template>\n  <div class=\"wrap\" style=\"margin:0;padding:0;font-family: 'Poppins', sans-serif;\">\n    <div class=\"banner\">\n      <!-- <video autoplay muted loop style=\"width: 100%\"> \n        <source src=\"../assets/dome.mp4\" type=\"video/mp4\">\n        \n      </video> -->\n      <video\n      ref=\"myVideo\"\n      autoplay\n      muted\n      playsinline\n      webkit-playsinline\n      x5-playsinline\n      loop\n      preload=\"auto\"\n      width=\"100%\"\n      height=\"auto\"\n    >\n      <source src=\"@/assets/dome.mp4\" type=\"video/mp4\" />\n      Your browser does not support HTML5 video.\n    </video>\n      <h2>FUTURE VISION LAB</h2>\n      \n    </div>\n  </div>\n</template>\n\n<script>\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nexport default {\n  name: 'VideoBanner',\n  mounted(){\n    const video = this.$refs.myVideo;\n    if (!video) {\n      console.warn('找不到影片元素');\n      return;\n    }\n    // 確保屬性在播放前已設定（iOS/Safari 需求）\n    try {\n      video.muted = true;\n      video.playsInline = true;\n      video.autoplay = true;\n      video.setAttribute('muted', '');\n      video.setAttribute('playsinline', '');\n      video.setAttribute('webkit-playsinline', '');\n      video.setAttribute('x5-playsinline', '');\n      video.setAttribute('autoplay', '');\n      // 確保不顯示控制列，避免干擾自動播放\n      video.removeAttribute('controls');\n      video.controls = false;\n    } catch (err) {\n      console.warn('設定影片屬性時發生錯誤', err);\n    }\n\n    const tryPlay = () => {\n      // 先重新載入以確保屬性生效\n      try { video.load(); } catch (err) { console.warn('重新載入影片失敗', err); }\n      const p = video.play();\n      if (p && typeof p.then === 'function') {\n        p.catch((err) => {\n          console.log('自動播放被阻止:', err);\n        });\n      }\n    };\n\n    if (video.readyState >= 2) {\n      tryPlay();\n    } else {\n      video.addEventListener('canplay', tryPlay, { once: true });\n      // 某些瀏覽器不觸發 canplay，短暫延遲再嘗試\n      setTimeout(tryPlay, 500);\n    }\n\n    // 手機裝置：若首次被阻擋，於使用者首次互動時再嘗試一次\n    const resumeOnGesture = () => {\n      if (video && video.paused) {\n        tryPlay();\n      }\n      window.removeEventListener('touchstart', resumeOnGesture, true);\n      window.removeEventListener('pointerdown', resumeOnGesture, true);\n      window.removeEventListener('scroll', resumeOnGesture, true);\n      window.removeEventListener('visibilitychange', onVis, true);\n    };\n    const onVis = () => {\n      if (!document.hidden) resumeOnGesture();\n    };\n    window.addEventListener('touchstart', resumeOnGesture, true);\n    window.addEventListener('pointerdown', resumeOnGesture, true);\n    window.addEventListener('scroll', resumeOnGesture, true);\n    window.addEventListener('visibilitychange', onVis, true);\n\n    // 記錄解除監聽的函式，於卸載時清理\n    this._cleanupVideoBanner = () => {\n      try {\n        window.removeEventListener('touchstart', resumeOnGesture, true);\n        window.removeEventListener('pointerdown', resumeOnGesture, true);\n        window.removeEventListener('scroll', resumeOnGesture, true);\n        window.removeEventListener('visibilitychange', onVis, true);\n        video.removeEventListener('canplay', tryPlay, { once: true });\n      } catch (err) { console.warn('清理事件監聽失敗', err); }\n    };\n    gsap.registerPlugin(ScrollTrigger);\n     gsap.to(\".banner h2\",{\n      x:0,\n    // rotation: 360,\n    opacity:1,\n    ease: \"power1.out\",\n    scrollTrigger : {\n      trigger: \".banner h2\", //觸發的物件(可省略)\n      start: \"0% 20%\", // (物件開始位置, 卷軸開始位置) 參數可以設定 top center bottom px %\n      end: \"+=0 80%\", //(物件結束位置, 卷軸結束位置) , 也可以設卷軸捲動多少結束動畫(+=300是指start的位置再加上300)\n      // pin: true, // 物件執行完動畫會跟著卷軸走，類似 position: fixed\n      scrub: 3, // 物件動畫延遲的秒數\n      toggleClass: \"active\", // 增加移除的class，class名稱須為字串\n      // markers: true // 顯示標記\n     }\n  })\n  },\n  beforeUnmount() {\n    if (this._cleanupVideoBanner) {\n      this._cleanupVideoBanner();\n      this._cleanupVideoBanner = null;\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.banner {\n  width: 100%;\n  height:120vh;\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.banner video {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  object-fit: cover;\n}\n\n\n.banner h2 {\n  @keyframes fadeIn {\n  0% { \n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n  animation: fadeIn 2s;\t  \n  font-family: \"Monda\", sans-serif;\n  position: absolute;\n  z-index: 0;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  font-size:22em;\n  font-weight:900;\n  text-align:left;\n  line-height: 1.1cap;\n  text-transform: uppercase;\n  mix-blend-mode: screen;\n  color: #000;\n  background-color: #fff;\n  margin: 0;\n  // padding-left:0.2em;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  -webkit-text-stroke: 15px #000;\n  line-height:0.8em;\n}\n\n@media (max-width:768px){\n  .banner{\n    height: 50vh;\n  }\n  .banner h2{\n    font-size: 5em;\n    line-height: 1.1;\n    -webkit-text-stroke: 5px #000;\n  }\n}\n\n@media (max-width:480px){\n  .banner h2{\n    font-size: 6em;\n    padding: 0;\n  }\n}\n@media (min-width: 2560px){\n  .banner{\n    max-height: 20vh;\n  }\n}\n</style> "],"mappings":";OAmBcA,UAAuB;;EAlB9BC,KAAK,EAAC,MAAM;EAACC,KAA8D,EAA9D;IAAA;IAAA;IAAA;EAAA;;;EACXD,KAAK,EAAC;AAAQ;;EAMjBE,GAAG,EAAC,SAAS;EACbC,QAAQ,EAAR,EAAQ;EACRC,KAAK,EAAL,EAAK;EACLC,WAAW,EAAX,EAAW;EACX,oBAAkB,EAAlB,EAAkB;EAClB,gBAAc,EAAd,EAAc;EACdC,IAAI,EAAJ,EAAI;EACJC,OAAO,EAAC,MAAM;EACdC,KAAK,EAAC,MAAM;EACZC,MAAM,EAAC;;;uBAhBXC,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBJC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,mBAAA,kJAGY,EACZF,mBAAA,CAcM,SAdNG,UAcM,EAAAC,MAAA,QAAAA,MAAA,OAFNJ,mBAAA,CAAmD;IAA3CK,GAAuB,EAAvBlB,UAAuB;IAACmB,IAAI,EAAC;8CAAc,8CAErD,E,oDACEN,mBAAA,CAA0B,YAAtB,mBAAiB,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}