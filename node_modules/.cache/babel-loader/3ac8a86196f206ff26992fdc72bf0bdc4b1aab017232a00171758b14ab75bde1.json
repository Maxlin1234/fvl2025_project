{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"btn-zh\"\n};\nconst _hoisted_2 = {\n  class: \"btn-zh\"\n};\nconst _hoisted_3 = {\n  class: \"btn-zh\"\n};\nconst _hoisted_4 = {\n  class: \"btn-zh\"\n};\nconst _hoisted_5 = {\n  class: \"btn-zh\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeroSection = _resolveComponent(\"HeroSection\");\n  const _component_BannerParticles = _resolveComponent(\"BannerParticles\");\n  const _component_FixedSection = _resolveComponent(\"FixedSection\");\n  const _component_AboutSection = _resolveComponent(\"AboutSection\");\n  const _component_VideoBanner = _resolveComponent(\"VideoBanner\");\n  const _component_PortfolioSection = _resolveComponent(\"PortfolioSection\");\n  const _component_TeamSection = _resolveComponent(\"TeamSection\");\n  const _component_FooterBar = _resolveComponent(\"FooterBar\");\n  const _component_Drawers = _resolveComponent(\"Drawers\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <div class=\\\"particles-container\\\" style=\\\"position: absolute;z-index: 999;\\\">\\n    <BannerParticles/>\\n    </div> \"), _createCommentVNode(\" 首頁區塊 \"), _createVNode(_component_HeroSection, {\n    showButtons: false,\n    onShowDrawer: $options.handleShowDrawer,\n    onChangeEn: $options.handleLanguageChange\n  }, null, 8 /* PROPS */, [\"onShowDrawer\", \"onChangeEn\"]), _createVNode(_component_BannerParticles), _createCommentVNode(\" 全域角落按鈕，出現在所有區塊上方 \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"global-corner-btns\", [{\n      en: $data.isEnglish\n    }, {\n      expanded: $data.showAllButtons\n    }]])\n  }, [_createCommentVNode(\" 四顆目標按鈕（預設疊在MENU處，展開時飛向角落） \"), _createElementVNode(\"button\", {\n    class: \"corner-btn target top-left\",\n    onMouseenter: _cache[0] || (_cache[0] = $event => $options.handleShowDrawer('schedule'))\n  }, [_createElementVNode(\"span\", _hoisted_1, _toDisplayString($data.isEnglish ? 'SCHEDULE' : '場次表'), 1 /* TEXT */)], 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    class: \"corner-btn target top-right\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.handleLanguageChange(!$data.isEnglish))\n  }, [_createElementVNode(\"span\", _hoisted_2, _toDisplayString($data.isEnglish ? '中文' : 'EN'), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    class: \"corner-btn target bottom-left\",\n    onMouseenter: _cache[2] || (_cache[2] = $event => $options.handleShowDrawer('lecture'))\n  }, [_createElementVNode(\"span\", _hoisted_3, _toDisplayString($data.isEnglish ? 'INFO' : '入場須知'), 1 /* TEXT */)], 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    class: \"corner-btn target bottom-right\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.handleShowDrawer('about'))\n  }, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString($data.isEnglish ? 'ABOUT' : '關於我們'), 1 /* TEXT */)]), _createCommentVNode(\" MENU 啟動按鈕 \"), _createElementVNode(\"button\", {\n    class: \"corner-btn launcher bottom-right\",\n    onClick: _cache[4] || (_cache[4] = $event => $data.showAllButtons = true)\n  }, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString($data.isEnglish ? 'MENU' : '選單'), 1 /* TEXT */)])], 2 /* CLASS */), _createCommentVNode(\" <Banner/> \"), _createCommentVNode(\" 節目時間表區塊 \"), _createCommentVNode(\" <ScheduleSection /> \"), _createCommentVNode(\" 2025年11月日曆區塊 \"), _createCommentVNode(\" <CalendarSection /> \"), _createCommentVNode(\" 固定背景區域 \"), _createVNode(_component_FixedSection, {\n    isEnglish: $data.isEnglish\n  }, null, 8 /* PROPS */, [\"isEnglish\"]), _createCommentVNode(\" 關於區塊 \"), _createVNode(_component_AboutSection, {\n    firstImage: $data.firstImage,\n    isEnglish: $data.isEnglish\n  }, null, 8 /* PROPS */, [\"firstImage\", \"isEnglish\"]), _createCommentVNode(\" DOME視頻橫幅 \"), _createVNode(_component_VideoBanner), _createCommentVNode(\" 作品集區塊 \"), _createVNode(_component_PortfolioSection, {\n    portfolioList: $data.portfolioList,\n    isEnglish: $data.isEnglish\n  }, null, 8 /* PROPS */, [\"portfolioList\", \"isEnglish\"]), _createCommentVNode(\" 製作團隊區塊 \"), _createVNode(_component_TeamSection, {\n    isEnglish: $data.isEnglish\n  }, null, 8 /* PROPS */, [\"isEnglish\"]), _createCommentVNode(\" 頁腳 \"), _createVNode(_component_FooterBar), _createCommentVNode(\" 抽屜組件 \"), _createVNode(_component_Drawers, {\n    showLiveDrawer: $data.showLiveDrawer,\n    showDrawer: $data.showDrawer,\n    showLectureDrawer: $data.showLectureDrawer,\n    currentEventImage: $options.currentEventImage,\n    isEnglish: $data.isEnglish,\n    onCloseDrawer: $options.handleCloseDrawer,\n    onEventTypeChanged: $options.handleEventTypeChange\n  }, null, 8 /* PROPS */, [\"showLiveDrawer\", \"showDrawer\", \"showLectureDrawer\", \"currentEventImage\", \"isEnglish\", \"onCloseDrawer\", \"onEventTypeChanged\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createCommentVNode","_createVNode","_component_HeroSection","showButtons","onShowDrawer","$options","handleShowDrawer","onChangeEn","handleLanguageChange","_component_BannerParticles","_createElementVNode","_normalizeClass","en","$data","isEnglish","expanded","showAllButtons","onMouseenter","_cache","$event","_hoisted_1","_toDisplayString","onClick","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_component_FixedSection","_component_AboutSection","firstImage","_component_VideoBanner","_component_PortfolioSection","portfolioList","_component_TeamSection","_component_FooterBar","_component_Drawers","showLiveDrawer","showDrawer","showLectureDrawer","currentEventImage","onCloseDrawer","handleCloseDrawer","onEventTypeChanged","handleEventTypeChange"],"sources":["/Users/linhankuan/fvl2025/src/components/MainSection.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <div class=\"particles-container\" style=\"position: absolute;z-index: 999;\">\n    <BannerParticles/>\n    </div> -->\n    <!-- 首頁區塊 -->\n    <HeroSection :showButtons=\"false\" @show-drawer=\"handleShowDrawer\" @change-en=\"handleLanguageChange\" />\n    <BannerParticles/>\n\n    <!-- 全域角落按鈕，出現在所有區塊上方 -->\n    <div class=\"global-corner-btns\" :class=\"[{ en: isEnglish }, { expanded: showAllButtons }]\">\n      <!-- 四顆目標按鈕（預設疊在MENU處，展開時飛向角落） -->\n      <button class=\"corner-btn target top-left\" @mouseenter=\"handleShowDrawer('schedule')\">\n        <span class=\"btn-zh\">{{ isEnglish ? 'SCHEDULE' : '場次表' }}</span>\n      </button>\n      <button class=\"corner-btn target top-right\" @click=\"handleLanguageChange(!isEnglish)\">\n        <span class=\"btn-zh\">{{ isEnglish ? '中文' : 'EN' }}</span>\n      </button>\n      <button class=\"corner-btn target bottom-left\" @mouseenter=\"handleShowDrawer('lecture')\">\n        <span class=\"btn-zh\">{{ isEnglish ? 'INFO' : '入場須知' }}</span>\n      </button>\n      <button class=\"corner-btn target bottom-right\" @click=\"handleShowDrawer('about')\">\n        <span class=\"btn-zh\">{{ isEnglish ? 'ABOUT' : '關於我們' }}</span>\n      </button>\n\n      <!-- MENU 啟動按鈕 -->\n      <button class=\"corner-btn launcher bottom-right\" @click=\"showAllButtons = true\">\n        <span class=\"btn-zh\">{{ isEnglish ? 'MENU' : '選單' }}</span>\n      </button>\n    </div>\n\n    <!-- <Banner/> -->\n\n    <!-- 節目時間表區塊 -->\n    <!-- <ScheduleSection /> -->\n\n    <!-- 2025年11月日曆區塊 -->\n    <!-- <CalendarSection /> -->\n\n    <!-- 固定背景區域 -->\n    <FixedSection :isEnglish=\"isEnglish\" />\n\n    <!-- 關於區塊 -->\n    <AboutSection :firstImage=\"firstImage\" :isEnglish=\"isEnglish\" />\n\n    <!-- DOME視頻橫幅 -->\n    <VideoBanner />\n\n    <!-- 作品集區塊 -->\n    <PortfolioSection :portfolioList=\"portfolioList\" :isEnglish=\"isEnglish\" />\n\n    <!-- 製作團隊區塊 -->\n    <TeamSection :isEnglish=\"isEnglish\" />\n\n    <!-- 頁腳 -->\n    <FooterBar />\n\n    <!-- 抽屜組件 -->\n    <Drawers \n      :showLiveDrawer=\"showLiveDrawer\"\n      :showDrawer=\"showDrawer\"\n      :showLectureDrawer=\"showLectureDrawer\"\n      :currentEventImage=\"currentEventImage\"\n      :isEnglish=\"isEnglish\"\n      @close-drawer=\"handleCloseDrawer\"\n      @event-type-changed=\"handleEventTypeChange\"\n    />\n  </div>\n</template>\n\n<script>\nimport BannerParticles from './BannerParticles.vue';\nimport FooterBar from './FooterBar.vue';\nimport HeroSection from './HeroSection.vue';\n// import ScheduleSection from './ScheduleSection.vue';\n// import CalendarSection from './CalendarSection.vue';\nimport FixedSection from './FixedSection.vue';\nimport AboutSection from './AboutSection.vue';\nimport VideoBanner from './VideoBanner.vue';\nimport PortfolioSection from './PortfolioSection.vue';\nimport TeamSection from './TeamSection.vue';\nimport Drawers from './Drawers.vue';\nimport axios from 'axios';\nimport { gsap } from 'gsap';\nimport { SplitText } from 'gsap/SplitText';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\nimport img1 from '../assets/1.jpg';\nimport img2 from '../assets/2.jpg';\nimport img3 from '../assets/3.jpg';\n\ngsap.registerPlugin(SplitText, ScrollTrigger);\n\nexport default {\n  name: 'MainSection',\n  components: { \n    BannerParticles,\n    FooterBar, \n    HeroSection,\n    // ScheduleSection,\n    // CalendarSection,\n    FixedSection,\n    AboutSection,\n    VideoBanner,\n    PortfolioSection,\n    TeamSection,\n    Drawers\n  },\n  data() {\n    return {\n      testdata: [],\n      firstImage: {},\n      form: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      showLiveDrawer: false,\n      showDrawer: false,\n      showLectureDrawer: false,\n      currentEventType: 'exhibition',\n      portfolioList: [],\n      isEnglish: false,\n      showAllButtons: false,\n    }\n  },\n  computed: {\n    currentEventImage() {\n      const imageMap = {\n        'exhibition': img1,\n        'workshop': img2,\n        'performance': img3\n      };\n      return imageMap[this.currentEventType] || img1;\n    }\n  },\n  mounted() {\n    this.initLanguage();\n    // 手機版預設顯示四顆按鈕，並監聽視窗尺寸變化\n    const setByWidth = () => {\n      if (window.innerWidth <= 768) {\n        this.showAllButtons = true;\n      } else {\n        this.showAllButtons = false;\n      }\n    };\n    setByWidth();\n    window.addEventListener('resize', setByWidth);\n\n    this.fetchData();\n    this.initTextAnimation();\n    this.initSunAnimation();\n    this.initCloud1Animation();\n    this.initCloud2Animation();\n    this.initServicesSliderScroll();\n  },\n  methods: {\n    initLanguage() {\n      try {\n        const savedLang = localStorage.getItem(\"lang\");\n        if (savedLang === \"en\") {\n          this.isEnglish = true;\n        } else if (savedLang === \"zh\") {\n          this.isEnglish = false;\n        }\n        console.log(\"Initial language set to:\", this.isEnglish ? \"English\" : \"Chinese\");\n      } catch (e) {\n        console.warn(\"Failed to read language from localStorage:\", e);\n      }\n    },\n    async fetchData() {\n      try {\n        const response1 = await axios.get('https://unzip-clab-api.clab.org.tw/api/v1/schedules/5/works?page=0&limit=25', {responseType: 'json'});\n        this.testdata = response1.data.results[1].photo_1;\n        this.firstImage = this.testdata;\n\n        const response2 = await axios.get('https://unzip-clab-api.clab.org.tw/api/v1/schedules/3/works?page=0&limit=25', {responseType: 'json'});\n        this.portfolioList = response2.data;\n\n        await this.fetchDatabaseData();\n      } catch (error) {\n        console.error('獲取資料失敗:', error);\n      }\n    },\n\n    handleShowDrawer(drawerType) {\n      this.showLiveDrawer = false;\n      this.showDrawer = false;\n      this.showLectureDrawer = false;\n\n      switch (drawerType) {\n        case 'schedule':\n          this.showDrawer = true;\n          break;\n        case 'about':\n          this.showLiveDrawer = true;\n          break;\n        case 'lecture':\n          this.showLectureDrawer = true;\n          break;\n      }\n    },\n\n    handleCloseDrawer(drawerType) {\n      switch (drawerType) {\n        case 'schedule':\n          this.showDrawer = false;\n          break;\n        case 'about':\n          this.showLiveDrawer = false;\n          break;\n        case 'lecture':\n          this.showLectureDrawer = false;\n          break;\n      }\n    },\n\n    handleEventTypeChange(eventType) {\n      this.currentEventType = eventType;\n    },\n\n    handleLanguageChange(isEnglish) {\n      console.log('Language changed to:', isEnglish ? 'English' : 'Chinese');\n      this.isEnglish = isEnglish;\n      console.log('MainSection isEnglish is now:', this.isEnglish);\n      try {\n        localStorage.setItem('lang', isEnglish ? 'en' : 'zh');\n      } catch (e) {\n        console.warn('Failed to persist language:', e);\n      }\n    },\n\n    async fetchDatabaseData() {\n      try {\n        const response = await axios.get('http://localhost:3001/api/data');\n        console.log(response.data);\n        return response.data;\n      } catch (error) {\n        console.error('❌ 取得資料庫資料失敗:', error);\n        return [];\n      }\n    },\n\n    scrollToSection(sectionId) {\n      const element = document.getElementById(sectionId);\n      if (element) {\n        element.scrollIntoView({ behavior: 'smooth' });\n      }\n    },\n\n    submitForm() {\n      alert('感謝您的訊息！我們會盡快回覆您。');\n      this.form = { name: '', email: '', message: '' };\n    },\n\n    initTextAnimation() {\n      const splitTitle = document.querySelector('.split')\n      if (splitTitle) {\n        const splitText = new SplitText(splitTitle, {\n          type: \"chars, words\",\n          charsClass: \"char\",\n          wordsClass: \"word\"\n        })\n        gsap.set(splitText.chars, {\n          opacity: 0,\n          y: 50,\n          rotationX: -90\n        })\n        gsap.to(splitText.chars, {\n          opacity: 1,\n          y: 0,\n          rotationX: 0,\n          duration: 0.8,\n          stagger: 0.05,\n          ease: \"back.out(1.7)\"\n        })\n      }\n\n      const heroTitle = document.querySelector('.hero-title')\n      if (heroTitle) {\n        const splitTitle = new SplitText(heroTitle, {\n          type: \"chars, words\",\n          charsClass: \"char\",\n          wordsClass: \"word\"\n        })\n        gsap.set(splitTitle.chars, {\n          opacity: 0,\n          y: 50,\n          rotationX: -90\n        })\n        gsap.to(splitTitle.chars, {\n          opacity: 1,\n          y: 0,\n          rotationX: 0,\n          duration: 0.8,\n          stagger: 0.05,\n          ease: \"back.out(1.7)\"\n        })\n      }\n\n      const heroSubtitle = document.querySelector('.hero-subtitle')\n      if (heroSubtitle) {\n        const splitSubtitle = new SplitText(heroSubtitle, {\n          type: \"words\",\n          wordsClass: \"word\"\n        })\n        gsap.set(splitSubtitle.words, {\n          opacity: 0,\n          y: 30\n        })\n        gsap.to(splitSubtitle.words, {\n          opacity: 1,\n          y: 0,\n          duration: 0.6,\n          stagger: 0.1,\n          delay: 0.5,\n          ease: \"power2.out\"\n        })\n      }\n\n      gsap.fromTo('#schedule .section-title, #schedule .schedule-table', \n        { opacity: 0, y: 50 },\n        { opacity: 1, y: 0, duration: 0.8, stagger: 0.2, ease: \"power2.out\",\n          scrollTrigger: { trigger: \"#schedule\", start: \"top 80%\", end: \"bottom 20%\", toggleActions: \"play none none reverse\" }\n        }\n      )\n\n      gsap.fromTo('#portfolio .section-title, #portfolio .portfolio-item', \n        { opacity: 0, y: 50 },\n        { opacity: 1, y: 0, duration: 0.8, stagger: 0.2, ease: \"power2.out\",\n          scrollTrigger: { trigger: \"#portfolio\", start: \"top 80%\", end: \"bottom 20%\", toggleActions: \"play none none reverse\" }\n        }\n      )\n\n      gsap.fromTo('#team .section-title, #team .team-item', \n        { opacity: 0, y: 30 },\n        { opacity: 1, y: 0, duration: 0.6, stagger: 0.1, ease: \"power2.out\",\n          scrollTrigger: { trigger: \"#team\", start: \"top 80%\", end: \"bottom 20%\", toggleActions: \"play none none reverse\" }\n        }\n      )\n    },\n\n    initSunAnimation() {\n      if (!this.$refs.sunImg) return;\n      gsap.set(this.$refs.sunImg, { y: '100%', opacity: 1 });\n      gsap.to(this.$refs.sunImg, { y: '0%', repeat: 0, yoyo: true, opacity: 1, duration: 2, ease: \"power2.Out\" });\n    },\n\n    initCloud1Animation() {\n      if (!this.$refs.cloud1Img) return;\n      gsap.set(this.$refs.cloud1Img, { y: '100%', opacity: 1 });\n      gsap.to(this.$refs.cloud1Img, { y: '0%', opacity: 1, duration: 4, ease: \"power2.out\" });\n    },\n\n    initCloud2Animation() {\n      if (!this.$refs.cloud2Img) return;\n      gsap.set(this.$refs.cloud2Img, { y: '100%', opacity: 1 });\n      gsap.to(this.$refs.cloud2Img, { y: '0%', opacity: 1, duration: 3, ease: \"power2.out\" });\n    },\n\n    scrollServices(direction) {\n      const slider = this.$refs.servicesSlider;\n      const card = slider?.querySelector?.('.service-card');\n      if (slider && card) {\n        const scrollAmount = card.offsetWidth + 24;\n        slider.scrollBy({ left: direction * scrollAmount, behavior: 'smooth' });\n      }\n    },\n\n    initServicesSliderScroll() {\n      this.$nextTick(() => {\n        const slider = this.$refs.servicesSlider;\n        if (!slider) return;\n        const container = slider.parentElement;\n        const cardWidth = 320;\n        const gap = 24;\n        const containerPadding = 40;\n        const availableWidth = container.offsetWidth - containerPadding;\n        const cardsPerView = Math.floor(availableWidth / (cardWidth + gap));\n        const totalCards = slider.children.length;\n        const maxScroll = Math.max(0, (totalCards - cardsPerView) * (cardWidth + gap));\n        if (maxScroll <= 0) return;\n        gsap.set(slider, { x: 0 });\n        gsap.to(slider, { x: -maxScroll, ease: 'none',\n          scrollTrigger: { trigger: '#services', start: 'top top', end: '+=' + maxScroll, scrub: 1.2, pin: true, anticipatePin: 1, markers: true }\n        });\n      });\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n$body-font:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n\nbody {\n  background: #181818;\n  color: #fff;\n  font-family:$body-font;\n  line-height: 1.6;\n  margin: 0 !important;\n}\n\nh1{\n  font-size:8vw;\n  font-family: 'Syncopate',sans-serif;\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 30px 20px 120px;\n  color: #fff;\n}\n\nsection {\n  background: transparent;\n  color: #fff;\n}\n\n.about {\n  background: #fff;\n  color: #111;\n}\n\n.about .section-title,\n.about .about-text,\n.about .about-stats,\n.about .stat-item,\n.about .stat-item h3 {\n  color: #111;\n}\n\n.services {\n  background: #ecebe7;\n  color: #fff;\n}\n\n.portfolio {\n  background: #232526;\n  color: #fff;\n}\n\n.contact {\n  background: #181818;\n  color: #fff;\n}\n\n.team {\n  background: #232526;\n  color: #fff;\n}\n\n.schedule {\n  background: #181818;\n  color: #fff;\n}\n\n.schedule-table {\n  background: #fff;\n  color: #111;\n}\n\n.schedule-table th, .schedule-table td {\n  color: #111;\n}\n\n.schedule-table th {\n  background: #f5f5f5;\n  color: #111;\n  border-bottom: 2px solid #333;\n}\n\n.schedule-table tr:not(:last-child) td {\n  border-bottom: 1px solid #eee;\n}\n\n.schedule-table tr:hover td {\n  background: #f0f0f0;\n  color: #111;\n}\n\n.stat-item {\n  background: #181818;\n  color: #fff;\n  box-shadow: 0 5px 15px rgba(0,0,0,0.3);\n}\n\n.service-card {\n  background: #232526;\n  color: #fff;\n  box-shadow: 0 10px 30px rgba(0,0,0,0.3);\n}\n\n.contact-form {\n  background: #232526;\n  color: #fff;\n  box-shadow: 0 10px 30px rgba(0,0,0,0.3);\n}\n\n.team-content{\n  position: relative;\n  padding: 5em 2em 2em 2em; \n  backdrop-filter: blur(10px);\n}\n\n.team-list {\n  background: transparent;\n  color: #fff;\n}\n\n.team-item {\n  background: #000000;\n  color: #bbb;\n  border-left: 4px solid #fff;\n  font-size: 1rem;\n}\n\n.team-role {\n  font-weight: 700;\n  color: #111;\n  margin-right: 8px;\n}\n\n.footer-bar {\n  background: #111;\n  color: #fff;\n}\n\n::-webkit-scrollbar {\n  background: #181818;\n  width: 8px;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #333;\n  border-radius: 4px;\n}\n\n@media (max-width: 600px) {\n  .schedule-table th, .schedule-table td {\n    padding: 12px 8px;\n    font-size: 0.95rem;\n  }\n}\n\n.section-title {\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 40px;\n  color: #ffffff;\n}\n\n@media (max-width: 768px) {\n  .section-title {\n    font-size: 2rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .service-card,\n  .contact-form {\n    padding: 30px 20px;\n  }\n}\n\n.char { display: inline-block; transform-origin: center; }\n.word { display: inline-block; margin-right: 0.2em; }\n.hero-title, .hero-subtitle, .split { white-space: nowrap; overflow: hidden; }\n.split { font-size: 3.5rem; font-weight: bold; margin-bottom: 20px; color: #fff; }\n@media (max-width: 768px) {\n  .hero-title, .hero-subtitle, .split { white-space: normal; }\n  .split { font-size: 2.5rem; }\n}\n\n.global-corner-btns {\n  position: fixed;\n  inset: 0;\n  pointer-events: none;\n  z-index: 1000;\n  --btn: 5em;\n}\n.global-corner-btns .corner-btn {\n  position: absolute;\n  width: var(--btn);\n  height: var(--btn);\n  border-radius: 50%;\n  background:black;\n  color: white;\n  font-weight: bold;\n  border: none;\n  box-shadow: 0 4px 20px rgba(255, 255, 255, 0.3);\n  cursor: pointer;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: transform 0.9s cubic-bezier(.2,.8,.2,1), opacity 0.5s ease;\n  pointer-events: auto;\n}\n\n/* 初始：所有 target 按鈕疊在 MENU（右下角），縮小且隱藏 */\n.global-corner-btns .target {\n  bottom: 24px; right: 24px;\n  transform: translate(0, 0) scale(0);\n  opacity: 0;\n}\n\n/* 展開時：從 MENU 飛向角落 */\n.global-corner-btns.expanded .target { opacity: 1; transform: scale(1); }\n.global-corner-btns.expanded .target.top-left    { transform: translate(calc(-100vw + var(--btn) + 48px), calc(-100vh + var(--btn) + 48px)) scale(1); }\n.global-corner-btns.expanded .target.top-right   { transform: translate(0, calc(-100vh + var(--btn) + 48px)) scale(1); }\n.global-corner-btns.expanded .target.bottom-left { transform: translate(calc(-100vw + var(--btn) + 48px), 0) scale(1); }\n/* bottom-right 留在原地，僅從 scale(0)->scale(1) */\n\n/* MENU 按鈕在展開後淡出且不可點擊 */\n.global-corner-btns .launcher { bottom: 24px; right: 24px; }\n.global-corner-btns.expanded .launcher { opacity: 0; pointer-events: none; transition: opacity 0.3s ease; }\n\n.global-corner-btns .corner-btn span {\n  display: block;\n  max-width: 90%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n/* 英文長字時縮小字級，確保完全顯示 */\n.global-corner-btns.en .top-left span {\n  font-size: 0.72em;\n  max-width: 100%;\n  white-space: nowrap;\n  overflow: visible;\n  text-overflow: clip;\n  letter-spacing: 0.5px;\n}\n\n@media (max-width: 768px) {\n  .global-corner-btns{\n    position: fixed;\n    --btn: 80px;\n  }\n  .global-corner-btns .corner-btn {\n    font-size: 15px;\n    padding: 0 6px;\n  }\n  /* 在手機上直接顯示四顆就位，避免大位移動畫造成突兀 */\n  .global-corner-btns .target,\n  .global-corner-btns.expanded .target { transform: none; opacity: 1; }\n  .global-corner-btns .top-left    { bottom: 16px; left:40px;  right: auto; }\n  .global-corner-btns .top-right   { bottom: 16px; left:20px; right: auto; }\n  .global-corner-btns .bottom-left { bottom: 16px; left: 10px;  right: auto; }\n  .global-corner-btns .bottom-right{ bottom: 16px; right: 10px;  left: auto; }\n  .global-corner-btns .launcher { display: none; }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}