{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.to-array.js\";\n/*!\n * MotionPathHelper 3.13.0\n * https://gsap.com\n *\n * @license Copyright 2008-2025, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nimport PathEditor from \"./utils/PathEditor.js\";\nlet gsap,\n  _win,\n  _doc,\n  _docEl,\n  _body,\n  MotionPathPlugin,\n  _arrayToRawPath,\n  _rawPathToString,\n  _context,\n  _bonusValidated = 1,\n  //<name>MotionPathHelper</name>\n  _selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n  _isString = value => typeof value === \"string\",\n  _createElement = (type, ns) => {\n    let e = _doc.createElementNS ? _doc.createElementNS((ns || \"http://www.w3.org/1999/xhtml\").replace(/^https/, \"http\"), type) : _doc.createElement(type); //some servers swap in https for http in the namespace which can break things, making \"style\" inaccessible.\n    return e.style ? e : _doc.createElement(type); //some environments won't allow access to the element's style when created with a namespace in which case we default to the standard createElement() to work around the issue. Also note that when GSAP is embedded directly inside an SVG file, createElement() won't allow access to the style object in Firefox (see https://gsap.com/forums/topic/20215-problem-using-tweenmax-in-standalone-self-containing-svg-file-err-cannot-set-property-csstext-of-undefined/).\n  },\n  _getPositionOnPage = target => {\n    let bounds = target.getBoundingClientRect(),\n      windowOffsetY = _docEl.clientTop - (_win.pageYOffset || _docEl.scrollTop || _body.scrollTop || 0),\n      windowOffsetX = _docEl.clientLeft - (_win.pageXOffset || _docEl.scrollLeft || _body.scrollLeft || 0);\n    return {\n      left: bounds.left + windowOffsetX,\n      top: bounds.top + windowOffsetY,\n      right: bounds.right + windowOffsetX,\n      bottom: bounds.bottom + windowOffsetY\n    };\n  },\n  _getInitialPath = (x, y) => {\n    let coordinates = [0, 31, 8, 58, 24, 75, 40, 90, 69, 100, 100, 100],\n      i;\n    for (i = 0; i < coordinates.length; i += 2) {\n      coordinates[i] += x;\n      coordinates[i + 1] += y;\n    }\n    return \"M\" + x + \",\" + y + \"C\" + coordinates.join(\",\");\n  },\n  _getGlobalTime = animation => {\n    let time = animation.totalTime();\n    while (animation) {\n      time = animation.startTime() + time / (animation.timeScale() || 1);\n      animation = animation.parent;\n    }\n    return time;\n  },\n  _copyElement,\n  _initCopyToClipboard = () => {\n    _copyElement = _createElement(\"textarea\");\n    _copyElement.style.display = \"none\";\n    _body.appendChild(_copyElement);\n  },\n  _parsePath = (path, target, vars) => _isString(path) && _selectorExp.test(path) ? _doc.querySelector(path) : Array.isArray(path) ? _rawPathToString(_arrayToRawPath([{\n    x: gsap.getProperty(target, \"x\"),\n    y: gsap.getProperty(target, \"y\")\n  }, ...path], vars)) : _isString(path) || path && (path.tagName + \"\").toLowerCase() === \"path\" ? path : 0,\n  _addCopyToClipboard = (target, getter, onComplete) => {\n    target.addEventListener('click', e => {\n      if (e.target._gsHelper) {\n        let c = getter(e.target);\n        _copyElement.value = c;\n        if (c && _copyElement.select) {\n          console.log(c);\n          _copyElement.style.display = \"block\";\n          _copyElement.select();\n          try {\n            _doc.execCommand('copy');\n            _copyElement.blur();\n            onComplete && onComplete(target);\n          } catch (err) {\n            console.warn(\"Copy didn't work; this browser doesn't permit that.\");\n          }\n          _copyElement.style.display = \"none\";\n        }\n      }\n    });\n  },\n  _identityMatrixObject = {\n    matrix: {\n      a: 1,\n      b: 0,\n      c: 0,\n      d: 1,\n      e: 0,\n      f: 0\n    }\n  },\n  _getConsolidatedMatrix = target => (target.transform.baseVal.consolidate() || _identityMatrixObject).matrix,\n  _findMotionPathTween = target => {\n    let tweens = gsap.getTweensOf(target),\n      i = 0;\n    for (; i < tweens.length; i++) {\n      if (tweens[i].vars.motionPath) {\n        return tweens[i];\n      } else if (tweens[i].timeline) {\n        tweens.push(...tweens[i].timeline.getChildren());\n      }\n    }\n  },\n  _initCore = (core, required) => {\n    let message = \"Please gsap.registerPlugin(MotionPathPlugin)\";\n    _win = window;\n    gsap = gsap || core || _win.gsap || console.warn(message);\n    gsap && PathEditor.register(gsap);\n    _doc = document;\n    _body = _doc.body;\n    _docEl = _doc.documentElement;\n    if (gsap) {\n      MotionPathPlugin = gsap.plugins.motionPath;\n      MotionPathHelper.PathEditor = PathEditor;\n      _context = gsap.core.context || function () {};\n    }\n    if (!MotionPathPlugin) {\n      required === true && console.warn(message);\n    } else {\n      _initCopyToClipboard();\n      _arrayToRawPath = MotionPathPlugin.arrayToRawPath;\n      _rawPathToString = MotionPathPlugin.rawPathToString;\n    }\n  };\nexport class MotionPathHelper {\n  constructor(targetOrTween, vars = {}) {\n    if (!MotionPathPlugin) {\n      _initCore(vars.gsap, 1);\n    }\n    let copyButton = _createElement(\"div\"),\n      self = this,\n      offset = {\n        x: 0,\n        y: 0\n      },\n      target,\n      path,\n      isSVG,\n      startX,\n      startY,\n      position,\n      svg,\n      animation,\n      svgNamespace,\n      temp,\n      matrix,\n      refreshPath,\n      animationToScrub,\n      createdSVG;\n    if (targetOrTween instanceof gsap.core.Tween) {\n      animation = targetOrTween;\n      target = animation.targets()[0];\n    } else {\n      target = gsap.utils.toArray(targetOrTween)[0];\n      animation = _findMotionPathTween(target);\n    }\n    path = _parsePath(vars.path, target, vars);\n    this.offset = offset;\n    position = _getPositionOnPage(target);\n    startX = parseFloat(gsap.getProperty(target, \"x\", \"px\"));\n    startY = parseFloat(gsap.getProperty(target, \"y\", \"px\"));\n    isSVG = target.getCTM && target.tagName.toLowerCase() !== \"svg\";\n    if (animation && !path) {\n      path = _parsePath(animation.vars.motionPath.path || animation.vars.motionPath, target, animation.vars.motionPath);\n    }\n    copyButton.setAttribute(\"class\", \"copy-motion-path\");\n    copyButton.style.cssText = \"border-radius:8px; background-color:rgba(85, 85, 85, 0.7); color:#fff; cursor:pointer; padding:6px 12px; font-family:Signika Negative, Arial, sans-serif; position:fixed; left:50%; transform:translate(-50%, 0); font-size:19px; bottom:10px\";\n    copyButton.innerText = \"COPY MOTION PATH\";\n    copyButton._gsHelper = self;\n    (gsap.utils.toArray(vars.container)[0] || _body).appendChild(copyButton);\n    _addCopyToClipboard(copyButton, () => self.getString(), () => gsap.fromTo(copyButton, {\n      backgroundColor: \"white\"\n    }, {\n      duration: 0.5,\n      backgroundColor: \"rgba(85, 85, 85, 0.6)\"\n    }));\n    svg = path && path.ownerSVGElement;\n    if (!svg) {\n      svgNamespace = isSVG && target.ownerSVGElement && target.ownerSVGElement.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\";\n      if (isSVG) {\n        svg = target.ownerSVGElement;\n        temp = target.getBBox();\n        matrix = _getConsolidatedMatrix(target);\n        startX = matrix.e;\n        startY = matrix.f;\n        offset.x = temp.x;\n        offset.y = temp.y;\n      } else {\n        svg = _createElement(\"svg\", svgNamespace);\n        createdSVG = true;\n        _body.appendChild(svg);\n        svg.setAttribute(\"viewBox\", \"0 0 100 100\");\n        svg.setAttribute(\"class\", \"motion-path-helper\");\n        svg.style.cssText = \"overflow:visible; background-color: transparent; position:absolute; z-index:5000; width:100px; height:100px; top:\" + (position.top - startY) + \"px; left:\" + (position.left - startX) + \"px;\";\n      }\n      temp = _isString(path) && !_selectorExp.test(path) ? path : _getInitialPath(startX, startY);\n      path = _createElement(\"path\", svgNamespace);\n      path.setAttribute(\"d\", temp);\n      path.setAttribute(\"vector-effect\", \"non-scaling-stroke\");\n      path.style.cssText = \"fill:transparent; stroke-width:\" + (vars.pathWidth || 3) + \"; stroke:\" + (vars.pathColor || \"#555\") + \"; opacity:\" + (vars.pathOpacity || 0.6);\n      svg.appendChild(path);\n    } else {\n      vars.pathColor && gsap.set(path, {\n        stroke: vars.pathColor\n      });\n      vars.pathWidth && gsap.set(path, {\n        strokeWidth: vars.pathWidth\n      });\n      vars.pathOpacity && gsap.set(path, {\n        opacity: vars.pathOpacity\n      });\n    }\n    if (offset.x || offset.y) {\n      gsap.set(path, {\n        x: offset.x,\n        y: offset.y\n      });\n    }\n    if (!(\"selected\" in vars)) {\n      vars.selected = true;\n    }\n    if (!(\"anchorSnap\" in vars)) {\n      vars.anchorSnap = p => {\n        if (p.x * p.x + p.y * p.y < 16) {\n          p.x = p.y = 0;\n        }\n      };\n    }\n    animationToScrub = animation && animation.parent && animation.parent.data === \"nested\" ? animation.parent.parent : animation;\n    vars.onPress = () => {\n      animationToScrub.pause(0);\n    };\n    refreshPath = () => {\n      //let m = _getConsolidatedMatrix(path);\n      //animation.vars.motionPath.offsetX = m.e - offset.x;\n      //animation.vars.motionPath.offsetY = m.f - offset.y;\n      animation.invalidate();\n      animationToScrub.restart();\n    };\n    vars.onRelease = vars.onDeleteAnchor = refreshPath;\n    this.editor = PathEditor.create(path, vars);\n    if (vars.center) {\n      gsap.set(target, {\n        transformOrigin: \"50% 50%\",\n        xPercent: -50,\n        yPercent: -50\n      });\n    }\n    if (animation) {\n      if (animation.vars.motionPath.path) {\n        animation.vars.motionPath.path = path;\n      } else {\n        animation.vars.motionPath = {\n          path: path\n        };\n      }\n      if (animationToScrub.parent !== gsap.globalTimeline) {\n        gsap.globalTimeline.add(animationToScrub, _getGlobalTime(animationToScrub) - animationToScrub.delay());\n      }\n      animationToScrub.repeat(-1).repeatDelay(1);\n    } else {\n      animation = animationToScrub = gsap.to(target, {\n        motionPath: {\n          path: path,\n          start: vars.start || 0,\n          end: \"end\" in vars ? vars.end : 1,\n          autoRotate: \"autoRotate\" in vars ? vars.autoRotate : false,\n          align: path,\n          alignOrigin: vars.alignOrigin\n        },\n        duration: vars.duration || 5,\n        ease: vars.ease || \"power1.inOut\",\n        repeat: -1,\n        repeatDelay: 1,\n        paused: !vars.path\n      });\n    }\n    this.animation = animation;\n    _context(this);\n    this.kill = this.revert = () => {\n      this.editor.kill();\n      copyButton.parentNode && copyButton.parentNode.removeChild(copyButton);\n      createdSVG && svg.parentNode && svg.parentNode.removeChild(svg);\n      animationToScrub && animationToScrub.revert();\n    };\n  }\n  getString() {\n    return this.editor.getString(true, -this.offset.x, -this.offset.y);\n  }\n}\nMotionPathHelper.register = _initCore;\nMotionPathHelper.create = (target, vars) => new MotionPathHelper(target, vars);\nMotionPathHelper.editPath = (path, vars) => PathEditor.create(path, vars);\nMotionPathHelper.version = \"3.13.0\";\nexport { MotionPathHelper as default };","map":{"version":3,"names":["PathEditor","gsap","_win","_doc","_docEl","_body","MotionPathPlugin","_arrayToRawPath","_rawPathToString","_context","_bonusValidated","_selectorExp","_isString","value","_createElement","type","ns","e","createElementNS","replace","createElement","style","_getPositionOnPage","target","bounds","getBoundingClientRect","windowOffsetY","clientTop","pageYOffset","scrollTop","windowOffsetX","clientLeft","pageXOffset","scrollLeft","left","top","right","bottom","_getInitialPath","x","y","coordinates","i","length","join","_getGlobalTime","animation","time","totalTime","startTime","timeScale","parent","_copyElement","_initCopyToClipboard","display","appendChild","_parsePath","path","vars","test","querySelector","Array","isArray","getProperty","tagName","toLowerCase","_addCopyToClipboard","getter","onComplete","addEventListener","_gsHelper","c","select","console","log","execCommand","blur","err","warn","_identityMatrixObject","matrix","a","b","d","f","_getConsolidatedMatrix","transform","baseVal","consolidate","_findMotionPathTween","tweens","getTweensOf","motionPath","timeline","push","getChildren","_initCore","core","required","message","window","register","document","body","documentElement","plugins","MotionPathHelper","context","arrayToRawPath","rawPathToString","constructor","targetOrTween","copyButton","self","offset","isSVG","startX","startY","position","svg","svgNamespace","temp","refreshPath","animationToScrub","createdSVG","Tween","targets","utils","toArray","parseFloat","getCTM","setAttribute","cssText","innerText","container","getString","fromTo","backgroundColor","duration","ownerSVGElement","getAttribute","getBBox","pathWidth","pathColor","pathOpacity","set","stroke","strokeWidth","opacity","selected","anchorSnap","p","data","onPress","pause","invalidate","restart","onRelease","onDeleteAnchor","editor","create","center","transformOrigin","xPercent","yPercent","globalTimeline","add","delay","repeat","repeatDelay","to","start","end","autoRotate","align","alignOrigin","ease","paused","kill","revert","parentNode","removeChild","editPath","version","default"],"sources":["/Users/linhankuan/Documents/GitHub/fvl2025_project/node_modules/gsap/src/MotionPathHelper.js"],"sourcesContent":["/*!\n * MotionPathHelper 3.13.0\n * https://gsap.com\n *\n * @license Copyright 2008-2025, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nimport PathEditor from \"./utils/PathEditor.js\";\n\nlet gsap, _win, _doc, _docEl, _body, MotionPathPlugin,  _arrayToRawPath, _rawPathToString, _context,\n\t_bonusValidated = 1, //<name>MotionPathHelper</name>\n\t_selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n\t_isString = value => typeof(value) === \"string\",\n\t_createElement = (type, ns) => {\n\t\tlet e = _doc.createElementNS ? _doc.createElementNS((ns || \"http://www.w3.org/1999/xhtml\").replace(/^https/, \"http\"), type) : _doc.createElement(type); //some servers swap in https for http in the namespace which can break things, making \"style\" inaccessible.\n\t\treturn e.style ? e : _doc.createElement(type); //some environments won't allow access to the element's style when created with a namespace in which case we default to the standard createElement() to work around the issue. Also note that when GSAP is embedded directly inside an SVG file, createElement() won't allow access to the style object in Firefox (see https://gsap.com/forums/topic/20215-problem-using-tweenmax-in-standalone-self-containing-svg-file-err-cannot-set-property-csstext-of-undefined/).\n\t},\n\t_getPositionOnPage = target => {\n\t\tlet bounds = target.getBoundingClientRect(),\n\t\t\twindowOffsetY = _docEl.clientTop - (_win.pageYOffset || _docEl.scrollTop || _body.scrollTop || 0),\n\t\t\twindowOffsetX = _docEl.clientLeft - (_win.pageXOffset || _docEl.scrollLeft || _body.scrollLeft || 0);\n\t\treturn {left:bounds.left + windowOffsetX, top:bounds.top + windowOffsetY, right: bounds.right + windowOffsetX, bottom: bounds.bottom + windowOffsetY};\n\t},\n\t_getInitialPath = (x, y) => {\n\t\tlet coordinates = [0,31,8,58,24,75,40,90,69,100,100,100],\n\t\t\ti;\n\t\tfor (i = 0; i < coordinates.length; i+=2) {\n\t\t\tcoordinates[i] += x;\n\t\t\tcoordinates[i+1] += y;\n\t\t}\n\t\treturn \"M\" + x + \",\" + y + \"C\" + coordinates.join(\",\");\n\t},\n\t_getGlobalTime = animation => {\n\t\tlet time = animation.totalTime();\n\t\twhile (animation) {\n\t\t\ttime = animation.startTime() + time / (animation.timeScale() || 1);\n\t\t\tanimation = animation.parent;\n\t\t}\n\t\treturn time;\n\t},\n\t_copyElement,\n\t_initCopyToClipboard = () => {\n\t\t_copyElement = _createElement(\"textarea\");\n\t\t_copyElement.style.display = \"none\";\n\t\t_body.appendChild(_copyElement);\n\t},\n\t_parsePath = (path, target, vars) => (_isString(path) && _selectorExp.test(path)) ? _doc.querySelector(path) : Array.isArray(path) ? _rawPathToString(_arrayToRawPath([{x:gsap.getProperty(target, \"x\"), y:gsap.getProperty(target, \"y\")}, ...path], vars)) : (_isString(path) || path && (path.tagName + \"\").toLowerCase() === \"path\") ? path : 0,\n\t_addCopyToClipboard = (target, getter, onComplete) => {\n\t\ttarget.addEventListener('click', e => {\n\t\t\tif (e.target._gsHelper) {\n\t\t\t\tlet c = getter(e.target);\n\t\t\t\t_copyElement.value = c;\n\t\t\t\tif (c && _copyElement.select) {\n\t\t\t\t\tconsole.log(c);\n\t\t\t\t\t_copyElement.style.display = \"block\";\n\t\t\t\t\t_copyElement.select();\n\t\t\t\t\ttry {\n\t\t\t\t\t\t_doc.execCommand('copy');\n\t\t\t\t\t\t_copyElement.blur();\n\t\t\t\t\t\tonComplete && onComplete(target);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.warn(\"Copy didn't work; this browser doesn't permit that.\");\n\t\t\t\t\t}\n\t\t\t\t\t_copyElement.style.display = \"none\";\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\t_identityMatrixObject = {matrix:{a:1, b:0, c:0, d:1, e:0, f:0}},\n\t_getConsolidatedMatrix = target => (target.transform.baseVal.consolidate() || _identityMatrixObject).matrix,\n\t_findMotionPathTween = target => {\n\t\tlet tweens = gsap.getTweensOf(target),\n\t\t\ti = 0;\n\t\tfor (; i < tweens.length; i++) {\n\t\t\tif (tweens[i].vars.motionPath) {\n\t\t\t\treturn tweens[i];\n\t\t\t} else if (tweens[i].timeline) {\n\t\t\t\ttweens.push(...tweens[i].timeline.getChildren());\n\t\t\t}\n\t\t}\n\t},\n\t_initCore = (core, required) => {\n\t\tlet message = \"Please gsap.registerPlugin(MotionPathPlugin)\";\n\t\t_win = window;\n\t\tgsap = gsap || core || _win.gsap || console.warn(message);\n\t\tgsap && PathEditor.register(gsap);\n\t\t_doc = document;\n\t\t_body = _doc.body;\n\t\t_docEl = _doc.documentElement;\n\t\tif (gsap) {\n\t\t\tMotionPathPlugin = gsap.plugins.motionPath;\n\t\t\tMotionPathHelper.PathEditor = PathEditor;\n\t\t\t_context = gsap.core.context || function() {};\n\t\t}\n\t\tif (!MotionPathPlugin) {\n\t\t\t(required === true) && console.warn(message);\n\t\t} else {\n\t\t\t_initCopyToClipboard();\n\t\t\t_arrayToRawPath = MotionPathPlugin.arrayToRawPath;\n\t\t\t_rawPathToString = MotionPathPlugin.rawPathToString;\n\t\t}\n\t};\n\nexport class MotionPathHelper {\n\n\tconstructor(targetOrTween, vars = {}) {\n\t\tif (!MotionPathPlugin) {\n\t\t\t_initCore(vars.gsap, 1);\n\t\t}\n\t\tlet copyButton = _createElement(\"div\"),\n\t\t\tself = this,\n\t\t\toffset = {x:0, y:0},\n\t\t\ttarget, path, isSVG, startX, startY, position, svg, animation, svgNamespace, temp, matrix, refreshPath, animationToScrub, createdSVG;\n\t\tif (targetOrTween instanceof gsap.core.Tween) {\n\t\t\tanimation = targetOrTween;\n\t\t\ttarget = animation.targets()[0];\n\t\t} else {\n\t\t\ttarget = gsap.utils.toArray(targetOrTween)[0];\n\t\t\tanimation = _findMotionPathTween(target);\n\t\t}\n\t\tpath = _parsePath(vars.path, target, vars);\n\t\tthis.offset = offset;\n\t\tposition = _getPositionOnPage(target);\n\t\tstartX = parseFloat(gsap.getProperty(target, \"x\", \"px\"));\n\t\tstartY = parseFloat(gsap.getProperty(target, \"y\", \"px\"));\n\t\tisSVG = (target.getCTM && target.tagName.toLowerCase() !== \"svg\");\n\t\tif (animation && !path) {\n\t\t\tpath = _parsePath(animation.vars.motionPath.path || animation.vars.motionPath, target, animation.vars.motionPath);\n\t\t}\n\t\tcopyButton.setAttribute(\"class\", \"copy-motion-path\");\n\t\tcopyButton.style.cssText = \"border-radius:8px; background-color:rgba(85, 85, 85, 0.7); color:#fff; cursor:pointer; padding:6px 12px; font-family:Signika Negative, Arial, sans-serif; position:fixed; left:50%; transform:translate(-50%, 0); font-size:19px; bottom:10px\";\n\t\tcopyButton.innerText = \"COPY MOTION PATH\";\n\t\tcopyButton._gsHelper = self;\n\t\t(gsap.utils.toArray(vars.container)[0] || _body).appendChild(copyButton);\n\t\t_addCopyToClipboard(copyButton, () => self.getString(), () => gsap.fromTo(copyButton, {backgroundColor:\"white\"}, {duration:0.5, backgroundColor:\"rgba(85, 85, 85, 0.6)\"}));\n\t\tsvg = path && path.ownerSVGElement;\n\t\tif (!svg) {\n\t\t\tsvgNamespace = (isSVG && target.ownerSVGElement && target.ownerSVGElement.getAttribute(\"xmlns\")) || \"http://www.w3.org/2000/svg\";\n\t\t\tif (isSVG) {\n\t\t\t\tsvg = target.ownerSVGElement;\n\t\t\t\ttemp = target.getBBox();\n\t\t\t\tmatrix = _getConsolidatedMatrix(target);\n\t\t\t\tstartX = matrix.e;\n\t\t\t\tstartY = matrix.f;\n\t\t\t\toffset.x = temp.x;\n\t\t\t\toffset.y = temp.y;\n\t\t\t} else {\n\t\t\t\tsvg = _createElement(\"svg\", svgNamespace);\n\t\t\t\tcreatedSVG = true;\n\t\t\t\t_body.appendChild(svg);\n\t\t\t\tsvg.setAttribute(\"viewBox\", \"0 0 100 100\");\n\t\t\t\tsvg.setAttribute(\"class\", \"motion-path-helper\");\n\t\t\t\tsvg.style.cssText = \"overflow:visible; background-color: transparent; position:absolute; z-index:5000; width:100px; height:100px; top:\" + (position.top - startY) + \"px; left:\" + (position.left - startX) + \"px;\";\n\t\t\t}\n\t\t\ttemp = _isString(path) && !_selectorExp.test(path) ? path : _getInitialPath(startX, startY);\n\t\t\tpath = _createElement(\"path\", svgNamespace);\n\t\t\tpath.setAttribute(\"d\", temp);\n\t\t\tpath.setAttribute(\"vector-effect\", \"non-scaling-stroke\");\n\t\t\tpath.style.cssText = \"fill:transparent; stroke-width:\" + (vars.pathWidth || 3) + \"; stroke:\" + (vars.pathColor || \"#555\") + \"; opacity:\" + (vars.pathOpacity || 0.6);\n\t\t\tsvg.appendChild(path);\n\t\t} else {\n\t\t\tvars.pathColor && gsap.set(path, {stroke: vars.pathColor});\n\t\t\tvars.pathWidth && gsap.set(path, {strokeWidth: vars.pathWidth});\n\t\t\tvars.pathOpacity && gsap.set(path, {opacity: vars.pathOpacity});\n\t\t}\n\n\t\tif (offset.x || offset.y) {\n\t\t\tgsap.set(path, {x:offset.x, y:offset.y});\n\t\t}\n\n\t\tif (!(\"selected\" in vars)) {\n\t\t\tvars.selected = true;\n\t\t}\n\t\tif (!(\"anchorSnap\" in vars)) {\n\t\t\tvars.anchorSnap = p => {\n\t\t\t\tif (p.x * p.x + p.y * p.y < 16) {\n\t\t\t\t\tp.x = p.y = 0;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tanimationToScrub = animation && animation.parent && animation.parent.data === \"nested\" ? animation.parent.parent : animation;\n\n\t\tvars.onPress = () => {\n\t\t\tanimationToScrub.pause(0);\n\t\t};\n\n\t\trefreshPath = () => {\n\t\t\t//let m = _getConsolidatedMatrix(path);\n\t\t\t//animation.vars.motionPath.offsetX = m.e - offset.x;\n\t\t\t//animation.vars.motionPath.offsetY = m.f - offset.y;\n\t\t\tanimation.invalidate();\n\t\t\tanimationToScrub.restart();\n\t\t};\n\t\tvars.onRelease = vars.onDeleteAnchor = refreshPath;\n\n\t\tthis.editor = PathEditor.create(path, vars);\n\t\tif (vars.center) {\n\t\t\tgsap.set(target, {transformOrigin:\"50% 50%\", xPercent:-50, yPercent:-50});\n\t\t}\n\t\tif (animation) {\n\t\t\tif (animation.vars.motionPath.path) {\n\t\t\t\tanimation.vars.motionPath.path = path;\n\t\t\t} else {\n\t\t\t\tanimation.vars.motionPath = {path:path};\n\t\t\t}\n\t\t\tif (animationToScrub.parent !== gsap.globalTimeline) {\n\t\t\t\tgsap.globalTimeline.add(animationToScrub, _getGlobalTime(animationToScrub) - animationToScrub.delay());\n\t\t\t}\n\t\t\tanimationToScrub.repeat(-1).repeatDelay(1);\n\n\t\t} else {\n\t\t\tanimation = animationToScrub = gsap.to(target, {\n\t\t\t\tmotionPath: {\n\t\t\t\t\tpath: path,\n\t\t\t\t\tstart: vars.start || 0,\n\t\t\t\t\tend: (\"end\" in vars) ? vars.end : 1,\n\t\t\t\t\tautoRotate: (\"autoRotate\" in vars) ? vars.autoRotate : false,\n\t\t\t\t\talign: path,\n\t\t\t\t\talignOrigin: vars.alignOrigin\n\t\t\t\t},\n\t\t\t\tduration: vars.duration || 5,\n\t\t\t\tease: vars.ease || \"power1.inOut\",\n\t\t\t\trepeat:-1,\n\t\t\t\trepeatDelay:1,\n\t\t\t\tpaused:!vars.path\n\t\t\t});\n\t\t}\n\t\tthis.animation = animation;\n\n\t\t_context(this);\n\t\tthis.kill = this.revert = () => {\n\t\t\tthis.editor.kill();\n\t\t\tcopyButton.parentNode && copyButton.parentNode.removeChild(copyButton);\n\t\t\tcreatedSVG && svg.parentNode && svg.parentNode.removeChild(svg);\n\t\t\tanimationToScrub && animationToScrub.revert();\n\t\t}\n\t}\n\n\tgetString() {\n\t\treturn this.editor.getString(true, -this.offset.x, -this.offset.y);\n\t}\n\n}\n\nMotionPathHelper.register = _initCore;\nMotionPathHelper.create = (target, vars) => new MotionPathHelper(target, vars);\nMotionPathHelper.editPath = (path, vars) => PathEditor.create(path, vars);\nMotionPathHelper.version = \"3.13.0\";\n\nexport { MotionPathHelper as default };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}