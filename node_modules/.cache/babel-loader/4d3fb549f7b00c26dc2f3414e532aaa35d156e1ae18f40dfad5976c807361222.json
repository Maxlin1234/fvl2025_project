{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { warn } from '../log.js';\nimport { isMergeKey, addMergeToJSMap } from '../schema/yaml-1.1/merge.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isNode } from './identity.js';\nimport { toJS } from './toJS.js';\nfunction addPairToJSMap(ctx, map, {\n  key,\n  value\n}) {\n  if (isNode(key) && key.addToJSMap) key.addToJSMap(ctx, map, value);\n  // TODO: Should drop this special case for bare << handling\n  else if (isMergeKey(ctx, key)) addMergeToJSMap(ctx, map, value);else {\n    const jsKey = toJS(key, '', ctx);\n    if (map instanceof Map) {\n      map.set(jsKey, toJS(value, jsKey, ctx));\n    } else if (map instanceof Set) {\n      map.add(jsKey);\n    } else {\n      const stringKey = stringifyKey(key, jsKey, ctx);\n      const jsValue = toJS(value, stringKey, ctx);\n      if (stringKey in map) Object.defineProperty(map, stringKey, {\n        value: jsValue,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      });else map[stringKey] = jsValue;\n    }\n  }\n  return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n  if (jsKey === null) return '';\n  // eslint-disable-next-line @typescript-eslint/no-base-to-string\n  if (typeof jsKey !== 'object') return String(jsKey);\n  if (isNode(key) && ctx?.doc) {\n    const strCtx = createStringifyContext(ctx.doc, {});\n    strCtx.anchors = new Set();\n    for (const node of ctx.anchors.keys()) strCtx.anchors.add(node.anchor);\n    strCtx.inFlow = true;\n    strCtx.inStringifyKey = true;\n    const strKey = key.toString(strCtx);\n    if (!ctx.mapKeyWarned) {\n      let jsonStr = JSON.stringify(strKey);\n      if (jsonStr.length > 40) jsonStr = jsonStr.substring(0, 36) + '...\"';\n      warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n      ctx.mapKeyWarned = true;\n    }\n    return strKey;\n  }\n  return JSON.stringify(jsKey);\n}\nexport { addPairToJSMap };","map":{"version":3,"names":["warn","isMergeKey","addMergeToJSMap","createStringifyContext","isNode","toJS","addPairToJSMap","ctx","map","key","value","addToJSMap","jsKey","Map","set","Set","add","stringKey","stringifyKey","jsValue","Object","defineProperty","writable","enumerable","configurable","String","doc","strCtx","anchors","node","keys","anchor","inFlow","inStringifyKey","strKey","toString","mapKeyWarned","jsonStr","JSON","stringify","length","substring","options","logLevel"],"sources":["/Users/linhankuan/fvl2025/node_modules/yaml/browser/dist/nodes/addPairToJSMap.js"],"sourcesContent":["import { warn } from '../log.js';\nimport { isMergeKey, addMergeToJSMap } from '../schema/yaml-1.1/merge.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isNode } from './identity.js';\nimport { toJS } from './toJS.js';\n\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (isNode(key) && key.addToJSMap)\n        key.addToJSMap(ctx, map, value);\n    // TODO: Should drop this special case for bare << handling\n    else if (isMergeKey(ctx, key))\n        addMergeToJSMap(ctx, map, value);\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx?.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}