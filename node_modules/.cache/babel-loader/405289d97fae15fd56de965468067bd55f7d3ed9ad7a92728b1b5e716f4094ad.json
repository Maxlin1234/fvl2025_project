{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nexport default {\n  name: 'ThreeSphere',\n  props: {\n    modelPath: {\n      type: String,\n      default: '/sphere.glb'\n    }\n  },\n  data() {\n    return {\n      renderer: null,\n      scene: null,\n      camera: null,\n      animationId: null,\n      model: null,\n      resizeObserver: null\n    };\n  },\n  mounted() {\n    this.initScene();\n    this.loadModel();\n    this.onResize();\n    window.addEventListener('resize', this.onResize);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.onResize);\n    cancelAnimationFrame(this.animationId);\n    if (this.resizeObserver) this.resizeObserver.disconnect();\n    if (this.renderer) {\n      this.renderer.dispose();\n      this.renderer.forceContextLoss && this.renderer.forceContextLoss();\n      this.renderer.domElement = null;\n      this.renderer = null;\n    }\n    if (this.scene) {\n      this.scene.traverse(obj => {\n        if (obj.isMesh) {\n          obj.geometry && obj.geometry.dispose && obj.geometry.dispose();\n          if (obj.material) {\n            const materials = Array.isArray(obj.material) ? obj.material : [obj.material];\n            materials.forEach(m => {\n              Object.keys(m).forEach(k => {\n                if (m[k] && m[k].isTexture) m[k].dispose && m[k].dispose();\n              });\n              m.dispose && m.dispose();\n            });\n          }\n        }\n      });\n      this.scene = null;\n    }\n  },\n  methods: {\n    initScene() {\n      const container = this.$refs.container;\n      const width = container.clientWidth || 300;\n      const height = container.clientHeight || 300;\n      this.scene = new THREE.Scene();\n      this.scene.background = null;\n      this.camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 100);\n      this.camera.position.set(0, 0, 3);\n\n      // lights\n      const hemi = new THREE.HemisphereLight(0xffffff, 0x444444, 1.0);\n      this.scene.add(hemi);\n      const dir = new THREE.DirectionalLight(0xffffff, 0.8);\n      dir.position.set(5, 5, 5);\n      dir.castShadow = true;\n      this.scene.add(dir);\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      });\n      this.renderer.setSize(width, height);\n      this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n      this.renderer.shadowMap.enabled = true;\n      container.appendChild(this.renderer.domElement);\n      this.animate();\n    },\n    loadModel() {\n      const loader = new GLTFLoader();\n      loader.load(this.modelPath, gltf => {\n        this.model = gltf.scene;\n        // Optional: find specific mesh to set shadow flags\n        this.model.traverse(obj => {\n          if (obj.isMesh) {\n            obj.castShadow = true;\n            obj.receiveShadow = true;\n          }\n        });\n        // Center and scale to fit\n        const box = new THREE.Box3().setFromObject(this.model);\n        const size = new THREE.Vector3();\n        box.getSize(size);\n        const maxAxis = Math.max(size.x, size.y, size.z) || 1;\n        const scale = 1.2 / maxAxis;\n        this.model.scale.setScalar(scale);\n        // Center\n        const center = new THREE.Vector3();\n        box.getCenter(center);\n        this.model.position.sub(center.multiplyScalar(scale));\n        this.scene.add(this.model);\n      }, undefined, err => {\n        console.error('Failed to load GLB', err);\n      });\n    },\n    animate() {\n      this.animationId = requestAnimationFrame(this.animate);\n      if (this.model) {\n        this.model.rotation.y += 0.01;\n      }\n      if (this.renderer && this.scene && this.camera) {\n        this.renderer.render(this.scene, this.camera);\n      }\n    },\n    onResize() {\n      const container = this.$refs.container;\n      if (!container || !this.renderer || !this.camera) return;\n      const width = container.clientWidth;\n      const height = container.clientHeight;\n      if (!width || !height) return;\n      this.renderer.setSize(width, height);\n      this.camera.aspect = width / height;\n      this.camera.updateProjectionMatrix();\n    }\n  }\n};","map":{"version":3,"names":["THREE","GLTFLoader","name","props","modelPath","type","String","default","data","renderer","scene","camera","animationId","model","resizeObserver","mounted","initScene","loadModel","onResize","window","addEventListener","beforeUnmount","removeEventListener","cancelAnimationFrame","disconnect","dispose","forceContextLoss","domElement","traverse","obj","isMesh","geometry","material","materials","Array","isArray","forEach","m","Object","keys","k","isTexture","methods","container","$refs","width","clientWidth","height","clientHeight","Scene","background","PerspectiveCamera","position","set","hemi","HemisphereLight","add","dir","DirectionalLight","castShadow","WebGLRenderer","antialias","alpha","setSize","setPixelRatio","Math","min","devicePixelRatio","shadowMap","enabled","appendChild","animate","loader","load","gltf","receiveShadow","box","Box3","setFromObject","size","Vector3","getSize","maxAxis","max","x","y","z","scale","setScalar","center","getCenter","sub","multiplyScalar","undefined","err","console","error","requestAnimationFrame","rotation","render","aspect","updateProjectionMatrix"],"sources":["/Users/linhankuan/fvl2025/src/components/ThreeSphere.vue"],"sourcesContent":["<template>\n  <div ref=\"container\" class=\"three-container\"></div>\n</template>\n\n<script>\nimport * as THREE from 'three'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\n\nexport default {\n  name: 'ThreeSphere',\n  props: {\n    modelPath: {\n      type: String,\n      default: '/sphere.glb'\n    }\n  },\n  data() {\n    return {\n      renderer: null,\n      scene: null,\n      camera: null,\n      animationId: null,\n      model: null,\n      resizeObserver: null\n    }\n  },\n  mounted() {\n    this.initScene()\n    this.loadModel()\n    this.onResize()\n    window.addEventListener('resize', this.onResize)\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.onResize)\n    cancelAnimationFrame(this.animationId)\n    if (this.resizeObserver) this.resizeObserver.disconnect()\n    if (this.renderer) {\n      this.renderer.dispose()\n      this.renderer.forceContextLoss && this.renderer.forceContextLoss()\n      this.renderer.domElement = null\n      this.renderer = null\n    }\n    if (this.scene) {\n      this.scene.traverse((obj) => {\n        if (obj.isMesh) {\n          obj.geometry && obj.geometry.dispose && obj.geometry.dispose()\n          if (obj.material) {\n            const materials = Array.isArray(obj.material) ? obj.material : [obj.material]\n            materials.forEach((m) => {\n              Object.keys(m).forEach((k) => {\n                if (m[k] && m[k].isTexture) m[k].dispose && m[k].dispose()\n              })\n              m.dispose && m.dispose()\n            })\n          }\n        }\n      })\n      this.scene = null\n    }\n  },\n  methods: {\n    initScene() {\n      const container = this.$refs.container\n      const width = container.clientWidth || 300\n      const height = container.clientHeight || 300\n\n      this.scene = new THREE.Scene()\n      this.scene.background = null\n\n      this.camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 100)\n      this.camera.position.set(0, 0, 3)\n\n      // lights\n      const hemi = new THREE.HemisphereLight(0xffffff, 0x444444, 1.0)\n      this.scene.add(hemi)\n      const dir = new THREE.DirectionalLight(0xffffff, 0.8)\n      dir.position.set(5, 5, 5)\n      dir.castShadow = true\n      this.scene.add(dir)\n\n      this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n      this.renderer.setSize(width, height)\n      this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n      this.renderer.shadowMap.enabled = true\n      container.appendChild(this.renderer.domElement)\n\n      this.animate()\n    },\n    loadModel() {\n      const loader = new GLTFLoader()\n      loader.load(\n        this.modelPath,\n        (gltf) => {\n          this.model = gltf.scene\n          // Optional: find specific mesh to set shadow flags\n          this.model.traverse((obj) => {\n            if (obj.isMesh) {\n              obj.castShadow = true\n              obj.receiveShadow = true\n            }\n          })\n          // Center and scale to fit\n          const box = new THREE.Box3().setFromObject(this.model)\n          const size = new THREE.Vector3()\n          box.getSize(size)\n          const maxAxis = Math.max(size.x, size.y, size.z) || 1\n          const scale = 1.2 / maxAxis\n          this.model.scale.setScalar(scale)\n          // Center\n          const center = new THREE.Vector3()\n          box.getCenter(center)\n          this.model.position.sub(center.multiplyScalar(scale))\n\n          this.scene.add(this.model)\n        },\n        undefined,\n        (err) => {\n          console.error('Failed to load GLB', err)\n        }\n      )\n    },\n    animate() {\n      this.animationId = requestAnimationFrame(this.animate)\n      if (this.model) {\n        this.model.rotation.y += 0.01\n      }\n      if (this.renderer && this.scene && this.camera) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    },\n    onResize() {\n      const container = this.$refs.container\n      if (!container || !this.renderer || !this.camera) return\n      const width = container.clientWidth\n      const height = container.clientHeight\n      if (!width || !height) return\n      this.renderer.setSize(width, height)\n      this.camera.aspect = width / height\n      this.camera.updateProjectionMatrix()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.three-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}