{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"jsi-christmas-container\",\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div class=\\\"particles\\\">\\n<p>Hello world</p>\\n</div> \"), _createElementVNode(\"div\", _hoisted_1)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["id","class","_createCommentVNode","_createElementVNode","_hoisted_1"],"sources":["/Users/linhankuan/fvl2025/src/components/BannerParticles.vue"],"sourcesContent":["<template>\n<!-- <div class=\"particles\">\n<p>Hello world</p>\n</div> -->\n<div id=\"jsi-christmas-container\" class=\"container\"></div>\n\n</template>\n\n\n<script>\n\nexport default{\n  name: 'Banner-pt',\n}\nvar RENDERER = {\n\tTREE_PARTICLE_COUNT : 600,\n\tSNOW_PARTICLE_COUNT : 600,\n\tOFFSET_THETA : Math.PI / 60,\n\tBOTTOM_Y : -100,\n\tOFFSET_Y : 0.1,\n\tDELTA_OFFSET_Y : 1 / 100,\n\tDELTA_OFFSET_THETA : 1 / 150,\n\tRANGE : 150,\n\tTRANSFORM_COUNT : 100,\n\t\n\tinit : function(){\n\t\tthis.setParameters();\n\t\tthis.reconstructMethods();\n\t\tthis.createParticles();\n\t\tthis.bindEvent();\n\t\tthis.render();\n\t},\n\tsetParameters : function(){\n\t\tthis.$window = $(window);\n\t\tthis.$container = $('#jsi-christmas-container');\n\t\tthis.width = this.$container.width();\n\t\tthis.height = this.$container.height();\n\t\tthis.$canvas = $('<canvas />').attr({width : this.width, height : this.height}).appendTo(this.$container);\n\t\tthis.context = this.$canvas.get(0).getContext('2d');\n\t\tthis.particles = [];\n\t\tthis.status = 0;\n\t\tthis.range = this.RANGE * Math.min(this.width, this.height) / 500;\n\t\tthis.transformCount = 0;\n\t\tthis.gradient = this.context.createLinearGradient(0, 0, 0, this.height);\n\t\tthis.gradient.addColorStop(0, 'hsl(210, 50%, 30%)');\n\t\tthis.gradient.addColorStop(1, 'hsl(210, 50%, 10%)');\n\t},\n\treconstructMethods : function(){\n\t\tthis.transform = this.transform.bind(this);\n\t\tthis.render = this.render.bind(this);\n\t},\n\tcreateParticles : function(){\n\t\tfor(var i = 0, length = this.TREE_PARTICLE_COUNT, hue = 0, y = this.BOTTOM_Y, theta = 0; i < length; i++){\n\t\t\tvar range = (0.2 + 0.8 * (this.height / 4 - y) / (this.height / 2)) * this.range,\n\t\t\t\tx = range * Math.cos(theta),\n\t\t\t\tz = range * Math.sin(theta);\n\t\t\t\t\n\t\t\tthis.particles.push(new TREE_PARTICLE(this, hue, x, y, z));\n\t\t\t\n\t\t\thue++;\n\t\t\thue %= 360;\n\t\t\ttheta += this.OFFSET_THETA * (1 + i * this.DELTA_OFFSET_THETA / 2);\n\t\t\ttheta %= Math.PI * 2;\n\t\t\ty += this.OFFSET_Y * (1 + i * this.DELTA_OFFSET_Y);\n\t\t}\n\t\tthis.particles.push(new CROWN_PARTICLE(this, 0, y, 0));\n\t\t\n\t\tfor(var i = 0, length = this.SNOW_PARTICLE_COUNT; i < length; i++){\n\t\t\tthis.particles.push(new SNOW_PARTICLE(this));\n\t\t}\n\t},\n\tbindEvent : function(){\n\t\tthis.$container.on('click', this.transform);\n\t},\n\ttransform : function(){\n\t\tswitch(this.status){\n\t\tcase 0:\n\t\t\tthis.status = 1;\n\t\t\tthis.transformCount = 0;\n\t\t\tthis.notify();\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tthis.status = 3;\n\t\t\tthis.transformCount = this.TRANSFORM_COUNT;\n\t\t\tthis.notify();\n\t\t}\n\t},\n\tnotify : function(){\n\t\tfor(var i = 0, length = this.particles.length, status = this.status; i < length; i++){\n\t\t\tthis.particles[i].transform(status);\n\t\t}\n\t},\n\trender : function(){\n\t\trequestAnimationFrame(this.render);\n\t\tthis.context.fillStyle = this.gradient;\n\t\tthis.context.fillRect(0, 0, this.width, this.height);\n\t\t\n\t\tthis.particles.sort(function(particle1, particle2){\n\t\t\treturn particle2.z - particle1.z;\n\t\t});\n\t\tfor(var i = 0, length = this.particles.length, status = this.status, transformCount = this.transformCount; i < length; i++){\n\t\t\tthis.particles[i].render(status, transformCount);\n\t\t}\n\t\tswitch(this.status){\n\t\tcase 1:\n\t\t\tif(++this.transformCount == this.TRANSFORM_COUNT){\n\t\t\t\tthis.status = 2;\n\t\t\t\tthis.transformCount = 0;\n\t\t\t\tthis.notify();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tif(this.transformCount < this.TRANSFORM_COUNT){\n\t\t\t\tthis.transformCount++;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tif(--this.transformCount == 0){\n\t\t\t\tthis.status = 0;\n\t\t\t\tthis.notify();\n\t\t\t}\n\t\t}\n\t}\n};\nvar PARTICLE = function(methods){\n\t$.extend(this, methods);\n};\nPARTICLE.prototype = {\n\tFOCUS_POSITION : 300,\n\tRADIUS : 2,\n\t\n\tinit : function(){\n\t\tthis.x = this.getRandomValue(-this.renderer.width / 2, this.renderer.width / 2);\n\t\tthis.y = this.getRandomValue(-this.renderer.height / 2, this.renderer.height / 2);\n\t\tthis.z = this.getRandomValue(-this.FOCUS_POSITION, this.FOCUS_POSITION);\n\t\tthis.vx = this.getRandomValue(-1, 1);\n\t\tthis.vy = this.getRandomValue(-1, 1);\n\t\tthis.vz = this.getRandomValue(-1, 1);\n\t\tthis.opacity = 0;\n\t},\n\tgetAxis : function(theta){\n\t\tvar x = this.x,\n\t\t\tz = this.z;\n\t\t\t\n\t\tif(theta != 0){\n\t\t\tx = this.x * Math.cos(theta) - this.z * Math.sin(theta);\n\t\t\tz = this.z * Math.cos(theta) + this.x * Math.sin(theta);\n\t\t}\n\t\tvar rate = this.FOCUS_POSITION / (z + this.FOCUS_POSITION);\n\t\t\n\t\treturn {\n\t\t\tx : this.renderer.width / 2 + x * rate,\n\t\t\ty : this.renderer.height / 2 - this.y * rate,\n\t\t\tradius : Math.max(0, this.RADIUS * rate)\n\t\t};\n\t},\n\tgetRandomValue : function(min, max){\n\t\treturn min + (max - min) * Math.random();\n\t},\n\tisOutOfSight : function(axis){\n\t\treturn axis.x < -axis.radius && this.vx < 0 || axis.x > (this.renderer.width + axis.radius) && this.vx > 0\n\t\t\t|| axis.y < -axis.radius && this.vy > 0 || axis.y > (this.renderer.height + axis.radius) && this.vy < 0\n\t\t\t|| this.z < -this.FOCUS_POSITION && this.vz < 0 || this.z > this.FOCUS_POSITION && this.vz > 0;\n\t}\n};\nvar TREE_PARTICLE = function(renderer, hue, x, y, z){\n\tthis.renderer = renderer;\n\tthis.hue = hue;\n\tthis.x0 = x;\n\tthis.y0 = y;\n\tthis.z0 = z;\n\tthis.init();\n};\nTREE_PARTICLE.prototype = new PARTICLE({\n\tDELTA_THETA : Math.PI / 1000,\n\t\n\ttransform : function(status){\n\t\tswitch(status){\n\t\tcase 1:\n\t\t\tthis.vx = (this.x0 - this.x) / this.renderer.TRANSFORM_COUNT;\n\t\t\tthis.vy = (this.y0 - this.y) / this.renderer.TRANSFORM_COUNT;\n\t\t\tthis.vz = (this.z0 - this.z) / this.renderer.TRANSFORM_COUNT;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tthis.x = this.x0;\n\t\t\tthis.y = this.y0;\n\t\t\tthis.z = this.z0;\n\t\t\tthis.vx = 0;\n\t\t\tthis.vy = 0;\n\t\t\tthis.vz = 0;\n\t\t\tthis.opacity = 1;\n\t\t\tthis.theta = 0;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tthis.vx = this.getRandomValue(-1, 1);\n\t\t\tthis.vy = this.getRandomValue(-1, 1);\n\t\t\tthis.vz = this.getRandomValue(-1, 1);\n\t\t}\n\t},\n\trender : function(status, transformCount){\n\t\tvar context = this.renderer.context,\n\t\t\taxis = this.getAxis(status == 2 ? this.theta : 0);\n\t\tcontext.save();\n\t\tcontext.translate(axis.x, axis.y);\n\t\tcontext.fillStyle = 'hsla(' + this.hue + ', ' + (status <= 1 ? 0 : (60 * transformCount / this.renderer.TRANSFORM_COUNT)) + '%, ' + (20 + 60 * (this.FOCUS_POSITION - this.z) / this.renderer.height) + '%, ' + this.opacity + ')';\n\t\tcontext.beginPath();\n\t\tcontext.arc(0, 0, axis.radius, 0, Math.PI * 2, false);\n\t\tcontext.fill();\n\t\tcontext.restore();\n\t\t\n\t\tthis.x += this.vx;\n\t\tthis.y += this.vy;\n\t\tthis.z += this.vz;\n\t\t\n\t\tswitch(status){\n\t\tcase 0:\n\t\t\tif(this.opacity < 1){\n\t\t\t\tthis.opacity = Math.min(1, this.opacity + 0.01);\n\t\t\t}\n\t\t\tif(this.isOutOfSight(axis)){\n\t\t\t\tthis.init();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tthis.hue += 359;\n\t\t\tthis.hue %= 360;\n\t\t\tthis.theta += this.DELTA_THETA;\n\t\t\tthis.theta %= Math.PI * 2;\n\t\t}\n\t}\n});\nvar SNOW_PARTICLE = function(renderer){\n\tthis.renderer = renderer;\n\tthis.init();\n};\nSNOW_PARTICLE.prototype = new PARTICLE({\n\ttransform : function(status){\n\t\tswitch(status){\n\t\tcase 1:\n\t\t\tthis.vx = this.getRandomValue(-0.3, 0.3);\n\t\t\tthis.vy = -0.3;\n\t\t\tthis.vz = this.getRandomValue(-0.3, 0.3);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tthis.vx = this.getRandomValue(-1, 1);\n\t\t\tthis.vy = this.getRandomValue(-1, 1);\n\t\t\tthis.vz = this.getRandomValue(-1, 1);\n\t\t}\n\t},\n\trender : function(status, transformCount){\n\t\tvar context = this.renderer.context,\n\t\t\taxis = this.getAxis(0);\n\t\tcontext.save();\n\t\tcontext.translate(axis.x, axis.y);\n\t\tcontext.fillStyle = 'hsla(0, 0%, ' + (20 + 60 * (this.FOCUS_POSITION - this.z) / this.renderer.height) + '%, ' + (status == 0 ? this.opacity : 1) + ')';\n\t\tcontext.beginPath();\n\t\tcontext.arc(0, 0, axis.radius, 0, Math.PI * 2, false);\n\t\tcontext.fill();\n\t\tcontext.restore();\n\t\t\n\t\tthis.x += this.vx;\n\t\tthis.y += this.vy;\n\t\tthis.z += this.vz;\n\t\t\n\t\tswitch(status){\n\t\tcase 0:\n\t\t\tif(this.opacity < 1){\n\t\t\t\tthis.opacity = Math.min(1, this.opacity + 0.01);\n\t\t\t}\n\t\t\tif(this.isOutOfSight(axis)){\n\t\t\t\tthis.init();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tif(this.isOutOfSight(axis)){\n\t\t\t\tthis.x = this.getRandomValue(-this.renderer.width / 2, this.renderer.width / 2);\n\t\t\t\tthis.y = this.renderer.height / 2;\n\t\t\t\tthis.z = this.getRandomValue(-this.FOCUS_POSITION, this.FOCUS_POSITION);\n\t\t\t\tthis.vx = this.getRandomValue(-0.3, 0.3);\n\t\t\t\tthis.vy = -0.3;\n\t\t\t\tthis.vz = this.getRandomValue(-0.3, 0.3);\n\t\t\t}\n\t\t}\n\t}\n});\nvar CROWN_PARTICLE = function(renderer, x, y, z){\n\tthis.renderer = renderer;\n\tthis.x0 = x;\n\tthis.y0 = y * this.renderer.height / 650 + this.RADIUS;\n\tthis.z0 = z;\n\tthis.init();\n};\nCROWN_PARTICLE.prototype = new PARTICLE({\n\tRADIUS : 25,\n\tVELOCITY : 6,\n\tDELTA_THETA : Math.PI / 100,\n\t\n\tinit : function(){\n\t\tthis.x = 0;\n\t\tthis.y = -this.renderer.height;\n\t\tthis.z = 0;\n\t\tthis.vy = 0;\n\t\tthis.theta = 0;\n\t\tthis.radius = this.RADIUS * Math.min(this.renderer.width, this.renderer.height) / 500;\n\t\tthis.velocity =  this.VELOCITY * this.renderer.height / 500;\n\t\tthis.toRender = false;\n\t\tthis.gradient = this.renderer.context.createRadialGradient(0, 0, 0, 0, 0, this.radius);\n\t\tthis.gradient.addColorStop(0, 'hsl(60, 50%, 70%)');\n\t\tthis.gradient.addColorStop(1, 'hsl(60, 50%, 40%)');\n\t},\n\ttransform : function(status){\n\t\tswitch(status){\n\t\tcase 1:\n\t\t\tthis.y = -this.renderer.height;\n\t\t\tthis.vy = this.velocity;\n\t\t\tthis.theta = 0;\n\t\t\tthis.toRender = true;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tthis.vy = this.velocity;\n\t\t}\n\t},\n\trender : function(status, transformCount){\n\t\tif(!this.toRender){\n\t\t\treturn;\n\t\t}\n\t\tvar context = this.renderer.context,\n\t\t\taxis = this.getAxis(0);\n\t\tcontext.save();\n\t\tcontext.translate(axis.x, axis.y);\n\t\tcontext.scale(Math.cos(this.theta), 1);\n\t\tcontext.shadowBlur = 20;\n\t\tcontext.shadowColor = 'hsl(60, 50%, 80%)';\n\t\tcontext.fillStyle = this.gradient;\n\t\tcontext.beginPath(Math.cos(this.theta), 1);\n\t\t\n\t\tfor(var i = 0, angle = Math.PI / 5; i < 10; i++){\n\t\t\tvar length = (i % 2 == 0) ? this.radius : this.radius * 2 / 5;\n\t\t\tcontext[i == 0 ? 'moveTo' : 'lineTo'](-length * Math.cos(Math.PI / 2 + angle * i), -length * Math.sin(Math.PI / 2 + angle * i));\n\t\t}\n\t\tcontext.closePath();\n\t\tcontext.fill();\n\t\tcontext.restore();\n\t\t\n\t\tswitch(status){\n\t\tcase 0:\n\t\tcase 3:\n\t\t\tif(this.y >= this.renderer.height){\n\t\t\t\tthis.vy = 0;\n\t\t\t\tthis.toRender = false;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 1:\n\t\tcase 2:\n\t\t\tif(this.y >= this.y0){\n\t\t\t\tthis.y = this.y0;\n\t\t\t\tthis.vy = 0;\n\t\t\t\tthis.theta += this.DELTA_THETA;\n\t\t\t\tthis.theta %= Math.PI * 2;\n\t\t\t}\n\t\t}\n\t\tthis.y += this.vy;\n\t}\n});\n$(function(){\n\tRENDERER.init();\n});\n\n</script>\n\n\n<style>\nhtml,body {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n}\n.container{\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n</style>"],"mappings":";;EAIKA,EAAE,EAAC,yBAAyB;EAACC,KAAK,EAAC;;;6DAHxCC,mBAAA,2DAEU,EACVC,mBAAA,CAA0D,OAA1DC,UAA0D,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}