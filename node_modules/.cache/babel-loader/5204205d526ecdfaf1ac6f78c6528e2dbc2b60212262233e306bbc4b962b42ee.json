{"ast":null,"code":"import * as THREE from 'three';\nexport default {\n  name: 'BannerPt',\n  mounted() {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 10);\n    camera.position.z = 5;\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setClearColor(0x000000, 0); // 第二個參數 0 表示完全透明\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    // 使用 ref 掛載 canvas\n    this.$refs.threeContainer.appendChild(renderer.domElement);\n\n    // const geometry = new THREE.SphereGeometry(1, 100);\n    const geometry = new THREE.SphereGeometry(40, 20, 20);\n    // const material = new THREE.MeshPhongMaterial({ color: '#fffffff' });\n    const material = new THREE.PointsMaterial({\n      size: 2,\n      color: 0xff00ff\n    });\n\n    // for(let x = -5; x <5; x++){\n    //   for(let y = -5; y < 5; y++){\n    //     const point = new THREE.Vector3(x * 10, y * 10,0)\n\n    //     geometry.vertices.push(point)\n    //   }\n    // }\n    let spherePoints = new THREE.Points(geometry, material);\n    // const points = new THREE.Points(geometry, material);\n    spherePoints.position.set(45, 0, 0);\n    scene.add(spherePoints);\n    const ambientLight = new THREE.AmbientLight('#fffff');\n    scene.add(ambientLight);\n\n    // const spotLight = new THREE.SpotLight('#fffff');\n    // spotLight.position.set(3, 3, 3);\n    // // spotLight.target = points;\n    // scene.add(spotLight);\n\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n  }\n};","map":{"version":3,"names":["THREE","name","mounted","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","alpha","setClearColor","setSize","$refs","threeContainer","appendChild","domElement","geometry","SphereGeometry","material","PointsMaterial","size","color","spherePoints","Points","set","add","ambientLight","AmbientLight","animate","requestAnimationFrame","render"],"sources":["/Users/linhankuan/fvl2025/src/components/BannerParticles.vue"],"sourcesContent":["<template>\n  <div class=\"particles\" ref=\"threeContainer\">\n    <p>Hello world</p>\n  </div>\n</template>\n\n<script>\nimport * as THREE from 'three';\n\nexport default {\n  name: 'BannerPt',\n  mounted() {\n\n    const scene = new THREE.Scene();\n\n    const camera = new THREE.PerspectiveCamera(\n\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      10\n    );\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\n    renderer.setClearColor(0x000000, 0); // 第二個參數 0 表示完全透明\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    // 使用 ref 掛載 canvas\n    this.$refs.threeContainer.appendChild(renderer.domElement);\n\n\n\n\n    // const geometry = new THREE.SphereGeometry(1, 100);\n    const geometry = new THREE.SphereGeometry(40,20,20)\n    // const material = new THREE.MeshPhongMaterial({ color: '#fffffff' });\n    const material = new THREE.PointsMaterial({\n      size:2,\n      color: 0xff00ff,\n    })\n\n    // for(let x = -5; x <5; x++){\n    //   for(let y = -5; y < 5; y++){\n    //     const point = new THREE.Vector3(x * 10, y * 10,0)\n\n    //     geometry.vertices.push(point)\n    //   }\n    // }\n    let spherePoints = new THREE.Points(geometry,material)\n    // const points = new THREE.Points(geometry, material);\n    spherePoints.position.set(45,0,0)\n    scene.add(spherePoints);\n\n    const ambientLight = new THREE.AmbientLight('#fffff');\n    scene.add(ambientLight);\n\n    // const spotLight = new THREE.SpotLight('#fffff');\n    // spotLight.position.set(3, 3, 3);\n    // // spotLight.target = points;\n    // scene.add(spotLight);\n\n\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n  }\n};\n</script>\n"],"mappings":"AAOA,OAAO,KAAKA,KAAI,MAAO,OAAO;AAE9B,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,OAAOA,CAAA,EAAG;IAER,MAAMC,KAAI,GAAI,IAAIH,KAAK,CAACI,KAAK,CAAC,CAAC;IAE/B,MAAMC,MAAK,GAAI,IAAIL,KAAK,CAACM,iBAAiB,CAExC,EAAE,EACFC,MAAM,CAACC,UAAS,GAAID,MAAM,CAACE,WAAW,EACtC,GAAG,EACH,EACF,CAAC;IACDJ,MAAM,CAACK,QAAQ,CAACC,CAAA,GAAI,CAAC;IAErB,MAAMC,QAAO,GAAI,IAAIZ,KAAK,CAACa,aAAa,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzDF,QAAQ,CAACG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;IACrCH,QAAQ,CAACI,OAAO,CAACT,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;;IAEvD;IACA,IAAI,CAACQ,KAAK,CAACC,cAAc,CAACC,WAAW,CAACP,QAAQ,CAACQ,UAAU,CAAC;;IAK1D;IACA,MAAMC,QAAO,GAAI,IAAIrB,KAAK,CAACsB,cAAc,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE;IAClD;IACA,MAAMC,QAAO,GAAI,IAAIvB,KAAK,CAACwB,cAAc,CAAC;MACxCC,IAAI,EAAC,CAAC;MACNC,KAAK,EAAE;IACT,CAAC;;IAED;IACA;IACA;;IAEA;IACA;IACA;IACA,IAAIC,YAAW,GAAI,IAAI3B,KAAK,CAAC4B,MAAM,CAACP,QAAQ,EAACE,QAAQ;IACrD;IACAI,YAAY,CAACjB,QAAQ,CAACmB,GAAG,CAAC,EAAE,EAAC,CAAC,EAAC,CAAC;IAChC1B,KAAK,CAAC2B,GAAG,CAACH,YAAY,CAAC;IAEvB,MAAMI,YAAW,GAAI,IAAI/B,KAAK,CAACgC,YAAY,CAAC,QAAQ,CAAC;IACrD7B,KAAK,CAAC2B,GAAG,CAACC,YAAY,CAAC;;IAEvB;IACA;IACA;IACA;;IAGA,SAASE,OAAOA,CAAA,EAAG;MACjBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BrB,QAAQ,CAACuB,MAAM,CAAChC,KAAK,EAAEE,MAAM,CAAC;IAChC;IACA4B,OAAO,CAAC,CAAC;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}