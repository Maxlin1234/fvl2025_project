{"ast":null,"code":"import * as THREE from 'three';\n// import BannerParticles from './BannerParticles.vue';\nexport default {\n  name: 'Ban-ner',\n  mounted() {\n    const container = this.$el;\n    const vm = this; // 保存 this 引用\n\n    const loader = new THREE.TextureLoader();\n    loader.load(require('@/assets/banner_bk.jpeg'), texture => {\n      initScene(texture);\n    });\n    const vertexShader = `\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      }\n    `;\n    const fragmentShader = `\n      varying vec2 vUv;\n      uniform sampler2D u_texture;\n      uniform vec2 u_mouse;\n      uniform vec2 u_prevMouse;\n      uniform float u_aberrationIntensity;\n\n      void main() {\n        vec2 gridUV = floor(vUv * vec2(20.0)) / vec2(20.0);\n        vec2 centerOfPixel = gridUV + vec2(1.0 / 20.0);\n        vec2 mouseDirection = u_mouse - u_prevMouse;\n        vec2 pixelToMouse = centerOfPixel - u_mouse;\n        float dist = length(pixelToMouse);\n        float strength = smoothstep(0.2, 0.0, dist);\n        vec2 uvOffset = strength * -mouseDirection * 2.5;\n        vec2 uv = vUv - uvOffset;\n\n        vec4 r = texture2D(u_texture, uv - vec2(strength * u_aberrationIntensity * 0.0, 0.0));\n        vec4 g = texture2D(u_texture, uv + vec2(strength * u_aberrationIntensity * 0.02, 0.0));\n        vec4 b = texture2D(u_texture, uv - vec2(strength * u_aberrationIntensity * 0.01, 0.0));\n\n        gl_FragColor = vec4(r.r, g.g, b.b, 1.0);\n        \n      }\n    `;\n    let scene, camera, renderer, plane;\n    const mouse = new THREE.Vector2(0.2, 0.2);\n    const prevMouse = new THREE.Vector2(0.5, 0.5);\n    let aberration = 0;\n    function initScene(texture) {\n      // renderer\n      renderer = new THREE.WebGLRenderer({\n        alpha: true\n      });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.domElement.style.position = 'absolute';\n      renderer.domElement.style.inset = '0';\n      container.appendChild(renderer.domElement);\n\n      // scene & camera\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 10);\n      camera.position.z = 1;\n      const uniforms = {\n        u_texture: {\n          value: texture\n        },\n        u_mouse: {\n          value: mouse.clone()\n        },\n        u_prevMouse: {\n          value: prevMouse.clone()\n        },\n        u_aberrationIntensity: {\n          value: 0.0\n        }\n      };\n      const fov = camera.fov * Math.PI / 180;\n      const height = 2 * Math.tan(fov / 2) * camera.position.z;\n      const width = height * camera.aspect;\n      const geometry = new THREE.PlaneGeometry(width, height);\n      const material = new THREE.ShaderMaterial({\n        uniforms,\n        vertexShader,\n        fragmentShader\n      });\n      plane = new THREE.Mesh(geometry, material);\n      scene.add(plane);\n      animate();\n      window.addEventListener('resize', onResize);\n      container.addEventListener('mousemove', onMouseMove);\n\n      // 儲存清理函式以便卸載時移除監聽器\n      vm._cleanupBanner = () => {\n        window.removeEventListener('resize', onResize);\n        if (container) {\n          container.removeEventListener('mousemove', onMouseMove);\n        }\n        if (renderer) {\n          renderer.dispose();\n        }\n      };\n    }\n    function onMouseMove(e) {\n      const rect = container.getBoundingClientRect();\n      prevMouse.copy(mouse);\n      mouse.x = (e.clientX - rect.left) / rect.width;\n      mouse.y = 1 - (e.clientY - rect.top) / rect.height;\n      aberration = 1.0;\n    }\n    function onResize() {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n\n      // 更新 plane geometry 以適應新的視窗尺寸\n      if (plane && plane.geometry) {\n        const fov = camera.fov * Math.PI / 180;\n        const newHeight = 2 * Math.tan(fov / 2) * camera.position.z;\n        const newWidth = newHeight * camera.aspect;\n        plane.geometry.dispose();\n        plane.geometry = new THREE.PlaneGeometry(newWidth, newHeight);\n      }\n    }\n    function animate() {\n      requestAnimationFrame(animate);\n      plane.material.uniforms.u_mouse.value.copy(mouse);\n      plane.material.uniforms.u_prevMouse.value.copy(prevMouse);\n      aberration = Math.max(0.0, aberration - 0.005);\n      plane.material.uniforms.u_aberrationIntensity.value = aberration;\n      renderer.render(scene, camera);\n    }\n  },\n  beforeUnmount() {\n    if (this._cleanupBanner) {\n      this._cleanupBanner();\n    }\n  }\n};","map":{"version":3,"names":["THREE","name","mounted","container","$el","vm","loader","TextureLoader","load","require","texture","initScene","vertexShader","fragmentShader","scene","camera","renderer","plane","mouse","Vector2","prevMouse","aberration","WebGLRenderer","alpha","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","domElement","style","position","inset","appendChild","Scene","PerspectiveCamera","z","uniforms","u_texture","value","u_mouse","clone","u_prevMouse","u_aberrationIntensity","fov","Math","PI","height","tan","width","aspect","geometry","PlaneGeometry","material","ShaderMaterial","Mesh","add","animate","addEventListener","onResize","onMouseMove","_cleanupBanner","removeEventListener","dispose","e","rect","getBoundingClientRect","copy","x","clientX","left","y","clientY","top","updateProjectionMatrix","newHeight","newWidth","requestAnimationFrame","max","render","beforeUnmount"],"sources":["/Users/linhankuan/Documents/GitHub/fvl2025_project/src/components/Banner.vue"],"sourcesContent":["<template>\n  <div id=\"imageContainer\"></div>\n</template>\n\n<script>\nimport * as THREE from 'three';\n// import BannerParticles from './BannerParticles.vue';\nexport default {\n  name: 'Ban-ner',\n  mounted() {\n    const container = this.$el;\n    const vm = this; // 保存 this 引用\n\n    const loader = new THREE.TextureLoader();\n    loader.load(require('@/assets/banner_bk.jpeg'), (texture) => {\n      initScene(texture);\n    });\n\n    const vertexShader = `\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      }\n    `;\n\n    const fragmentShader = `\n      varying vec2 vUv;\n      uniform sampler2D u_texture;\n      uniform vec2 u_mouse;\n      uniform vec2 u_prevMouse;\n      uniform float u_aberrationIntensity;\n\n      void main() {\n        vec2 gridUV = floor(vUv * vec2(20.0)) / vec2(20.0);\n        vec2 centerOfPixel = gridUV + vec2(1.0 / 20.0);\n        vec2 mouseDirection = u_mouse - u_prevMouse;\n        vec2 pixelToMouse = centerOfPixel - u_mouse;\n        float dist = length(pixelToMouse);\n        float strength = smoothstep(0.2, 0.0, dist);\n        vec2 uvOffset = strength * -mouseDirection * 2.5;\n        vec2 uv = vUv - uvOffset;\n\n        vec4 r = texture2D(u_texture, uv - vec2(strength * u_aberrationIntensity * 0.0, 0.0));\n        vec4 g = texture2D(u_texture, uv + vec2(strength * u_aberrationIntensity * 0.02, 0.0));\n        vec4 b = texture2D(u_texture, uv - vec2(strength * u_aberrationIntensity * 0.01, 0.0));\n\n        gl_FragColor = vec4(r.r, g.g, b.b, 1.0);\n        \n      }\n    `;\n\n    let scene, camera, renderer, plane;\n    const mouse = new THREE.Vector2(0.2, 0.2);\n    const prevMouse = new THREE.Vector2(0.5, 0.5);\n    let aberration = 0;\n\n    function initScene(texture) {\n      // renderer\n      renderer = new THREE.WebGLRenderer({ alpha: true });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.domElement.style.position = 'absolute';\n      renderer.domElement.style.inset = '0';\n      container.appendChild(renderer.domElement);\n\n      // scene & camera\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 10);\n      camera.position.z = 1;\n\n      const uniforms = {\n        u_texture: { value: texture },\n        u_mouse: { value: mouse.clone() },\n        u_prevMouse: { value: prevMouse.clone() },\n        u_aberrationIntensity: { value: 0.0 }\n      };\n      const fov = (camera.fov * Math.PI) / 180;\n      const height = 2 * Math.tan(fov / 2) * camera.position.z;\n      const width = height * camera.aspect;\n      const geometry = new THREE.PlaneGeometry(width, height);\n\n\n      \n      const material = new THREE.ShaderMaterial({\n        uniforms,\n        vertexShader,\n        fragmentShader\n      });\n\n      \n\n      plane = new THREE.Mesh(geometry, material);\n      scene.add(plane);\n\n      animate();\n      window.addEventListener('resize', onResize);\n      container.addEventListener('mousemove', onMouseMove);\n      \n      // 儲存清理函式以便卸載時移除監聽器\n      vm._cleanupBanner = () => {\n        window.removeEventListener('resize', onResize);\n        if (container) {\n          container.removeEventListener('mousemove', onMouseMove);\n        }\n        if (renderer) {\n          renderer.dispose();\n        }\n      };\n    }\n\n\n    function onMouseMove(e) {\n      const rect = container.getBoundingClientRect();\n      prevMouse.copy(mouse);\n      mouse.x = (e.clientX - rect.left) / rect.width;\n      mouse.y = 1 - (e.clientY - rect.top) / rect.height;\n      aberration = 1.0;\n    }\n\n    function onResize() {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      \n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      \n      // 更新 plane geometry 以適應新的視窗尺寸\n      if (plane && plane.geometry) {\n        const fov = (camera.fov * Math.PI) / 180;\n        const newHeight = 2 * Math.tan(fov / 2) * camera.position.z;\n        const newWidth = newHeight * camera.aspect;\n        plane.geometry.dispose();\n        plane.geometry = new THREE.PlaneGeometry(newWidth, newHeight);\n      }\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n\n      plane.material.uniforms.u_mouse.value.copy(mouse);\n      plane.material.uniforms.u_prevMouse.value.copy(prevMouse);\n      aberration = Math.max(0.0, aberration - 0.005);\n      plane.material.uniforms.u_aberrationIntensity.value = aberration;\n\n      renderer.render(scene, camera);\n    }\n    \n\n  },\n  beforeUnmount() {\n    if (this._cleanupBanner) {\n      this._cleanupBanner();\n    }\n  }\n};\n</script>\n\n<style>\nhtml, body {\n  overflow-x: hidden;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n#imageContainer {\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  overflow-x: hidden;\n}\n\n@media (max-width:768px){\n  #imageContainer {\n    height: 100vh; /* 避免手機瀏覽器 UI 影響顯示高度 */\n    width: 100vw;\n    overflow: hidden;\n    display: none;\n  }\n}\n\n\ncanvas {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  pointer-events: none;\n  position: absolute;\n  display: block;\n  inset: 0;\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}