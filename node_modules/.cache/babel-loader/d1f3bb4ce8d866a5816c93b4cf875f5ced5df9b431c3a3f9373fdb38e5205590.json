{"ast":null,"code":"import * as THREE from 'three';\nexport default {\n  name: 'BannerPt',\n  mounted() {\n    const scene = new THREE.Scene();\n    const aspectRatio = WIDTH / innerHeight;\n    const camera = new THREE.PerspectiveCamera(aspectRatio, 75, window.innerWidth / window.innerHeight, 0.1, 10);\n    camera.position.z = 5;\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setClearColor(0x000000, 0); // 第二個參數 0 表示完全透明\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    // 使用 ref 掛載 canvas\n    this.$refs.threeContainer.appendChild(renderer.domElement);\n    const geometry = new THREE.SphereGeometry(1, 100);\n    const material = new THREE.MeshPhongMaterial({\n      color: '#fffffff'\n    });\n    const sphere = new THREE.Mesh(geometry, material);\n    scene.add(sphere);\n    const ambientLight = new THREE.AmbientLight('#fffff');\n    scene.add(ambientLight);\n    const spotLight = new THREE.SpotLight('#FF0000');\n    spotLight.position.set(3, 3, 3);\n    spotLight.target = sphere;\n    scene.add(spotLight);\n    const map = new THREE.TextureLoader().load('/Users/linhankuan/fvl2025/src/assets/4.jpg');\n    const pt_material = new THREE.SpriteMaterial({\n      map: map\n    });\n    const sprite = new THREE.Sprite(pt_material);\n    scene.add(sprite);\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n  }\n};","map":{"version":3,"names":["THREE","name","mounted","scene","Scene","aspectRatio","WIDTH","innerHeight","camera","PerspectiveCamera","window","innerWidth","position","z","renderer","WebGLRenderer","alpha","setClearColor","setSize","$refs","threeContainer","appendChild","domElement","geometry","SphereGeometry","material","MeshPhongMaterial","color","sphere","Mesh","add","ambientLight","AmbientLight","spotLight","SpotLight","set","target","map","TextureLoader","load","pt_material","SpriteMaterial","sprite","Sprite","animate","requestAnimationFrame","render"],"sources":["/Users/linhankuan/fvl2025/src/components/BannerParticles.vue"],"sourcesContent":["<template>\n  <div class=\"particles\" ref=\"threeContainer\">\n    <p>Hello world</p>\n  </div>\n</template>\n\n<script>\nimport * as THREE from 'three';\n\nexport default {\n  name: 'BannerPt',\n  mounted() {\n\n    const scene = new THREE.Scene();\n    const aspectRatio = WIDTH / innerHeight;\n    const camera = new THREE.PerspectiveCamera(\n      aspectRatio,\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      10\n    );\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\n    renderer.setClearColor(0x000000, 0); // 第二個參數 0 表示完全透明\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    // 使用 ref 掛載 canvas\n    this.$refs.threeContainer.appendChild(renderer.domElement);\n\n\n\n\n    const geometry = new THREE.SphereGeometry(1, 100);\n    const material = new THREE.MeshPhongMaterial({ color: '#fffffff' });\n    const sphere = new THREE.Mesh(geometry, material);\n    scene.add(sphere);\n\n    const ambientLight = new THREE.AmbientLight('#fffff');\n    scene.add(ambientLight);\n\n    const spotLight = new THREE.SpotLight('#FF0000');\n    spotLight.position.set(3, 3, 3);\n    spotLight.target = sphere;\n    scene.add(spotLight);\n\n\n    const map = new THREE.TextureLoader().load( '/Users/linhankuan/fvl2025/src/assets/4.jpg' );\n    const pt_material = new THREE.SpriteMaterial( { map: map } );\n\n    const sprite = new THREE.Sprite( pt_material );\n    scene.add( sprite );\n\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n  }\n};\n</script>\n"],"mappings":"AAOA,OAAO,KAAKA,KAAI,MAAO,OAAO;AAE9B,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,OAAOA,CAAA,EAAG;IAER,MAAMC,KAAI,GAAI,IAAIH,KAAK,CAACI,KAAK,CAAC,CAAC;IAC/B,MAAMC,WAAU,GAAIC,KAAI,GAAIC,WAAW;IACvC,MAAMC,MAAK,GAAI,IAAIR,KAAK,CAACS,iBAAiB,CACxCJ,WAAW,EACX,EAAE,EACFK,MAAM,CAACC,UAAS,GAAID,MAAM,CAACH,WAAW,EACtC,GAAG,EACH,EACF,CAAC;IACDC,MAAM,CAACI,QAAQ,CAACC,CAAA,GAAI,CAAC;IAErB,MAAMC,QAAO,GAAI,IAAId,KAAK,CAACe,aAAa,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzDF,QAAQ,CAACG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;IACrCH,QAAQ,CAACI,OAAO,CAACR,MAAM,CAACC,UAAU,EAAED,MAAM,CAACH,WAAW,CAAC;;IAEvD;IACA,IAAI,CAACY,KAAK,CAACC,cAAc,CAACC,WAAW,CAACP,QAAQ,CAACQ,UAAU,CAAC;IAK1D,MAAMC,QAAO,GAAI,IAAIvB,KAAK,CAACwB,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC;IACjD,MAAMC,QAAO,GAAI,IAAIzB,KAAK,CAAC0B,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAW,CAAC,CAAC;IACnE,MAAMC,MAAK,GAAI,IAAI5B,KAAK,CAAC6B,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;IACjDtB,KAAK,CAAC2B,GAAG,CAACF,MAAM,CAAC;IAEjB,MAAMG,YAAW,GAAI,IAAI/B,KAAK,CAACgC,YAAY,CAAC,QAAQ,CAAC;IACrD7B,KAAK,CAAC2B,GAAG,CAACC,YAAY,CAAC;IAEvB,MAAME,SAAQ,GAAI,IAAIjC,KAAK,CAACkC,SAAS,CAAC,SAAS,CAAC;IAChDD,SAAS,CAACrB,QAAQ,CAACuB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/BF,SAAS,CAACG,MAAK,GAAIR,MAAM;IACzBzB,KAAK,CAAC2B,GAAG,CAACG,SAAS,CAAC;IAGpB,MAAMI,GAAE,GAAI,IAAIrC,KAAK,CAACsC,aAAa,CAAC,CAAC,CAACC,IAAI,CAAE,4CAA6C,CAAC;IAC1F,MAAMC,WAAU,GAAI,IAAIxC,KAAK,CAACyC,cAAc,CAAE;MAAEJ,GAAG,EAAEA;IAAI,CAAE,CAAC;IAE5D,MAAMK,MAAK,GAAI,IAAI1C,KAAK,CAAC2C,MAAM,CAAEH,WAAY,CAAC;IAC9CrC,KAAK,CAAC2B,GAAG,CAAEY,MAAO,CAAC;IAEnB,SAASE,OAAOA,CAAA,EAAG;MACjBC,qBAAqB,CAACD,OAAO,CAAC;MAC9B9B,QAAQ,CAACgC,MAAM,CAAC3C,KAAK,EAAEK,MAAM,CAAC;IAChC;IACAoC,OAAO,CAAC,CAAC;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}