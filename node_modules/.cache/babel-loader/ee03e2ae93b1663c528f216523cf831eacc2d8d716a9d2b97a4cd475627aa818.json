{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nexport default {\n  name: 'Calendar',\n  props: {\n    events: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      currentDate: new Date(),\n      selectedDate: null,\n      weekdays: ['日', '一', '二', '三', '四', '五', '六']\n    };\n  },\n  computed: {\n    currentMonthYear() {\n      return this.currentDate.toLocaleDateString('zh-TW', {\n        year: 'numeric',\n        month: 'long'\n      });\n    },\n    calendarDays() {\n      const year = this.currentDate.getFullYear();\n      const month = this.currentDate.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const startDate = new Date(firstDay);\n      startDate.setDate(startDate.getDate() - firstDay.getDay());\n      const days = [];\n      const today = new Date();\n      for (let i = 0; i < 42; i++) {\n        const date = new Date(startDate);\n        date.setDate(startDate.getDate() + i);\n        const dayEvents = this.getEventsForDate(date);\n        const hasEvents = dayEvents.length > 0;\n        days.push({\n          date: date.toISOString().split('T')[0],\n          dayNumber: date.getDate(),\n          isCurrentMonth: date.getMonth() === month,\n          isToday: date.toDateString() === today.toDateString(),\n          hasEvents,\n          eventCount: dayEvents.length\n        });\n      }\n      return days;\n    },\n    selectedDateEvents() {\n      if (!this.selectedDate) return [];\n      return this.getEventsForDate(new Date(this.selectedDate));\n    },\n    selectedDateFormatted() {\n      if (!this.selectedDate) return '';\n      return new Date(this.selectedDate).toLocaleDateString('zh-TW', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    }\n  },\n  methods: {\n    previousMonth() {\n      this.currentDate = new Date(this.currentDate.getFullYear(), this.currentDate.getMonth() - 1, 1);\n    },\n    nextMonth() {\n      this.currentDate = new Date(this.currentDate.getFullYear(), this.currentDate.getMonth() + 1, 1);\n    },\n    selectDate(day) {\n      this.selectedDate = day.date;\n    },\n    getEventsForDate(date) {\n      // 這裡可以根據實際的活動資料結構來調整\n      // 目前使用模擬資料\n      const dateStr = date.toISOString().split('T')[0];\n\n      // 模擬根據日期篩選活動\n      return this.events.filter(event => {\n        // 這裡需要根據實際的活動資料結構來調整\n        // 假設活動有 date 欄位\n        return event.date === dateStr;\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","events","type","Array","default","data","currentDate","Date","selectedDate","weekdays","computed","currentMonthYear","toLocaleDateString","year","month","calendarDays","getFullYear","getMonth","firstDay","lastDay","startDate","setDate","getDate","getDay","days","today","i","date","dayEvents","getEventsForDate","hasEvents","length","push","toISOString","split","dayNumber","isCurrentMonth","isToday","toDateString","eventCount","selectedDateEvents","selectedDateFormatted","day","methods","previousMonth","nextMonth","selectDate","dateStr","filter","event"],"sources":["/Users/linhankuan/fvl2025/src/components/Calendar.vue"],"sourcesContent":["<template>\n  <div class=\"calendar-container\">\n    <div class=\"calendar-header\">\n      <button @click=\"previousMonth\" class=\"calendar-nav-btn\">&lt;</button>\n      <h3 class=\"calendar-title\">{{ currentMonthYear }}</h3>\n      <button @click=\"nextMonth\" class=\"calendar-nav-btn\">&gt;</button>\n    </div>\n    \n    <div class=\"calendar-grid\">\n      <!-- 星期標題 -->\n      <div class=\"calendar-weekdays\">\n        <div v-for=\"day in weekdays\" :key=\"day\" class=\"weekday\">{{ day }}</div>\n      </div>\n      \n      <!-- 日期格子 -->\n      <div class=\"calendar-days\">\n        <div \n          v-for=\"day in calendarDays\" \n          :key=\"day.date\"\n          :class=\"[\n            'calendar-day',\n            { 'other-month': !day.isCurrentMonth },\n            { 'has-events': day.hasEvents },\n            { 'today': day.isToday }\n          ]\"\n          @click=\"selectDate(day)\"\n        >\n          <span class=\"day-number\">{{ day.dayNumber }}</span>\n          <div v-if=\"day.hasEvents\" class=\"event-indicator\">\n            <span class=\"event-dot\"></span>\n            <span class=\"event-count\">{{ day.eventCount }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- 選中日期的活動列表 -->\n    <div v-if=\"selectedDateEvents.length > 0\" class=\"selected-date-events\">\n      <h4>{{ selectedDateFormatted }} 的活動</h4>\n      <div class=\"event-list\">\n        <div \n          v-for=\"event in selectedDateEvents\" \n          :key=\"event.id\"\n          class=\"event-item\"\n        >\n          <div class=\"event-time\">{{ event.time }}</div>\n          <div class=\"event-details\">\n            <div class=\"event-title\">{{ event.title }}</div>\n            <div class=\"event-location\">{{ event.location }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Calendar',\n  props: {\n    events: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      currentDate: new Date(),\n      selectedDate: null,\n      weekdays: ['日', '一', '二', '三', '四', '五', '六']\n    }\n  },\n  computed: {\n    currentMonthYear() {\n      return this.currentDate.toLocaleDateString('zh-TW', {\n        year: 'numeric',\n        month: 'long'\n      })\n    },\n    calendarDays() {\n      const year = this.currentDate.getFullYear()\n      const month = this.currentDate.getMonth()\n      const firstDay = new Date(year, month, 1)\n      const lastDay = new Date(year, month + 1, 0)\n      const startDate = new Date(firstDay)\n      startDate.setDate(startDate.getDate() - firstDay.getDay())\n      \n      const days = []\n      const today = new Date()\n      \n      for (let i = 0; i < 42; i++) {\n        const date = new Date(startDate)\n        date.setDate(startDate.getDate() + i)\n        \n        const dayEvents = this.getEventsForDate(date)\n        const hasEvents = dayEvents.length > 0\n        \n        days.push({\n          date: date.toISOString().split('T')[0],\n          dayNumber: date.getDate(),\n          isCurrentMonth: date.getMonth() === month,\n          isToday: date.toDateString() === today.toDateString(),\n          hasEvents,\n          eventCount: dayEvents.length\n        })\n      }\n      \n      return days\n    },\n    selectedDateEvents() {\n      if (!this.selectedDate) return []\n      return this.getEventsForDate(new Date(this.selectedDate))\n    },\n    selectedDateFormatted() {\n      if (!this.selectedDate) return ''\n      return new Date(this.selectedDate).toLocaleDateString('zh-TW', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      })\n    }\n  },\n  methods: {\n    previousMonth() {\n      this.currentDate = new Date(this.currentDate.getFullYear(), this.currentDate.getMonth() - 1, 1)\n    },\n    nextMonth() {\n      this.currentDate = new Date(this.currentDate.getFullYear(), this.currentDate.getMonth() + 1, 1)\n    },\n    selectDate(day) {\n      this.selectedDate = day.date\n    },\n    getEventsForDate(date) {\n      // 這裡可以根據實際的活動資料結構來調整\n      // 目前使用模擬資料\n      const dateStr = date.toISOString().split('T')[0]\n      \n      // 模擬根據日期篩選活動\n      return this.events.filter(event => {\n        // 這裡需要根據實際的活動資料結構來調整\n        // 假設活動有 date 欄位\n        return event.date === dateStr\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.calendar-container {\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 24px rgba(0,0,0,0.06);\n  overflow: hidden;\n  color: #111;\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  background: #111;\n  color: #fff;\n}\n\n.calendar-nav-btn {\n  background: none;\n  border: none;\n  color: #fff;\n  font-size: 1.2rem;\n  cursor: pointer;\n  padding: 8px 12px;\n  border-radius: 4px;\n  transition: background-color 0.3s;\n}\n\n.calendar-nav-btn:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.calendar-title {\n  font-size: 1.3rem;\n  font-weight: 600;\n  margin: 0;\n}\n\n.calendar-grid {\n  padding: 20px;\n}\n\n.calendar-weekdays {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 1px;\n  margin-bottom: 10px;\n}\n\n.weekday {\n  text-align: center;\n  font-weight: 600;\n  color: #666;\n  padding: 10px 0;\n  font-size: 0.9rem;\n}\n\n.calendar-days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 1px;\n}\n\n.calendar-day {\n  aspect-ratio: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border-radius: 8px;\n  transition: all 0.3s;\n  position: relative;\n  padding: 8px;\n}\n\n.calendar-day:hover {\n  background: #f0f0f0;\n}\n\n.calendar-day.other-month {\n  color: #ccc;\n}\n\n.calendar-day.today {\n  background: #007bff;\n  color: #fff;\n}\n\n.calendar-day.has-events {\n  background: #e3f2fd;\n  border: 2px solid #2196f3;\n}\n\n.day-number {\n  font-weight: 600;\n  font-size: 1rem;\n}\n\n.event-indicator {\n  position: absolute;\n  bottom: 4px;\n  right: 4px;\n  display: flex;\n  align-items: center;\n  gap: 2px;\n}\n\n.event-dot {\n  width: 6px;\n  height: 6px;\n  background: #f44336;\n  border-radius: 50%;\n}\n\n.event-count {\n  font-size: 0.7rem;\n  font-weight: 600;\n  color: #f44336;\n}\n\n.selected-date-events {\n  padding: 20px;\n  border-top: 1px solid #eee;\n  background: #f8f9fa;\n}\n\n.selected-date-events h4 {\n  margin: 0 0 15px 0;\n  color: #333;\n  font-size: 1.1rem;\n}\n\n.event-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.event-item {\n  display: flex;\n  gap: 15px;\n  padding: 12px;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.event-time {\n  font-weight: 600;\n  color: #007bff;\n  min-width: 80px;\n  font-size: 0.9rem;\n}\n\n.event-details {\n  flex: 1;\n}\n\n.event-title {\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 4px;\n}\n\n.event-location {\n  font-size: 0.9rem;\n  color: #666;\n}\n\n@media (max-width: 768px) {\n  .calendar-header {\n    padding: 15px;\n  }\n  \n  .calendar-grid {\n    padding: 15px;\n  }\n  \n  .calendar-day {\n    padding: 4px;\n  }\n  \n  .day-number {\n    font-size: 0.9rem;\n  }\n  \n  .event-item {\n    flex-direction: column;\n    gap: 8px;\n  }\n  \n  .event-time {\n    min-width: auto;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}