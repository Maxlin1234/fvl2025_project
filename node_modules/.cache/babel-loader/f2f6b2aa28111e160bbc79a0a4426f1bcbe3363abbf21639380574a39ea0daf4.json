{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"particles\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [_createElementVNode(\"p\", null, \"Hello world\", -1 /* CACHED */)]));\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_cache","_createElementVNode"],"sources":["/Users/linhankuan/fvl2025/src/components/BannerParticles.vue"],"sourcesContent":["<template>\n<div class=\"particles\">\n<p>Hello world</p>\n</div>\n\n</template>\n\n\n<script>\nimport * as THREE from 'three';\n\nexport default{\n  name: 'Banner-pt',\n  data(){\n\n  },\n  mounted(){\n    let camera;\n    var scene = new THREE.Scene(); //建立場景\n    var geometry = new THREE.BoxGeometry( 5, 5, 5 ); //建立立方體\n    var material = new THREE.MeshPhongMaterial({ color: '#ff0000' });\n    var cube = new THREE.Mesh( geometry, material );\n    var renderer = new THREE.WebGLRenderer(); //建立渲染器\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    document.body.appendChild( renderer.domElement );\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 10);\n    camera.position.z = 5;\n    var ambientLight = new THREE.AmbientLight( '#0c0c0c' ); //建立環境光\n    scene.add( ambientLight ); //把環境光添加到場景\n    var spoltLight = new THREE.SpotLight( '#FF0000' ); //建立聚光燈spoltLight.position.set(3, 3, 3); // 設定光源位置\n    spoltLight.target = cube; // 設定光源目標\n  \n    scene.add( spoltLight); //把聚光燈添加到場景\n    scene.add(cube);\n    // var meaterial = new THREE.ParticleBasicMaterial();\n//     for(var x = -5 ; x < 5 ; x ++){\n//     for(var y = -5 ; y < 5 ; y ++){\n//     //手动创建一个粒子，只需传递一个材质即可。还材质可以是 ParticleBasicMaterial 或者 ParticleProgramMaterial材质\n//     var particle = new THREE.Particle(material);\n//         particle.position.set(x*10,y*10,0);\n//         scene.add(particle);            \n    \n//   }\n// }\nfunction animate() {\n   requestAnimationFrame( animate );\n   renderer.render( scene, camera ); // 渲染，需傳入場景和鏡頭\n} \nanimate();\n  }\n}\n\n\n</script>\n\n\n<style>\n\n\n</style>"],"mappings":";;EACKA,KAAK,EAAC;AAAW;;uBAAtBC,mBAAA,CAEM,OAFNC,UAEM,EAAAC,MAAA,QAAAA,MAAA,OADNC,mBAAA,CAAkB,WAAf,aAAW,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}