{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { isScalar, SCALAR } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\nfunction composeScalar(ctx, token, tagToken, onError) {\n  const {\n    value,\n    type,\n    comment,\n    range\n  } = token.type === 'block-scalar' ? resolveBlockScalar(ctx, token, onError) : resolveFlowScalar(token, ctx.options.strict, onError);\n  const tagName = tagToken ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg)) : null;\n  let tag;\n  if (ctx.options.stringKeys && ctx.atKey) {\n    tag = ctx.schema[SCALAR];\n  } else if (tagName) tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);else if (token.type === 'scalar') tag = findScalarTagByTest(ctx, value, token, onError);else tag = ctx.schema[SCALAR];\n  let scalar;\n  try {\n    const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n    scalar = isScalar(res) ? res : new Scalar(res);\n  } catch (error) {\n    const msg = error instanceof Error ? error.message : String(error);\n    onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n    scalar = new Scalar(value);\n  }\n  scalar.range = range;\n  scalar.source = value;\n  if (type) scalar.type = type;\n  if (tagName) scalar.tag = tagName;\n  if (tag.format) scalar.format = tag.format;\n  if (comment) scalar.comment = comment;\n  return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n  if (tagName === '!') return schema[SCALAR]; // non-specific tag\n  const matchWithTest = [];\n  for (const tag of schema.tags) {\n    if (!tag.collection && tag.tag === tagName) {\n      if (tag.default && tag.test) matchWithTest.push(tag);else return tag;\n    }\n  }\n  for (const tag of matchWithTest) if (tag.test?.test(value)) return tag;\n  const kt = schema.knownTags[tagName];\n  if (kt && !kt.collection) {\n    // Ensure that the known tag is available for stringifying,\n    // but does not get used by default.\n    schema.tags.push(Object.assign({}, kt, {\n      default: false,\n      test: undefined\n    }));\n    return kt;\n  }\n  onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n  return schema[SCALAR];\n}\nfunction findScalarTagByTest({\n  atKey,\n  directives,\n  schema\n}, value, token, onError) {\n  const tag = schema.tags.find(tag => (tag.default === true || atKey && tag.default === 'key') && tag.test?.test(value)) || schema[SCALAR];\n  if (schema.compat) {\n    const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ?? schema[SCALAR];\n    if (tag.tag !== compat.tag) {\n      const ts = directives.tagString(tag.tag);\n      const cs = directives.tagString(compat.tag);\n      const msg = `Value may be parsed as either ${ts} or ${cs}`;\n      onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n    }\n  }\n  return tag;\n}\nexport { composeScalar };","map":{"version":3,"names":["isScalar","SCALAR","Scalar","resolveBlockScalar","resolveFlowScalar","composeScalar","ctx","token","tagToken","onError","value","type","comment","range","options","strict","tagName","directives","source","msg","tag","stringKeys","atKey","schema","findScalarTagByName","findScalarTagByTest","scalar","res","resolve","error","Error","message","String","format","matchWithTest","tags","collection","default","test","push","kt","knownTags","Object","assign","undefined","find","compat","ts","tagString","cs"],"sources":["/Users/linhankuan/fvl2025/node_modules/yaml/browser/dist/compose/compose-scalar.js"],"sourcesContent":["import { isScalar, SCALAR } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(ctx, token, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    let tag;\n    if (ctx.options.stringKeys && ctx.atKey) {\n        tag = ctx.schema[SCALAR];\n    }\n    else if (tagName)\n        tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);\n    else if (token.type === 'scalar')\n        tag = findScalarTagByTest(ctx, value, token, onError);\n    else\n        tag = ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ atKey, directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => (tag.default === true || (atKey && tag.default === 'key')) &&\n        tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}