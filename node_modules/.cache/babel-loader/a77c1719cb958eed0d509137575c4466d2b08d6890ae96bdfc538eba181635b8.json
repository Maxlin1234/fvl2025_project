{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar2\"\n};\nconst _hoisted_2 = {\n  class: \"month-title\"\n};\nconst _hoisted_3 = {\n  class: \"event-list\"\n};\nconst _hoisted_4 = {\n  class: \"event-date\"\n};\nconst _hoisted_5 = {\n  class: \"date\"\n};\nconst _hoisted_6 = {\n  class: \"weekday\"\n};\nconst _hoisted_7 = {\n  class: \"event-content\"\n};\nconst _hoisted_8 = {\n  class: \"titles\"\n};\nconst _hoisted_9 = {\n  class: \"title-zh\"\n};\nconst _hoisted_10 = {\n  class: \"title-en\"\n};\nconst _hoisted_11 = {\n  class: \"meta\"\n};\nconst _hoisted_12 = {\n  class: \"time\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"dot\"\n};\nconst _hoisted_14 = {\n  key: 1,\n  class: \"loc\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.groupedByMonth, (month, mIdx) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"month\",\n      key: mIdx\n    }, [_createElementVNode(\"h3\", _hoisted_2, _toDisplayString(month.label), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(month.events, evt => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: evt.id,\n        class: _normalizeClass([\"event-item\", {\n          alt: evt.id % 2 === 0\n        }])\n      }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString($options.formatDate(evt.date)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, _toDisplayString($options.weekday(evt.date)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(evt.titleZh), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, _toDisplayString(evt.titleEn), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", _hoisted_12, _toDisplayString(evt.time), 1 /* TEXT */), evt.location ? (_openBlock(), _createElementBlock(\"span\", _hoisted_13, \"•\")) : _createCommentVNode(\"v-if\", true), evt.location ? (_openBlock(), _createElementBlock(\"span\", _hoisted_14, _toDisplayString($props.isEnglish ? evt.locationEn || evt.location : evt.location), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])])], 2 /* CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$options","groupedByMonth","month","mIdx","key","_createElementVNode","_hoisted_2","_toDisplayString","label","_hoisted_3","events","evt","id","_normalizeClass","alt","_hoisted_4","_hoisted_5","formatDate","date","_hoisted_6","weekday","_hoisted_7","_hoisted_8","_hoisted_9","titleZh","_hoisted_10","titleEn","_hoisted_11","_hoisted_12","time","location","_hoisted_13","_hoisted_14","$props","isEnglish","locationEn"],"sources":["/Users/linhankuan/fvl2025/src/components/Calendar2.vue"],"sourcesContent":["<template>\n  <section class=\"calendar2\">\n    <div class=\"month\" v-for=\"(month, mIdx) in groupedByMonth\" :key=\"mIdx\">\n      <h3 class=\"month-title\">{{ month.label }}</h3>\n      <ul class=\"event-list\">\n        <li v-for=\"evt in month.events\" :key=\"evt.id\" class=\"event-item\" :class=\"{ alt: evt.id % 2 === 0 }\">\n          <div class=\"event-date\">\n            <div class=\"date\">{{ formatDate(evt.date) }}</div>\n            <div class=\"weekday\">{{ weekday(evt.date) }}</div>\n          </div>\n          <div class=\"event-content\">\n            <div class=\"titles\">\n              <div class=\"title-zh\">{{ evt.titleZh }}</div>\n              <div class=\"title-en\">{{ evt.titleEn }}</div>\n            </div>\n            <div class=\"meta\">\n              <span class=\"time\">{{ evt.time }}</span>\n              <span v-if=\"evt.location\" class=\"dot\">•</span>\n              <span v-if=\"evt.location\" class=\"loc\">{{ isEnglish ? evt.locationEn || evt.location : evt.location }}</span>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'Cal-endar2',\n  props: {\n    isEnglish: { type: Boolean, default: false }\n  },\n  data() {\n    return {\n      // September and October schedule (bilingual)\n      // Note: You can adjust/add entries as needed.\n      events: [\n        // September\n        { id: 101, date: '2025-11-29', time: '14:00–15:00', titleZh: '《昌勳與他的打字機》Dome穴遇言《Sumerian World》', titleEn: '《Sumerian World》', location: 'DOME' },\n        { id: 102, date: '2025-11-29', time: '15:00–16:00', titleZh: '《Babel》《奶油金剛》《水身萬象》 ', titleEn: 'Venue Setup', location: 'DOME' },\n        { id: 103, date: '2025-11-29', time: '16:00–17:00', titleZh: '《昌勳與他的打字機》Dome穴遇言《in s.asmbli》', titleEn: 'Venue Setup', location: 'DOME' },\n        { id: 104, date: '2025-11-29', time: '17:00–18:00', titleZh: '《Hurtubise: Orchestrating Chaos》《in s.asmbli》', titleEn: '《Hurtubise: Orchestrating Chaos》《in s.asmbli》', location: 'DOME' },\n        { id: 106, date: '2025-11-29', time: '18:00–19:00', titleZh: '《Babel》《奶油金剛》《Metaract》', titleEn: '《Babel》《奶油金剛》《Metaract》', location: 'DOME' },\n        { id: 107, date: '2025-11-29', time: '19:00–20:00', titleZh: '《Red Sunrise》《水身萬象》 ', titleEn: 'Technical Rehearsal', location: 'DOME' },\n\n        { id: 101, date: '2025-11-30', time: '14:00–15:00', titleZh: '《Babel》《奶油金剛》《Metaract》', titleEn: '《Sumerian World》', location: 'DOME' },\n        { id: 102, date: '2025-11-30', time: '15:00–16:00', titleZh: '《Red Sunrise》《水身萬象》', titleEn: 'Venue Setup', location: 'DOME' },\n        { id: 103, date: '2025-11-30', time: '16:00–17:00', titleZh: '《Hurtubise: Orchestrating Chaos》《in s.asmbli》', titleEn: 'Venue Setup', location: 'DOME' },\n        { id: 104, date: '2025-11-30', time: '17:00–18:00', titleZh: '《昌勳與他的打字機》Dome穴遇言《奶油金剛》', titleEn: '《Hurtubise: Orchestrating Chaos》《in s.asmbli》', location: 'DOME' },\n        { id: 106, date: '2025-11-30', time: '18:00–19:00', titleZh: '《Red Sunrise》《水身萬象》 ', titleEn: '《Babel》《奶油金剛》《Metaract》', location: 'DOME' },\n\n\n        \n        // October\n        { id: 10, date: '2025-12-05', time: '19:00–20:00', titleZh: '《thewhole》', titleEn: 'Test Screening', location: 'DOME' },\n        { id: 10, date: '2025-12-06', time: '14:00–18:00', titleZh: '作品試播', titleEn: 'Test Screening', location: 'DOME' },\n        { id: 104, date: '2025-12-07', time: '19:00–21:00', titleZh: '講座：沉浸式敘事', titleEn: 'Talk: Immersive Storytelling', location: 'Lecture Hall', locationEn: 'Lecture Hall' },\n        { id: 104, date: '2025-12-10', time: '19:00–21:00', titleZh: '講座：沉浸式敘事', titleEn: 'Talk: Immersive Storytelling', location: 'Lecture Hall', locationEn: 'Lecture Hall' },\n        { id: 104, date: '2025-12-11', time: '19:00–21:00', titleZh: '講座：沉浸式敘事', titleEn: 'Talk: Immersive Storytelling', location: 'Lecture Hall', locationEn: 'Lecture Hall' },\n        { id: 104, date: '2025-12-13', time: '19:00–21:00', titleZh: '講座：沉浸式敘事', titleEn: 'Talk: Immersive Storytelling', location: 'Lecture Hall', locationEn: 'Lecture Hall' },\n        { id: 104, date: '2025-12-14', time: '19:00–21:00', titleZh: '講座：沉浸式敘事', titleEn: 'Talk: Immersive Storytelling', location: 'Lecture Hall', locationEn: 'Lecture Hall' },\n        { id: 104, date: '2025-12-19', time: '19:00–21:00', titleZh: '講座：沉浸式敘事', titleEn: 'Talk: Immersive Storytelling', location: 'Lecture Hall', locationEn: 'Lecture Hall' },\n        { id: 104, date: '2025-12-20', time: '19:00–21:00', titleZh: '講座：沉浸式敘事', titleEn: 'Talk: Immersive Storytelling', location: 'Lecture Hall', locationEn: 'Lecture Hall' },\n        { id: 104, date: '2025-12-21', time: '19:00–21:00', titleZh: '講座：沉浸式敘事', titleEn: 'Talk: Immersive Storytelling', location: 'Lecture Hall', locationEn: 'Lecture Hall' },\n\n      ]\n    }\n  },\n  computed: {\n    groupedByMonth() {\n      const byMonth = {};\n      for (const evt of this.events) {\n        const ym = evt.date.slice(0, 7); // YYYY-MM\n        if (!byMonth[ym]) byMonth[ym] = [];\n        byMonth[ym].push(evt);\n      }\n      const ordered = Object.keys(byMonth)\n        .sort()\n        .map(ym => ({\n          label: this.formatMonthLabel(ym),\n          events: byMonth[ym].sort((a, b) => a.date.localeCompare(b.date))\n        }));\n      return ordered;\n    }\n  },\n  methods: {\n    formatMonthLabel(ym) {\n      const [y, m] = ym.split('-').map(n => parseInt(n, 10));\n      const monthZh = `${y}年${m}月`;\n      const monthEn = new Date(`${ym}-01`).toLocaleDateString('en-US', { year: 'numeric', month: 'long' });\n      return this.isEnglish ? monthEn : monthZh;\n    },\n    formatDate(iso) {\n      const d = new Date(iso);\n      const y = d.getFullYear();\n      const m = String(d.getMonth() + 1).padStart(2, '0');\n      const day = String(d.getDate()).padStart(2, '0');\n      if (this.isEnglish) return `${y}/${m}/${day}`;\n      return `${y}.${m}.${day}`;\n    },\n    weekday(iso) {\n      const d = new Date(iso);\n      if (this.isEnglish) {\n        return d.toLocaleDateString('en-US', { weekday: 'short' });\n        \n      }\n      const map = ['日', '一', '二', '三', '四', '五', '六'];\n      return `(${map[d.getDay()]})`;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.calendar2 {\n  background: #fff;\n  color: #000;\n  border-radius: 16px;\n  padding: 16px;\n}\n\n.month + .month { margin-top: 24px; }\n\n.month-title {\n  font-weight: 700;\n  font-size: 20px;\n  margin: 0 0 12px 0;\n}\n\n.event-list { list-style: none; padding: 0; margin: 0; }\n\n.event-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 16px;\n  padding: 14px 12px;\n  border-top: 1px dashed #0060b9;\n}\n.event-item.alt { background: #f5fbff; }\n\n.event-date { min-width: 140px; display: flex; flex-direction: column; gap: 2px; }\n.event-date .date { font-weight: 700; }\n.event-date .weekday { color: #666; font-size: 12px; }\n\n.event-content { display: flex; flex: 1; align-items: center; justify-content: space-between; gap: 12px; }\n.titles { display: flex; flex-direction: column; gap: 2px; }\n.title-zh { font-size: 16px; font-weight: 700; }\n.title-en { font-size: 14px; color: #333; }\n\n.meta { color: #111; font-size: 14px; white-space: nowrap; display: flex; align-items: center; gap: 8px; }\n.meta .dot { color: #999; }\n\n@media (max-width: 768px) {\n  .event-item { flex-direction: column; align-items: flex-start; }\n  .event-content { width: 100%; flex-direction: column; align-items: flex-start; gap: 6px; }\n  .meta { font-size: 13px; }\n}\n</style>"],"mappings":";;EACWA,KAAK,EAAC;AAAW;;EAElBA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAY;;EAEbA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAS;;EAEjBA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAU;;EAChBA,KAAK,EAAC;AAAU;;EAElBA,KAAK,EAAC;AAAM;;EACTA,KAAK,EAAC;AAAM;;;EACQA,KAAK,EAAC;;;;EACNA,KAAK,EAAC;;;uBAjB5CC,mBAAA,CAuBU,WAvBVC,UAuBU,I,kBAtBRD,mBAAA,CAqBME,SAAA,QAAAC,WAAA,CArBqCC,QAAA,CAAAC,cAAc,GAA9BC,KAAK,EAAEC,IAAI;yBAAtCP,mBAAA,CAqBM;MArBDD,KAAK,EAAC,OAAO;MAA0CS,GAAG,EAAED;QAC/DE,mBAAA,CAA8C,MAA9CC,UAA8C,EAAAC,gBAAA,CAAnBL,KAAK,CAACM,KAAK,kBACtCH,mBAAA,CAkBK,MAlBLI,UAkBK,I,kBAjBHb,mBAAA,CAgBKE,SAAA,QAAAC,WAAA,CAhBaG,KAAK,CAACQ,MAAM,EAAnBC,GAAG;2BAAdf,mBAAA,CAgBK;QAhB4BQ,GAAG,EAAEO,GAAG,CAACC,EAAE;QAAEjB,KAAK,EAAAkB,eAAA,EAAC,YAAY;UAAAC,GAAA,EAAgBH,GAAG,CAACC,EAAE;QAAA;UACpFP,mBAAA,CAGM,OAHNU,UAGM,GAFJV,mBAAA,CAAkD,OAAlDW,UAAkD,EAAAT,gBAAA,CAA7BP,QAAA,CAAAiB,UAAU,CAACN,GAAG,CAACO,IAAI,mBACxCb,mBAAA,CAAkD,OAAlDc,UAAkD,EAAAZ,gBAAA,CAA1BP,QAAA,CAAAoB,OAAO,CAACT,GAAG,CAACO,IAAI,kB,GAE1Cb,mBAAA,CAUM,OAVNgB,UAUM,GATJhB,mBAAA,CAGM,OAHNiB,UAGM,GAFJjB,mBAAA,CAA6C,OAA7CkB,UAA6C,EAAAhB,gBAAA,CAApBI,GAAG,CAACa,OAAO,kBACpCnB,mBAAA,CAA6C,OAA7CoB,WAA6C,EAAAlB,gBAAA,CAApBI,GAAG,CAACe,OAAO,iB,GAEtCrB,mBAAA,CAIM,OAJNsB,WAIM,GAHJtB,mBAAA,CAAwC,QAAxCuB,WAAwC,EAAArB,gBAAA,CAAlBI,GAAG,CAACkB,IAAI,kBAClBlB,GAAG,CAACmB,QAAQ,I,cAAxBlC,mBAAA,CAA8C,QAA9CmC,WAA8C,EAAR,GAAC,K,mCAC3BpB,GAAG,CAACmB,QAAQ,I,cAAxBlC,mBAAA,CAA4G,QAA5GoC,WAA4G,EAAAzB,gBAAA,CAAnE0B,MAAA,CAAAC,SAAS,GAAGvB,GAAG,CAACwB,UAAU,IAAIxB,GAAG,CAACmB,QAAQ,GAAGnB,GAAG,CAACmB,QAAQ,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}