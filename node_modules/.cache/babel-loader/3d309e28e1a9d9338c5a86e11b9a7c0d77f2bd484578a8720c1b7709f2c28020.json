{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as THREE from 'three';\nexport default {\n  name: 'BannerPt',\n  mounted() {\n    // === 基本場景設置 ===\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 100);\n    camera.position.z = 10;\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      preserveDrawingBuffer: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0x000000, 0); // 完全透明背景\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.$refs.threeContainer.appendChild(renderer.domElement);\n\n    // === 建立圓形貼圖 ===\n    // const canvas = document.createElement('canvas');\n    // canvas.width = 64;\n    // canvas.height = 64;\n    // const ctx = canvas.getContext('2d');\n    // const center = 32;\n    // const radius = 30;\n\n    // // 畫一個白色圓形，背景透明\n    // ctx.clearRect(0, 0, 64, 64);\n    // ctx.beginPath();\n    // ctx.arc(center, center, radius, 0, Math.PI * 2);\n    // ctx.closePath();\n    // ctx.fillStyle = 'white';\n    // ctx.fill();\n    const canvas = document.createElement('canvas');\n    canvas.width = 64;\n    canvas.height = 64;\n    const ctx = canvas.getContext('2d');\n    const center = 32;\n    const radius = 30;\n\n    // 清空背景\n    ctx.clearRect(0, 0, 64, 64);\n\n    // 建立徑向漸層\n    const gradient = ctx.createLinearGradient(center, center, 0, center, center, radius);\n    gradient.addColorStop(0, '#ffb9eb'); // 中心色：粉紅\n    gradient.addColorStop(1, '#86e3ff'); // 外圍色：淺藍\n\n    ctx.beginPath();\n    ctx.arc(center, center, radius, 0, Math.PI * 2);\n    ctx.closePath();\n    ctx.fillStyle = gradient;\n    ctx.fill();\n    const circleTexture = new THREE.CanvasTexture(canvas);\n\n    // const circleTexture = new THREE.CanvasTexture(canvas);\n\n    // === 建立粒子幾何體與材質 ===\n    const geometry = new THREE.BufferGeometry();\n    const vertices = [];\n    const particleCount = 500;\n    for (let i = 0; i < particleCount; i++) {\n      const x = THREE.MathUtils.randFloatSpread(20);\n      const y = THREE.MathUtils.randFloatSpread(20);\n      const z = THREE.MathUtils.randFloatSpread(20);\n      vertices.push(x, y, z);\n    }\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n    const material = new THREE.PointsMaterial({\n      size: 0.2,\n      map: circleTexture,\n      transparent: true,\n      alphaTest: 0.5,\n      depthWrite: false,\n      blending: THREE.AdditiveBlending,\n      color: 0xFFE4FF,\n      rotation: 45\n    });\n    const particles = new THREE.Points(geometry, material);\n    scene.add(particles);\n\n    // === 單一粒子（可選）===\n    const singleGeometry = new THREE.BufferGeometry();\n    singleGeometry.setAttribute('position', new THREE.Float32BufferAttribute([45, 0, 0], 3));\n    const spherePoint = new THREE.Points(singleGeometry, material);\n    scene.add(spherePoint);\n\n    // === 光源 ===\n    const ambientLight = new THREE.AmbientLight(0xffbdff); // 改成正確顏色\n    scene.add(ambientLight);\n\n    // === 動畫迴圈 ===\n    function animate() {\n      requestAnimationFrame(animate);\n      // particles.rotation.y += 0.001;\n      particles.rotation.y += 0.0006;\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    // === 窗口調整 ===\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n  }\n};","map":{"version":3,"names":["THREE","name","mounted","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","alpha","preserveDrawingBuffer","setPixelRatio","devicePixelRatio","setClearColor","setSize","$refs","threeContainer","appendChild","domElement","canvas","document","createElement","width","height","ctx","getContext","center","radius","clearRect","gradient","createLinearGradient","addColorStop","beginPath","arc","Math","PI","closePath","fillStyle","fill","circleTexture","CanvasTexture","geometry","BufferGeometry","vertices","particleCount","i","x","MathUtils","randFloatSpread","y","push","setAttribute","Float32BufferAttribute","material","PointsMaterial","size","map","transparent","alphaTest","depthWrite","blending","AdditiveBlending","color","rotation","particles","Points","add","singleGeometry","spherePoint","ambientLight","AmbientLight","animate","requestAnimationFrame","render","addEventListener","aspect","updateProjectionMatrix"],"sources":["/Users/linhankuan/fvl2025/src/components/BannerParticles.vue"],"sourcesContent":["<template>\n  <div class=\"particles\" ref=\"threeContainer\" id=\"container\">\n\n    <div class=\"mobile_btns\" style=\"position: absolute;z-index: 999;\">\n      <div v-if=\"Chinese\" class=\"zh_btns\">\n      <button class=\"corner-btn top-left\" \n              @mouseenter=\"$emit('show-drawer', 'schedule')\">\n        <span class=\"btn-zh\">場次表</span>\n        <span class=\"btn-en\">場次表</span>\n      </button>\n      <button class=\"corner-btn top-right\" @click=\"changeEn()\">\n        <span  class=\"btn-zh\">EN</span>\n        <span  class=\"btn-zh\">EN</span>\n\n      </button>\n      \n      <button class=\"corner-btn bottom-right\" \n              @mouseenter=\"$emit('show-drawer', 'about')\">\n        <span class=\"btn-zh\">關於我們</span>\n        <span class=\"btn-en\">關於我們</span>\n      </button>\n      \n      <button class=\"corner-btn bottom-left\" \n              @mouseenter=\"$emit('show-drawer', 'lecture')\">\n        <span class=\"btn-zh\">入場須知</span>\n        <span class=\"btn-en\">入場須知</span>\n      </button>\n      </div>\n\n      <div v-if=\"English\" class=\"en_btns\">\n      <button class=\"corner-btn top-left\" \n              @mouseenter=\"$emit('show-drawer', 'schedule')\">\n        <span class=\"btn-zh\">TIME</span>\n        <span class=\"btn-en\">TIME</span>\n      </button>\n      <button class=\"corner-btn top-right\" @click=\"changeZh()\">\n        <span  class=\"btn-zh\">中文</span>\n        <span  class=\"btn-zh\">中文</span>\n\n      </button>\n      \n      <button class=\"corner-btn bottom-right\" \n              @mouseenter=\"$emit('show-drawer', 'about')\">\n        <span class=\"btn-zh\">ABOUT</span>\n        <span class=\"btn-en\">ABOUT</span>\n      </button>\n      \n      <button class=\"corner-btn bottom-left\" \n              @mouseenter=\"$emit('show-drawer', 'lecture')\">\n        <span class=\"btn-zh\">INFO</span>\n        <span class=\"btn-en\">INFO</span>\n      </button>\n      </div>\n    </div>\n\n    <div class=\"mobile\">\n      <img src=\"../assets/2025banner.jpg\">\n    </div>\n\n   \n  </div>\n</template>\n\n<script>\nimport * as THREE from 'three';\n\nexport default {\n  name: 'BannerPt',\n  mounted() {\n    // === 基本場景設置 ===\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      100\n    );\n    camera.position.z = 10;\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true, preserveDrawingBuffer: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0x000000, 0); // 完全透明背景\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.$refs.threeContainer.appendChild(renderer.domElement);\n\n    // === 建立圓形貼圖 ===\n    // const canvas = document.createElement('canvas');\n    // canvas.width = 64;\n    // canvas.height = 64;\n    // const ctx = canvas.getContext('2d');\n    // const center = 32;\n    // const radius = 30;\n\n    // // 畫一個白色圓形，背景透明\n    // ctx.clearRect(0, 0, 64, 64);\n    // ctx.beginPath();\n    // ctx.arc(center, center, radius, 0, Math.PI * 2);\n    // ctx.closePath();\n    // ctx.fillStyle = 'white';\n    // ctx.fill();\n    const canvas = document.createElement('canvas');\n      canvas.width = 64;\n      canvas.height = 64;\n    const ctx = canvas.getContext('2d');\n    const center = 32;\n    const radius = 30;\n\n    // 清空背景\n    ctx.clearRect(0, 0, 64, 64);\n\n    // 建立徑向漸層\n    const gradient = ctx.createLinearGradient(center, center, 0, center, center, radius);\n    gradient.addColorStop(0, '#ffb9eb'); // 中心色：粉紅\n    gradient.addColorStop(1, '#86e3ff'); // 外圍色：淺藍\n\n    ctx.beginPath();\n    ctx.arc(center, center, radius, 0, Math.PI * 2);\n    ctx.closePath();\n    ctx.fillStyle = gradient;\n    ctx.fill();\n\n    const circleTexture = new THREE.CanvasTexture(canvas);\n\n\n    // const circleTexture = new THREE.CanvasTexture(canvas);\n\n    // === 建立粒子幾何體與材質 ===\n    const geometry = new THREE.BufferGeometry();\n    const vertices = [];\n\n    const particleCount = 500;\n    for (let i = 0; i < particleCount; i++) {\n      const x = THREE.MathUtils.randFloatSpread(20);\n      const y = THREE.MathUtils.randFloatSpread(20);\n      const z = THREE.MathUtils.randFloatSpread(20);\n      vertices.push(x, y, z);\n    }\n\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n\n    const material = new THREE.PointsMaterial({\n      size: 0.2,\n      map: circleTexture,\n      transparent: true,\n      alphaTest: 0.5,\n      depthWrite: false,\n      blending: THREE.AdditiveBlending,\n      color: 0xFFE4FF,\n      rotation:45\n    });\n\n    const particles = new THREE.Points(geometry, material);\n    scene.add(particles);\n\n    // === 單一粒子（可選）===\n    const singleGeometry = new THREE.BufferGeometry();\n    singleGeometry.setAttribute(\n      'position',\n      new THREE.Float32BufferAttribute([45, 0, 0], 3)\n    );\n    const spherePoint = new THREE.Points(singleGeometry, material);\n    scene.add(spherePoint);\n\n    // === 光源 ===\n    const ambientLight = new THREE.AmbientLight(0xffbdff); // 改成正確顏色\n    scene.add(ambientLight);\n\n    // === 動畫迴圈 ===\n    function animate() {\n      requestAnimationFrame(animate);\n      // particles.rotation.y += 0.001;\n      particles.rotation.y += 0.0006;\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    // === 窗口調整 ===\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n  }\n};\n</script>\n<style>\n.mobile{\n  position:absolute;\n  top: 0;\n  height: 100vh;\n  width: 100vw;\n  /* display: none; */\n}\n.mobile img{\n  /* position: absolute; */\n  top: 0;\n  height: 100vh;\n  width: 100vw;\n  object-fit: cover;\n}\n.corner-btn {\n  position: absolute;\n  width: 5em;\n  height: 5em;\n  border-radius: 50%;\n  background:black;\n  color: white;\n  font-weight: bold;\n  border: none;\n  box-shadow: 0 4px 20px rgba(255, 255, 255, 0.3);\n  z-index: 2;\n  cursor: pointer;\n  overflow: hidden;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  transform: scale(1);\n  backdrop-filter: blur(10px);\n  border: 2px solid rgba(255, 255, 255, 0.2);\n}\n\n.corner-btn:hover {\n  transform: scale(1.1) rotate(5deg);\n  box-shadow: 0 8px 30px rgba(255, 255, 255, 0.5), 0 0 0 8px rgba(255, 169, 32, 0.1);\n  background: rgba(255, 255, 255, 0.95);\n  color: #000;\n  border-color: rgba(255, 255, 255, 0.4);\n}\n\n.corner-btn:active {\n  transform: scale(0.95) rotate(-2deg);\n  box-shadow: 0 2px 10px rgba(255, 255, 255, 0.4);\n  transition: all 0.1s ease;\n}\n\n.corner-btn::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  transform: translate(-50%, -50%) scale(0);\n  animation: pulse 2s infinite;\n  pointer-events: none;\n}\n\n@keyframes pulse {\n  0% {\n    transform: translate(-50%, -50%) scale(0);\n    opacity: 1;\n  }\n  100% {\n    transform: translate(-50%, -50%) scale(1.5);\n    opacity: 0;\n  }\n}\n\n.corner-btn::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: radial-gradient(circle at center, rgba(255, 255, 255, 0.2) 0%, transparent 70%);\n  border-radius: 50%;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  pointer-events: none;\n}\n\n.corner-btn:hover::after {\n  opacity: 1;\n}\n\n.corner-btn .btn-zh,\n.corner-btn .btn-en {\n  position: absolute;\n  left: 0;\n  right: 0;\n  width: 100%;\n  text-align: center;\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  pointer-events: none;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  font-weight: 700;\n  letter-spacing: 1px;\n}\n\n.corner-btn .btn-zh {\n  top: 50%;\n  transform: translateY(-50%);\n  opacity: 1;\n}\n\n.corner-btn .btn-en {\n  top: 50%;\n  transform: translateY(100%);\n  opacity: 0;\n  font-size: 0.9em;\n}\n\n.corner-btn:hover .btn-zh {\n  transform: translateY(-120%);\n  opacity: 0;\n  filter: blur(2px);\n}\n\n.corner-btn:hover .btn-en {\n  transform: translateY(-50%);\n  opacity: 1;\n  filter: blur(0);\n}\n\n.corner-btn.top-left:hover {\n  transform: scale(1.1) rotate(-5deg);\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(126, 126, 126, 0.95));\n}\n\n.corner-btn.top-right:hover {\n  transform: scale(1.1) rotate(5deg);\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(126, 126, 126, 0.95));\n  color:black;\n}\n\n.corner-btn.bottom-left:hover {\n  transform: scale(1.1) rotate(-3deg);\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.95),  rgba(126, 126, 126, 0.95));\n}\n\n.corner-btn.bottom-right:hover {\n  transform: scale(1.1) rotate(3deg);\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(126, 126, 126, 0.95));\n}\n\n@keyframes buttonAppear {\n  0% {\n    transform: scale(0) rotate(180deg);\n    opacity: 0;\n  }\n  50% {\n    transform: scale(1.2) rotate(90deg);\n    opacity: 0.7;\n  }\n  100% {\n    transform: scale(1) rotate(0deg);\n    opacity: 1;\n  }\n}\n\n.corner-btn {\n  animation: buttonAppear 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\n}\n\n.corner-btn.top-left {\n  animation-delay: 0.1s;\n}\n\n.corner-btn.top-right {\n  animation-delay: 0.2s;\n}\n\n.corner-btn.bottom-left {\n  animation-delay: 0.3s;\n}\n\n.corner-btn.bottom-right {\n  animation-delay: 0.4s;\n}\n\n.top-left { top: 24px; left: 24px; }\n.top-right { top: 24px; right: 24px; }\n.bottom-left { bottom: 24px; left: 24px; }\n.bottom-right { bottom: 24px; right: 24px; }\n\n\n@media (min-width:768px){\n  .mobile {\n    height: 100vh; /* 避免手機瀏覽器 UI 影響顯示高度 */\n    width: 100vw;\n    overflow: hidden;\n    object-fit: cover;\n    display: none;\n  }\n}\n\n@media (max-width:768px){\n  .mobile{\n    height: 80vh;\n    width: 80vw;\n  }\n  .mobile img{\n    height: 100vh; /* 避免手機瀏覽器 UI 影響顯示高度 */\n    width: 100vw;\n    /* overflow: hidden; */\n    object-fit:cover;\n  }\n}\n\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}